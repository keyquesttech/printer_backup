===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999
=======================
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/printer_data/config/printer.cfg', '-l', '/home/pi/printer_data/logs/klippy.log', '-I', '/home/pi/printer_data/comms/klippy.serial', '-a', '/home/pi/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-142-gb029d046-dirty'
Untracked files: klippy/extras/autotune_tmc.py, klippy/extras/beacon.py, klippy/extras/gcode_shell_command.py, klippy/extras/linear_movement_vibrations.py, klippy/extras/motor_constants.py, klippy/extras/ratos_homing.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Mar 12 2021, 04:06:34) \n[GCC 10.2.1 20210110]'
webhooks client 4129128280: {'program': 'Moonraker', 'version': 'v0.8.0-325-g99b97af'}
=============== Log rollover at Sat Apr 20 18:48:33 2024 ===============
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
MCU error during connect
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/mcu.py", line 769, in _mcu_identify
    self._serial.connect_uart(self._serialport, self._baud, rts)
  File "/home/pi/klipper/klippy/serialhdl.py", line 182, in connect_uart
    self._error("Unable to connect")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Unable to connect

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 176, in _connect
    self.send_event("klippy:mcu_identify")
  File "/home/pi/klipper/klippy/klippy.py", line 263, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/klippy.py", line 263, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/mcu.py", line 774, in _mcu_identify
    raise error(str(e))
mcu.error: mcu 'mcu': Unable to connect
Build file /home/pi/klipper/klippy/../.config(1767): Fri Apr 19 01:36:48 2024
========= Last MCU build config =========
CONFIG_LOW_LEVEL_OPTIONS=y
# CONFIG_MACH_AVR is not set
# CONFIG_MACH_ATSAM is not set
# CONFIG_MACH_ATSAMD is not set
# CONFIG_MACH_LPC176X is not set
# CONFIG_MACH_STM32 is not set
# CONFIG_MACH_HC32F460 is not set
CONFIG_MACH_RP2040=y
# CONFIG_MACH_PRU is not set
# CONFIG_MACH_AR100 is not set
# CONFIG_MACH_LINUX is not set
# CONFIG_MACH_SIMU is not set
CONFIG_BOARD_DIRECTORY="rp2040"
CONFIG_MCU="rp2040"
CONFIG_CLOCK_FREQ=12000000
CONFIG_USBSERIAL=y
CONFIG_FLASH_SIZE=0x200000
CONFIG_FLASH_BOOT_ADDRESS=0x10000100
CONFIG_RAM_START=0x20000000
CONFIG_RAM_SIZE=0x42000
CONFIG_STACK_SIZE=512
CONFIG_FLASH_APPLICATION_ADDRESS=0x10000100
CONFIG_RP2040_SELECT=y
CONFIG_RP2040_HAVE_STAGE2=y
CONFIG_RP2040_FLASH_START_0100=y
# CONFIG_RP2040_FLASH_START_4000 is not set
CONFIG_RP2040_FLASH_W25Q080=y
# CONFIG_RP2040_FLASH_GENERIC_03 is not set
CONFIG_RP2040_STAGE2_FILE="boot2_w25q080.S"
CONFIG_RP2040_STAGE2_CLKDIV=2
CONFIG_RP2040_USB=y
# CONFIG_RP2040_SERIAL_UART0 is not set
# CONFIG_RP2040_CANBUS is not set
# CONFIG_RP2040_USBCANBUS is not set
CONFIG_RP2040_CANBUS_GPIO_RX=4
CONFIG_RP2040_CANBUS_GPIO_TX=5
CONFIG_USB=y
CONFIG_USB_VENDOR_ID=0x1d50
CONFIG_USB_DEVICE_ID=0x614e
CONFIG_USB_SERIAL_NUMBER_CHIPID=y
CONFIG_USB_SERIAL_NUMBER="12345"

#
# USB ids
#
# end of USB ids

CONFIG_WANT_GPIO_BITBANGING=y
CONFIG_WANT_DISPLAYS=y
CONFIG_WANT_SENSORS=y
CONFIG_WANT_LIS2DW=y
CONFIG_WANT_SOFTWARE_I2C=y
CONFIG_WANT_SOFTWARE_SPI=y
CONFIG_NEED_SENSOR_BULK=y
CONFIG_CANBUS_FREQUENCY=1000000
CONFIG_INITIAL_PINS=""
CONFIG_HAVE_GPIO=y
CONFIG_HAVE_GPIO_ADC=y
CONFIG_HAVE_GPIO_SPI=y
CONFIG_HAVE_GPIO_I2C=y
CONFIG_HAVE_GPIO_HARD_PWM=y
CONFIG_HAVE_STRICT_TIMING=y
CONFIG_HAVE_CHIPID=y
CONFIG_HAVE_STEPPER_BOTH_EDGE=y
CONFIG_HAVE_BOOTLOADER_REQUEST=y
CONFIG_INLINE_STEPPER_HACK=y
=======================
Build file /home/pi/klipper/klippy/../out/klipper.dict(8110): Fri Apr 19 01:37:04 2024
Last MCU build version: v0.12.0-142-gb029d046
Last MCU build tools: gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.34-4+rpi1+14) 2.34
Last MCU build config: ADC_MAX=4095 BUS_PINS_i2c0a=gpio0,gpio1 BUS_PINS_i2c0b=gpio4,gpio5 BUS_PINS_i2c0c=gpio8,gpio9 BUS_PINS_i2c0d=gpio12,gpio13 BUS_PINS_i2c0e=gpio16,gpio17 BUS_PINS_i2c0f=gpio20,gpio21 BUS_PINS_i2c0g=gpio24,gpio25 BUS_PINS_i2c0h=gpio28,gpio29 BUS_PINS_i2c1a=gpio2,gpio3 BUS_PINS_i2c1b=gpio6,gpio7 BUS_PINS_i2c1c=gpio10,gpio11 BUS_PINS_i2c1d=gpio14,gpio15 BUS_PINS_i2c1e=gpio18,gpio19 BUS_PINS_i2c1f=gpio22,gpio23 BUS_PINS_i2c1g=gpio26,gpio27 BUS_PINS_spi0a=gpio0,gpio3,gpio2 BUS_PINS_spi0b=gpio4,gpio7,gpio6 BUS_PINS_spi0c=gpio16,gpio19,gpio18 BUS_PINS_spi0d=gpio20,gpio23,gpio22 BUS_PINS_spi1a=gpio8,gpio11,gpio10 BUS_PINS_spi1b=gpio12,gpio15,gpio14 BUS_PINS_spi1c=gpio24,gpio27,gpio26 CLOCK_FREQ=12000000 MCU=rp2040 PWM_MAX=255 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
Build file /home/pi/klipper/klippy/../out/klipper.elf(1780784): Fri Apr 19 01:37:10 2024
Attempting MCU 'mcu' reset
Unhandled exception during post run
Traceback (most recent call last):
  File "/home/pi/klippy-env/lib/python3.9/site-packages/serial/serialposix.py", line 265, in open
    self.fd = os.open(self.portstr, os.O_RDWR | os.O_NOCTTY | os.O_NONBLOCK)
FileNotFoundError: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 234, in run
    self.send_event("klippy:firmware_restart")
  File "/home/pi/klipper/klippy/klippy.py", line 263, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/klippy.py", line 263, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/mcu.py", line 931, in _firmware_restart
    self._restart_arduino()
  File "/home/pi/klipper/klippy/mcu.py", line 891, in _restart_arduino
    serialhdl.arduino_reset(self._serialport, self._reactor)
  File "/home/pi/klipper/klippy/serialhdl.py", line 379, in arduino_reset
    ser = serial.Serial(serialport, 2400, timeout=0, exclusive=True)
  File "/home/pi/klippy-env/lib/python3.9/site-packages/serial/serialutil.py", line 240, in __init__
    self.open()
  File "/home/pi/klippy-env/lib/python3.9/site-packages/serial/serialposix.py", line 268, in open
    raise SerialException(msg.errno, "could not open port {}: {}".format(self._port, msg))
serial.serialutil.SerialException: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
Restarting printer
Start printer at Sat Apr 20 20:09:48 2024 (1713640188.8 4916.6)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
webhooks client 4121935368: New connection
webhooks client 4121935368: Client info {'program': 'Moonraker', 'version': 'v0.8.0-325-g99b97af'}
mcu 'mcu': got {'count': 309, 'sum': 251865, 'sumsq': 1241014, '#name': 'stats', '#sent_time': 4923.342526232, '#receive_time': 4923.393163102}
Loaded MCU 'mcu' 106 commands (v0.12.0-142-gb029d046 / gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.34-4+rpi1+14) 2.34)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1_PB6_PB7=PB6,PB7 BUS_PINS_i2c1_PB8_PB9=PB8,PB9 BUS_PINS_i2c2_PB10_PB11=PB10,PB11 BUS_PINS_i2c3_PA8_PC9=PA8,PC9 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi2a=PC2,PC3,PB10 BUS_PINS_spi3a=PC11,PC12,PC10 BUS_PINS_spi4=PE13,PE14,PE12 BUS_PINS_spi5=PF8,PF9,PF7 BUS_PINS_spi5a=PH7,PF11,PH6 BUS_PINS_spi6=PG12,PG14,PG13 CLOCK_FREQ=400000000 MCU=stm32h723xx PWM_MAX=255 RESERVE_PINS_USB=PA11,PA12 RESERVE_PINS_crystal=PH0,PH1 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
mcu 'rpi': Starting connect
Loaded MCU 'rpi' 112 commands (v0.12.0-142-gb029d046 / gcc: (Raspbian 10.2.1-6+rpi1) 10.2.1 20210110 binutils: (GNU Binutils for Raspbian) 2.35.2)
MCU 'rpi' config: ADC_MAX=4095 CLOCK_FREQ=50000000 MCU=linux PCA9685_MAX=4096 PWM_MAX=32768 STATS_SUMSQ_BASE=256
mcu_temperature 'mcu' nominal base=-273.952569 slope=1618.577075
Sending MCU 'mcu' printer configuration...
Configured MCU 'mcu' (1024 moves)
Sending MCU 'rpi' printer configuration...
Configured MCU 'rpi' (1024 moves)
Starting heater checks for heater_bed
bed_mesh: generated points
Index |  Tool Adjusted  |   Probe
  0   | (40.0, 23.0)    | (10.0, 8.4)
  1   | (57.8, 23.0)    | (27.8, 8.4)
  2   | (75.5, 23.0)    | (45.5, 8.4)
  3   | (93.3, 23.0)    | (63.3, 8.4)
  4   | (111.1, 23.0)   | (81.1, 8.4)
  5   | (128.8, 23.0)   | (98.8, 8.4)
  6   | (146.6, 23.0)   | (116.6, 8.4)
  7   | (164.4, 23.0)   | (134.4, 8.4)
  8   | (182.2, 23.0)   | (152.2, 8.4)
  9   | (199.9, 23.0)   | (169.9, 8.4)
  10  | (199.9, 42.7)   | (169.9, 28.1)
  11  | (182.2, 42.7)   | (152.2, 28.1)
  12  | (164.4, 42.7)   | (134.4, 28.1)
  13  | (146.6, 42.7)   | (116.6, 28.1)
  14  | (128.9, 42.7)   | (98.9, 28.1)
  15  | (111.1, 42.7)   | (81.1, 28.1)
  16  | (93.3, 42.7)    | (63.3, 28.1)
  17  | (75.5, 42.7)    | (45.5, 28.1)
  18  | (57.8, 42.7)    | (27.8, 28.1)
  19  | (40.0, 42.7)    | (10.0, 28.1)
  20  | (40.0, 62.3)    | (10.0, 47.8)
  21  | (57.8, 62.3)    | (27.8, 47.8)
  22  | (75.5, 62.3)    | (45.5, 47.8)
  23  | (93.3, 62.3)    | (63.3, 47.8)
  24  | (111.1, 62.3)   | (81.1, 47.8)
  25  | (128.8, 62.3)   | (98.8, 47.8)
  26  | (146.6, 62.3)   | (116.6, 47.8)
  27  | (164.4, 62.3)   | (134.4, 47.8)
  28  | (182.2, 62.3)   | (152.2, 47.8)
  29  | (199.9, 62.3)   | (169.9, 47.8)
  30  | (199.9, 82.0)   | (169.9, 67.4)
  31  | (182.2, 82.0)   | (152.2, 67.4)
  32  | (164.4, 82.0)   | (134.4, 67.4)
  33  | (146.6, 82.0)   | (116.6, 67.4)
  34  | (128.9, 82.0)   | (98.9, 67.4)
  35  | (111.1, 82.0)   | (81.1, 67.4)
  36  | (93.3, 82.0)    | (63.3, 67.4)
  37  | (75.5, 82.0)    | (45.5, 67.4)
  38  | (57.8, 82.0)    | (27.8, 67.4)
  39  | (40.0, 82.0)    | (10.0, 67.4)
  40  | (40.0, 101.6)   | (10.0, 87.1)
  41  | (57.8, 101.6)   | (27.8, 87.1)
  42  | (75.5, 101.6)   | (45.5, 87.1)
  43  | (93.3, 101.6)   | (63.3, 87.1)
  44  | (111.1, 101.6)  | (81.1, 87.1)
  45  | (128.8, 101.6)  | (98.8, 87.1)
  46  | (146.6, 101.6)  | (116.6, 87.1)
  47  | (164.4, 101.6)  | (134.4, 87.1)
  48  | (182.2, 101.6)  | (152.2, 87.1)
  49  | (199.9, 101.6)  | (169.9, 87.1)
  50  | (199.9, 121.3)  | (169.9, 106.7)
  51  | (182.2, 121.3)  | (152.2, 106.7)
  52  | (164.4, 121.3)  | (134.4, 106.7)
  53  | (146.6, 121.3)  | (116.6, 106.7)
  54  | (128.9, 121.3)  | (98.9, 106.7)
  55  | (111.1, 121.3)  | (81.1, 106.7)
  56  | (93.3, 121.3)   | (63.3, 106.7)
  57  | (75.5, 121.3)   | (45.5, 106.7)
  58  | (57.8, 121.3)   | (27.8, 106.7)
  59  | (40.0, 121.3)   | (10.0, 106.7)
  60  | (40.0, 141.0)   | (10.0, 126.4)
  61  | (57.8, 141.0)   | (27.8, 126.4)
  62  | (75.5, 141.0)   | (45.5, 126.4)
  63  | (93.3, 141.0)   | (63.3, 126.4)
  64  | (111.1, 141.0)  | (81.1, 126.4)
  65  | (128.8, 141.0)  | (98.8, 126.4)
  66  | (146.6, 141.0)  | (116.6, 126.4)
  67  | (164.4, 141.0)  | (134.4, 126.4)
  68  | (182.2, 141.0)  | (152.2, 126.4)
  69  | (199.9, 141.0)  | (169.9, 126.4)
  70  | (199.9, 160.6)  | (169.9, 146.1)
  71  | (182.2, 160.6)  | (152.2, 146.1)
  72  | (164.4, 160.6)  | (134.4, 146.1)
  73  | (146.6, 160.6)  | (116.6, 146.1)
  74  | (128.9, 160.6)  | (98.9, 146.1)
  75  | (111.1, 160.6)  | (81.1, 146.1)
  76  | (93.3, 160.6)   | (63.3, 146.1)
  77  | (75.5, 160.6)   | (45.5, 146.1)
  78  | (57.8, 160.6)   | (27.8, 146.1)
  79  | (40.0, 160.6)   | (10.0, 146.1)
  80  | (40.0, 180.3)   | (10.0, 165.7)
  81  | (57.8, 180.3)   | (27.8, 165.7)
  82  | (75.5, 180.3)   | (45.5, 165.7)
  83  | (93.3, 180.3)   | (63.3, 165.7)
  84  | (111.1, 180.3)  | (81.1, 165.7)
  85  | (128.8, 180.3)  | (98.8, 165.7)
  86  | (146.6, 180.3)  | (116.6, 165.7)
  87  | (164.4, 180.3)  | (134.4, 165.7)
  88  | (182.2, 180.3)  | (152.2, 165.7)
  89  | (199.9, 180.3)  | (169.9, 165.7)
  90  | (199.9, 199.9)  | (169.9, 185.4)
  91  | (182.2, 199.9)  | (152.2, 185.4)
  92  | (164.4, 199.9)  | (134.4, 185.4)
  93  | (146.6, 199.9)  | (116.6, 185.4)
  94  | (128.9, 199.9)  | (98.9, 185.4)
  95  | (111.1, 199.9)  | (81.1, 185.4)
  96  | (93.3, 199.9)   | (63.3, 185.4)
  97  | (75.5, 199.9)   | (45.5, 185.4)
  98  | (57.8, 199.9)   | (27.8, 185.4)
  99  | (40.0, 199.9)   | (10.0, 185.4)
Starting heater checks for extruder
autotune_tmc set stepper_x pwm_freq=0
autotune_tmc stepper_x ncycles=480 pfdcycles=206
autotune_tmc set stepper_x tpfd=2
autotune_tmc set stepper_x tbl=1
autotune_tmc set stepper_x toff=3
autotune_tmc set stepper_x hstrt=7
autotune_tmc set stepper_x hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_x pwm_autoscale=True
autotune_tmc set stepper_x pwm_autograd=True
autotune_tmc set stepper_x pwm_grad=4
autotune_tmc set stepper_x pwm_ofs=10
autotune_tmc set stepper_x pwm_reg=15
autotune_tmc set stepper_x pwm_lim=4
autotune_tmc set stepper_x tpwmthrs=1048575
autotune_tmc set stepper_x en_pwm_mode=False
autotune_tmc set stepper_x tcoolthrs=391(24.0)
autotune_tmc set stepper_x sgt=1
autotune_tmc set stepper_x small_hysteresis=False
autotune_tmc set stepper_x semin=2
autotune_tmc set stepper_x semax=2
autotune_tmc set stepper_x seup=3
autotune_tmc set stepper_x sedn=2
autotune_tmc set stepper_x seimin=0
autotune_tmc set stepper_x sfilt=0
autotune_tmc set stepper_x iholddelay=12
autotune_tmc set stepper_x vhighfs=False
autotune_tmc set stepper_x vhighchm=False
autotune_tmc set stepper_x multistep_filt=True
autotune_tmc set stepper_x1 pwm_freq=0
autotune_tmc stepper_x1 ncycles=480 pfdcycles=206
autotune_tmc set stepper_x1 tpfd=2
autotune_tmc set stepper_x1 tbl=1
autotune_tmc set stepper_x1 toff=3
autotune_tmc set stepper_x1 hstrt=7
autotune_tmc set stepper_x1 hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_x1 pwm_autoscale=True
autotune_tmc set stepper_x1 pwm_autograd=True
autotune_tmc set stepper_x1 pwm_grad=4
autotune_tmc set stepper_x1 pwm_ofs=10
autotune_tmc set stepper_x1 pwm_reg=15
autotune_tmc set stepper_x1 pwm_lim=4
autotune_tmc set stepper_x1 tpwmthrs=1048575
autotune_tmc set stepper_x1 en_pwm_mode=False
autotune_tmc set stepper_x1 tcoolthrs=391(24.0)
autotune_tmc set stepper_x1 sgt=1
autotune_tmc set stepper_x1 small_hysteresis=False
autotune_tmc set stepper_x1 semin=2
autotune_tmc set stepper_x1 semax=2
autotune_tmc set stepper_x1 seup=3
autotune_tmc set stepper_x1 sedn=2
autotune_tmc set stepper_x1 seimin=0
autotune_tmc set stepper_x1 sfilt=0
autotune_tmc set stepper_x1 iholddelay=12
autotune_tmc set stepper_x1 vhighfs=False
autotune_tmc set stepper_x1 vhighchm=False
autotune_tmc set stepper_x1 multistep_filt=True
autotune_tmc set stepper_y pwm_freq=0
autotune_tmc stepper_y ncycles=480 pfdcycles=206
autotune_tmc set stepper_y tpfd=2
autotune_tmc set stepper_y tbl=1
autotune_tmc set stepper_y toff=3
autotune_tmc set stepper_y hstrt=7
autotune_tmc set stepper_y hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_y pwm_autoscale=True
autotune_tmc set stepper_y pwm_autograd=True
autotune_tmc set stepper_y pwm_grad=4
autotune_tmc set stepper_y pwm_ofs=10
autotune_tmc set stepper_y pwm_reg=15
autotune_tmc set stepper_y pwm_lim=4
autotune_tmc set stepper_y tpwmthrs=1048575
autotune_tmc set stepper_y en_pwm_mode=False
autotune_tmc set stepper_y tcoolthrs=391(24.0)
autotune_tmc set stepper_y sgt=1
autotune_tmc set stepper_y small_hysteresis=False
autotune_tmc set stepper_y semin=2
autotune_tmc set stepper_y semax=2
autotune_tmc set stepper_y seup=3
autotune_tmc set stepper_y sedn=2
autotune_tmc set stepper_y seimin=0
autotune_tmc set stepper_y sfilt=0
autotune_tmc set stepper_y iholddelay=12
autotune_tmc set stepper_y vhighfs=False
autotune_tmc set stepper_y vhighchm=False
autotune_tmc set stepper_y multistep_filt=True
autotune_tmc set stepper_y1 pwm_freq=0
autotune_tmc stepper_y1 ncycles=480 pfdcycles=206
autotune_tmc set stepper_y1 tpfd=2
autotune_tmc set stepper_y1 tbl=1
autotune_tmc set stepper_y1 toff=3
autotune_tmc set stepper_y1 hstrt=7
autotune_tmc set stepper_y1 hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_y1 pwm_autoscale=True
autotune_tmc set stepper_y1 pwm_autograd=True
autotune_tmc set stepper_y1 pwm_grad=4
autotune_tmc set stepper_y1 pwm_ofs=10
autotune_tmc set stepper_y1 pwm_reg=15
autotune_tmc set stepper_y1 pwm_lim=4
autotune_tmc set stepper_y1 tpwmthrs=1048575
autotune_tmc set stepper_y1 en_pwm_mode=False
autotune_tmc set stepper_y1 tcoolthrs=391(24.0)
autotune_tmc set stepper_y1 sgt=1
autotune_tmc set stepper_y1 small_hysteresis=False
autotune_tmc set stepper_y1 semin=2
autotune_tmc set stepper_y1 semax=2
autotune_tmc set stepper_y1 seup=3
autotune_tmc set stepper_y1 sedn=2
autotune_tmc set stepper_y1 seimin=0
autotune_tmc set stepper_y1 sfilt=0
autotune_tmc set stepper_y1 iholddelay=12
autotune_tmc set stepper_y1 vhighfs=False
autotune_tmc set stepper_y1 vhighchm=False
autotune_tmc set stepper_y1 multistep_filt=True
autotune_tmc set stepper_z pwm_freq=0
autotune_tmc stepper_z ncycles=480 pfdcycles=206
autotune_tmc set stepper_z tbl=1
autotune_tmc set stepper_z toff=3
autotune_tmc set stepper_z hstrt=7
autotune_tmc set stepper_z hend=9
autotune_tmc set stepper_z sgthrs=40
autotune_tmc using max PWM speed 43.108253
autotune_tmc set stepper_z pwm_autoscale=True
autotune_tmc set stepper_z pwm_autograd=True
autotune_tmc set stepper_z pwm_grad=7
autotune_tmc set stepper_z pwm_ofs=18
autotune_tmc set stepper_z pwm_reg=15
autotune_tmc set stepper_z pwm_lim=4
autotune_tmc set stepper_z tpwmthrs=1048575
autotune_tmc set stepper_z en_spreadcycle=True
autotune_tmc set stepper_z tcoolthrs=391(2.4)
autotune_tmc set stepper_z semin=2
autotune_tmc set stepper_z semax=2
autotune_tmc set stepper_z seup=3
autotune_tmc set stepper_z sedn=2
autotune_tmc set stepper_z seimin=0
autotune_tmc set stepper_z iholddelay=12
autotune_tmc set stepper_z multistep_filt=True
autotune_tmc set stepper_z1 pwm_freq=0
autotune_tmc stepper_z1 ncycles=480 pfdcycles=206
autotune_tmc set stepper_z1 tbl=1
autotune_tmc set stepper_z1 toff=3
autotune_tmc set stepper_z1 hstrt=7
autotune_tmc set stepper_z1 hend=9
autotune_tmc set stepper_z1 sgthrs=40
autotune_tmc using max PWM speed 43.108253
autotune_tmc set stepper_z1 pwm_autoscale=True
autotune_tmc set stepper_z1 pwm_autograd=True
autotune_tmc set stepper_z1 pwm_grad=7
autotune_tmc set stepper_z1 pwm_ofs=18
autotune_tmc set stepper_z1 pwm_reg=15
autotune_tmc set stepper_z1 pwm_lim=4
autotune_tmc set stepper_z1 tpwmthrs=1048575
autotune_tmc set stepper_z1 en_spreadcycle=True
autotune_tmc set stepper_z1 tcoolthrs=391(2.4)
autotune_tmc set stepper_z1 semin=2
autotune_tmc set stepper_z1 semax=2
autotune_tmc set stepper_z1 seup=3
autotune_tmc set stepper_z1 sedn=2
autotune_tmc set stepper_z1 seimin=0
autotune_tmc set stepper_z1 iholddelay=12
autotune_tmc set stepper_z1 multistep_filt=True
autotune_tmc set stepper_z2 pwm_freq=0
autotune_tmc stepper_z2 ncycles=480 pfdcycles=206
autotune_tmc set stepper_z2 tbl=1
autotune_tmc set stepper_z2 toff=3
autotune_tmc set stepper_z2 hstrt=7
autotune_tmc set stepper_z2 hend=9
autotune_tmc set stepper_z2 sgthrs=40
autotune_tmc using max PWM speed 43.108253
autotune_tmc set stepper_z2 pwm_autoscale=True
autotune_tmc set stepper_z2 pwm_autograd=True
autotune_tmc set stepper_z2 pwm_grad=7
autotune_tmc set stepper_z2 pwm_ofs=18
autotune_tmc set stepper_z2 pwm_reg=15
autotune_tmc set stepper_z2 pwm_lim=4
autotune_tmc set stepper_z2 tpwmthrs=1048575
autotune_tmc set stepper_z2 en_spreadcycle=True
autotune_tmc set stepper_z2 tcoolthrs=391(2.4)
autotune_tmc set stepper_z2 semin=2
autotune_tmc set stepper_z2 semax=2
autotune_tmc set stepper_z2 seup=3
autotune_tmc set stepper_z2 sedn=2
autotune_tmc set stepper_z2 seimin=0
autotune_tmc set stepper_z2 iholddelay=12
autotune_tmc set stepper_z2 multistep_filt=True
Stats 4925.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=9327 bytes_read=12205 bytes_retransmit=9 bytes_invalid=0 send_seq=640 receive_seq=640 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400023640 rpi: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=822 bytes_read=17161 bytes_retransmit=0 bytes_invalid=0 send_seq=112 receive_seq=112 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49997422 adj=49987408 Octopus_Max: temp=31.6 Pi: temp=36.5  heater_bed: target=0 temp=0.0 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.02 cputime=8.429 memavail=7496752 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=0.0 pwm=0.000
webhooks: registering remote method 'shutdown_machine' for connection id: 4121935368
webhooks: registering remote method 'reboot_machine' for connection id: 4121935368
webhooks: registering remote method 'pause_job_queue' for connection id: 4121935368
webhooks: registering remote method 'start_job_queue' for connection id: 4121935368
webhooks: registering remote method 'set_device_power' for connection id: 4121935368
Stats 4926.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=9333 bytes_read=12487 bytes_retransmit=9 bytes_invalid=0 send_seq=641 receive_seq=641 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400025193 rpi: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=828 bytes_read=17177 bytes_retransmit=0 bytes_invalid=0 send_seq=113 receive_seq=113 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49998503 adj=49998095 Octopus_Max: temp=31.8 Pi: temp=38.0  heater_bed: target=0 temp=26.1 pwm=0.000 bed_mat: temp=25.6 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.02 cputime=8.471 memavail=7496064 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4927.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=9339 bytes_read=12769 bytes_retransmit=9 bytes_invalid=0 send_seq=642 receive_seq=642 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400026141 rpi: mcu_awake=0.005 mcu_task_avg=0.000036 mcu_task_stddev=0.000029 bytes_write=834 bytes_read=17208 bytes_retransmit=0 bytes_invalid=0 send_seq=114 receive_seq=114 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49998762 adj=49998747 Octopus_Max: temp=31.9 Pi: temp=37.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.02 cputime=8.483 memavail=7496080 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4928.8: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000009 mcu_task_stddev=0.000064 bytes_write=9345 bytes_read=13092 bytes_retransmit=9 bytes_invalid=0 send_seq=643 receive_seq=643 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400027057 rpi: mcu_awake=0.005 mcu_task_avg=0.000036 mcu_task_stddev=0.000029 bytes_write=840 bytes_read=17224 bytes_retransmit=0 bytes_invalid=0 send_seq=115 receive_seq=115 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49998956 adj=49998167 Octopus_Max: temp=31.9 Pi: temp=37.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.5 barrow: temp=-110.0 sysload=0.02 cputime=8.501 memavail=7495656 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.0 pwm=0.000
Stats 4929.8: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000009 mcu_task_stddev=0.000064 bytes_write=9351 bytes_read=13361 bytes_retransmit=9 bytes_invalid=0 send_seq=644 receive_seq=644 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028041 rpi: mcu_awake=0.005 mcu_task_avg=0.000036 mcu_task_stddev=0.000029 bytes_write=846 bytes_read=17240 bytes_retransmit=0 bytes_invalid=0 send_seq=116 receive_seq=116 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999474 adj=49997666 Octopus_Max: temp=32.0 Pi: temp=36.5  heater_bed: target=0 temp=26.1 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.5 barrow: temp=-119.3 sysload=0.02 cputime=8.530 memavail=7495688 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4930.8: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000009 mcu_task_stddev=0.000064 bytes_write=9357 bytes_read=13643 bytes_retransmit=9 bytes_invalid=0 send_seq=645 receive_seq=645 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028549 rpi: mcu_awake=0.005 mcu_task_avg=0.000036 mcu_task_stddev=0.000029 bytes_write=852 bytes_read=17256 bytes_retransmit=0 bytes_invalid=0 send_seq=117 receive_seq=117 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999667 adj=49998117 Octopus_Max: temp=32.1 Pi: temp=38.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.02 cputime=8.556 memavail=7495688 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4931.8: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000009 mcu_task_stddev=0.000064 bytes_write=9363 bytes_read=13955 bytes_retransmit=9 bytes_invalid=0 send_seq=646 receive_seq=646 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028807 rpi: mcu_awake=0.005 mcu_task_avg=0.000036 mcu_task_stddev=0.000029 bytes_write=858 bytes_read=17272 bytes_retransmit=0 bytes_invalid=0 send_seq=118 receive_seq=118 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999836 adj=49997927 Octopus_Max: temp=32.0 Pi: temp=37.0  heater_bed: target=0 temp=26.1 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.6 barrow: temp=-110.0 sysload=0.02 cputime=8.584 memavail=7495688 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.1 pwm=0.000
Stats 4932.8: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000009 mcu_task_stddev=0.000064 bytes_write=9369 bytes_read=14237 bytes_retransmit=9 bytes_invalid=0 send_seq=647 receive_seq=647 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028889 rpi: mcu_awake=0.001 mcu_task_avg=0.000017 mcu_task_stddev=0.000017 bytes_write=864 bytes_read=17301 bytes_retransmit=0 bytes_invalid=0 send_seq=119 receive_seq=119 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999920 adj=49997873 Octopus_Max: temp=32.2 Pi: temp=36.0  heater_bed: target=0 temp=26.1 pwm=0.000 bed_mat: temp=25.6 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.02 cputime=8.612 memavail=7495688 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4933.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9375 bytes_read=14548 bytes_retransmit=9 bytes_invalid=0 send_seq=648 receive_seq=648 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029644 rpi: mcu_awake=0.001 mcu_task_avg=0.000017 mcu_task_stddev=0.000017 bytes_write=870 bytes_read=17317 bytes_retransmit=0 bytes_invalid=0 send_seq=120 receive_seq=120 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999887 adj=49997698 Octopus_Max: temp=32.3 Pi: temp=36.0  heater_bed: target=0 temp=26.1 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.02 cputime=8.641 memavail=7495464 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4934.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9381 bytes_read=14845 bytes_retransmit=9 bytes_invalid=0 send_seq=649 receive_seq=649 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029457 rpi: mcu_awake=0.001 mcu_task_avg=0.000017 mcu_task_stddev=0.000017 bytes_write=876 bytes_read=17333 bytes_retransmit=0 bytes_invalid=0 send_seq=121 receive_seq=121 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999886 adj=49996905 Octopus_Max: temp=32.4 Pi: temp=37.5  heater_bed: target=0 temp=26.1 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.02 cputime=8.667 memavail=7495244 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4935.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9387 bytes_read=15127 bytes_retransmit=9 bytes_invalid=0 send_seq=650 receive_seq=650 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029293 rpi: mcu_awake=0.001 mcu_task_avg=0.000017 mcu_task_stddev=0.000017 bytes_write=888 bytes_read=17365 bytes_retransmit=0 bytes_invalid=0 send_seq=123 receive_seq=123 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999806 adj=49996807 Octopus_Max: temp=32.3 Pi: temp=36.5  heater_bed: target=0 temp=26.1 pwm=0.000 bed_mat: temp=25.6 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.02 cputime=8.693 memavail=7495244 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4936.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9393 bytes_read=15424 bytes_retransmit=9 bytes_invalid=0 send_seq=651 receive_seq=651 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029161 rpi: mcu_awake=0.001 mcu_task_avg=0.000017 mcu_task_stddev=0.000017 bytes_write=894 bytes_read=17381 bytes_retransmit=0 bytes_invalid=0 send_seq=124 receive_seq=124 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999815 adj=49996430 Octopus_Max: temp=32.3 Pi: temp=36.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-103.8 sysload=0.02 cputime=8.721 memavail=7495244 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4937.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9399 bytes_read=15721 bytes_retransmit=9 bytes_invalid=0 send_seq=652 receive_seq=652 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029073 rpi: mcu_awake=0.001 mcu_task_avg=0.000017 mcu_task_stddev=0.000017 bytes_write=900 bytes_read=17397 bytes_retransmit=0 bytes_invalid=0 send_seq=125 receive_seq=125 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999844 adj=49996465 Octopus_Max: temp=32.4 Pi: temp=37.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.5 barrow: temp=-119.3 sysload=0.02 cputime=8.748 memavail=7495244 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4938.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9405 bytes_read=16017 bytes_retransmit=9 bytes_invalid=0 send_seq=653 receive_seq=653 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028974 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000022 bytes_write=906 bytes_read=17426 bytes_retransmit=0 bytes_invalid=0 send_seq=126 receive_seq=126 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999836 adj=49996563 Octopus_Max: temp=32.6 Pi: temp=36.0  heater_bed: target=0 temp=26.1 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-103.8 sysload=0.02 cputime=8.776 memavail=7495244 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.1 pwm=0.000
Stats 4939.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9411 bytes_read=16307 bytes_retransmit=9 bytes_invalid=0 send_seq=654 receive_seq=654 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028872 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000022 bytes_write=912 bytes_read=17442 bytes_retransmit=0 bytes_invalid=0 send_seq=127 receive_seq=127 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999846 adj=49996493 Octopus_Max: temp=32.5 Pi: temp=36.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.02 cputime=8.804 memavail=7495244 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4940.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9417 bytes_read=16597 bytes_retransmit=9 bytes_invalid=0 send_seq=655 receive_seq=655 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028894 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000022 bytes_write=918 bytes_read=17458 bytes_retransmit=0 bytes_invalid=0 send_seq=128 receive_seq=128 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999820 adj=49996533 Octopus_Max: temp=32.7 Pi: temp=37.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.02 cputime=8.832 memavail=7495244 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.3 pwm=0.000
Stats 4941.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9423 bytes_read=16879 bytes_retransmit=9 bytes_invalid=0 send_seq=656 receive_seq=656 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028838 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000022 bytes_write=924 bytes_read=17474 bytes_retransmit=0 bytes_invalid=0 send_seq=129 receive_seq=129 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999810 adj=49996321 Octopus_Max: temp=32.7 Pi: temp=36.0  heater_bed: target=0 temp=26.1 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-110.0 sysload=0.02 cputime=8.859 memavail=7495244 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.3 pwm=0.000
Stats 4942.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9429 bytes_read=17176 bytes_retransmit=9 bytes_invalid=0 send_seq=657 receive_seq=657 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028839 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000022 bytes_write=930 bytes_read=17490 bytes_retransmit=0 bytes_invalid=0 send_seq=130 receive_seq=130 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999796 adj=49996276 Octopus_Max: temp=32.7 Pi: temp=36.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.02 cputime=8.888 memavail=7495244 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4943.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9435 bytes_read=17487 bytes_retransmit=9 bytes_invalid=0 send_seq=658 receive_seq=658 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028934 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=936 bytes_read=17519 bytes_retransmit=0 bytes_invalid=0 send_seq=131 receive_seq=131 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999799 adj=49996182 Octopus_Max: temp=32.7 Pi: temp=36.5  heater_bed: target=0 temp=26.1 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.5 barrow: temp=-119.3 sysload=0.02 cputime=8.915 memavail=7494992 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4944.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9441 bytes_read=17769 bytes_retransmit=9 bytes_invalid=0 send_seq=659 receive_seq=659 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028859 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=942 bytes_read=17535 bytes_retransmit=0 bytes_invalid=0 send_seq=132 receive_seq=132 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999752 adj=49996135 Octopus_Max: temp=32.7 Pi: temp=36.5  heater_bed: target=0 temp=26.1 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.5 barrow: temp=-110.0 sysload=0.02 cputime=8.936 memavail=7489248 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.1 pwm=0.000
Stats 4945.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9447 bytes_read=18080 bytes_retransmit=9 bytes_invalid=0 send_seq=660 receive_seq=660 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028687 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=948 bytes_read=17551 bytes_retransmit=0 bytes_invalid=0 send_seq=133 receive_seq=133 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999704 adj=49995935 Octopus_Max: temp=32.9 Pi: temp=36.0  heater_bed: target=0 temp=26.1 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.02 cputime=8.948 memavail=7495144 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4946.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9453 bytes_read=18363 bytes_retransmit=9 bytes_invalid=0 send_seq=661 receive_seq=661 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028543 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=954 bytes_read=17567 bytes_retransmit=0 bytes_invalid=0 send_seq=134 receive_seq=134 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999662 adj=49995837 Octopus_Max: temp=32.9 Pi: temp=36.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.02 cputime=8.960 memavail=7495144 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.1 pwm=0.000
Stats 4947.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9459 bytes_read=18645 bytes_retransmit=9 bytes_invalid=0 send_seq=662 receive_seq=662 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028540 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=960 bytes_read=17583 bytes_retransmit=0 bytes_invalid=0 send_seq=135 receive_seq=135 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999627 adj=49995765 Octopus_Max: temp=32.9 Pi: temp=36.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.02 cputime=8.972 memavail=7495144 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.1 pwm=0.000
Stats 4948.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9465 bytes_read=18970 bytes_retransmit=9 bytes_invalid=0 send_seq=663 receive_seq=663 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028441 rpi: mcu_awake=0.001 mcu_task_avg=0.000012 mcu_task_stddev=0.000015 bytes_write=966 bytes_read=17612 bytes_retransmit=0 bytes_invalid=0 send_seq=136 receive_seq=136 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999599 adj=49995630 Octopus_Max: temp=33.0 Pi: temp=36.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.02 cputime=8.984 memavail=7495144 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.1 pwm=0.000
Stats 4949.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9471 bytes_read=19253 bytes_retransmit=9 bytes_invalid=0 send_seq=664 receive_seq=664 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028362 rpi: mcu_awake=0.001 mcu_task_avg=0.000012 mcu_task_stddev=0.000015 bytes_write=972 bytes_read=17628 bytes_retransmit=0 bytes_invalid=0 send_seq=137 receive_seq=137 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999600 adj=49995639 Octopus_Max: temp=33.0 Pi: temp=37.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.02 cputime=9.003 memavail=7495144 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.3 pwm=0.000
Stats 4950.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9477 bytes_read=19525 bytes_retransmit=9 bytes_invalid=0 send_seq=665 receive_seq=665 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028351 rpi: mcu_awake=0.001 mcu_task_avg=0.000012 mcu_task_stddev=0.000015 bytes_write=978 bytes_read=17644 bytes_retransmit=0 bytes_invalid=0 send_seq=138 receive_seq=138 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999606 adj=49995815 Octopus_Max: temp=33.0 Pi: temp=37.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.02 cputime=9.030 memavail=7495144 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4951.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9483 bytes_read=19835 bytes_retransmit=9 bytes_invalid=0 send_seq=666 receive_seq=666 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028341 rpi: mcu_awake=0.001 mcu_task_avg=0.000012 mcu_task_stddev=0.000015 bytes_write=984 bytes_read=17660 bytes_retransmit=0 bytes_invalid=0 send_seq=139 receive_seq=139 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999607 adj=49995927 Octopus_Max: temp=33.1 Pi: temp=37.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.6 barrow: temp=-110.0 sysload=0.02 cputime=9.058 memavail=7495144 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4952.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9489 bytes_read=20118 bytes_retransmit=9 bytes_invalid=0 send_seq=667 receive_seq=667 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028462 rpi: mcu_awake=0.001 mcu_task_avg=0.000012 mcu_task_stddev=0.000015 bytes_write=990 bytes_read=17676 bytes_retransmit=0 bytes_invalid=0 send_seq=140 receive_seq=140 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999608 adj=49995978 Octopus_Max: temp=33.1 Pi: temp=36.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.02 cputime=9.087 memavail=7495152 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.0 pwm=0.000
Stats 4953.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9495 bytes_read=20414 bytes_retransmit=9 bytes_invalid=0 send_seq=668 receive_seq=668 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028485 rpi: mcu_awake=0.001 mcu_task_avg=0.000015 mcu_task_stddev=0.000017 bytes_write=996 bytes_read=17705 bytes_retransmit=0 bytes_invalid=0 send_seq=141 receive_seq=141 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999610 adj=49995891 Octopus_Max: temp=33.2 Pi: temp=36.0  heater_bed: target=0 temp=26.1 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-110.0 sysload=0.02 cputime=9.115 memavail=7494928 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.1 pwm=0.000
Stats 4954.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9501 bytes_read=20725 bytes_retransmit=9 bytes_invalid=0 send_seq=669 receive_seq=669 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028491 rpi: mcu_awake=0.001 mcu_task_avg=0.000015 mcu_task_stddev=0.000017 bytes_write=1002 bytes_read=17721 bytes_retransmit=0 bytes_invalid=0 send_seq=142 receive_seq=142 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999618 adj=49995931 Octopus_Max: temp=33.2 Pi: temp=36.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.01 cputime=9.143 memavail=7494936 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4955.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9507 bytes_read=21008 bytes_retransmit=9 bytes_invalid=0 send_seq=670 receive_seq=670 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028508 rpi: mcu_awake=0.001 mcu_task_avg=0.000015 mcu_task_stddev=0.000017 bytes_write=1008 bytes_read=17737 bytes_retransmit=0 bytes_invalid=0 send_seq=143 receive_seq=143 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999637 adj=49996015 Octopus_Max: temp=33.3 Pi: temp=36.5  heater_bed: target=0 temp=26.1 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.01 cputime=9.171 memavail=7494936 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.1 pwm=0.000
Stats 4956.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9513 bytes_read=21290 bytes_retransmit=9 bytes_invalid=0 send_seq=671 receive_seq=671 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028499 rpi: mcu_awake=0.001 mcu_task_avg=0.000015 mcu_task_stddev=0.000017 bytes_write=1014 bytes_read=17753 bytes_retransmit=0 bytes_invalid=0 send_seq=144 receive_seq=144 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999643 adj=49996151 Octopus_Max: temp=33.4 Pi: temp=36.0  heater_bed: target=0 temp=26.1 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.01 cputime=9.199 memavail=7494936 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.1 pwm=0.000
Stats 4957.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9519 bytes_read=21601 bytes_retransmit=9 bytes_invalid=0 send_seq=672 receive_seq=672 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028483 rpi: mcu_awake=0.001 mcu_task_avg=0.000015 mcu_task_stddev=0.000017 bytes_write=1020 bytes_read=17769 bytes_retransmit=0 bytes_invalid=0 send_seq=145 receive_seq=145 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999650 adj=49996190 Octopus_Max: temp=33.3 Pi: temp=35.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.01 cputime=9.227 memavail=7494944 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4958.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9525 bytes_read=21898 bytes_retransmit=9 bytes_invalid=0 send_seq=673 receive_seq=673 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028474 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=1026 bytes_read=17798 bytes_retransmit=0 bytes_invalid=0 send_seq=146 receive_seq=146 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999657 adj=49996228 Octopus_Max: temp=33.4 Pi: temp=36.5  heater_bed: target=0 temp=26.1 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.01 cputime=9.256 memavail=7494944 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4959.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9531 bytes_read=22180 bytes_retransmit=9 bytes_invalid=0 send_seq=674 receive_seq=674 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028448 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=1032 bytes_read=17814 bytes_retransmit=0 bytes_invalid=0 send_seq=147 receive_seq=147 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999647 adj=49996260 Octopus_Max: temp=33.3 Pi: temp=36.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.6 bed_core: temp=26.7 barrow: temp=-110.0 sysload=0.01 cputime=9.282 memavail=7494944 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4960.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9537 bytes_read=22491 bytes_retransmit=9 bytes_invalid=0 send_seq=675 receive_seq=675 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028438 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=1038 bytes_read=17830 bytes_retransmit=0 bytes_invalid=0 send_seq=148 receive_seq=148 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999648 adj=49996165 Octopus_Max: temp=33.3 Pi: temp=36.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.01 cputime=9.308 memavail=7489152 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.3 pwm=0.000
b'Got EOF when reading from device'
Stats 4961.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9543 bytes_read=22575 bytes_retransmit=9 bytes_invalid=0 send_seq=676 receive_seq=676 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028397 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=1044 bytes_read=17846 bytes_retransmit=0 bytes_invalid=0 send_seq=149 receive_seq=149 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999629 adj=49996167 Octopus_Max: temp=33.3 Pi: temp=37.5  heater_bed: target=0 temp=26.1 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.01 cputime=9.319 memavail=7494804 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4962.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9543 bytes_read=22575 bytes_retransmit=9 bytes_invalid=0 send_seq=676 receive_seq=676 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=2 freq=400028397 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=1050 bytes_read=17862 bytes_retransmit=0 bytes_invalid=0 send_seq=150 receive_seq=150 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999613 adj=49996034 Octopus_Max: temp=33.3 Pi: temp=37.0  heater_bed: target=0 temp=26.1 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.01 cputime=9.329 memavail=7586128 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
webhooks client 4121935368: Disconnected
Starting Klippy...
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/printer_data/config/printer.cfg', '-l', '/home/pi/printer_data/logs/klippy.log', '-I', '/home/pi/printer_data/comms/klippy.serial', '-a', '/home/pi/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-142-gb029d046-dirty'
Untracked files: klippy/extras/autotune_tmc.py, klippy/extras/beacon.py, klippy/extras/gcode_shell_command.py, klippy/extras/linear_movement_vibrations.py, klippy/extras/motor_constants.py, klippy/extras/ratos_homing.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Mar 12 2021, 04:06:34) \n[GCC 10.2.1 20210110]'
Start printer at Sat Apr 20 20:10:56 2024 (1713640256.2 23.7)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
webhooks client 4127517808: New connection
webhooks client 4127517808: Client info {'program': 'Moonraker', 'version': 'v0.8.0-325-g99b97af'}
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
MCU error during connect
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/mcu.py", line 769, in _mcu_identify
    self._serial.connect_uart(self._serialport, self._baud, rts)
  File "/home/pi/klipper/klippy/serialhdl.py", line 182, in connect_uart
    self._error("Unable to connect")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Unable to connect

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 176, in _connect
    self.send_event("klippy:mcu_identify")
  File "/home/pi/klipper/klippy/klippy.py", line 263, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/klippy.py", line 263, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/mcu.py", line 774, in _mcu_identify
    raise error(str(e))
mcu.error: mcu 'mcu': Unable to connect
Build file /home/pi/klipper/klippy/../.config(1767): Fri Apr 19 01:36:48 2024
========= Last MCU build config =========
CONFIG_LOW_LEVEL_OPTIONS=y
# CONFIG_MACH_AVR is not set
# CONFIG_MACH_ATSAM is not set
# CONFIG_MACH_ATSAMD is not set
# CONFIG_MACH_LPC176X is not set
# CONFIG_MACH_STM32 is not set
# CONFIG_MACH_HC32F460 is not set
CONFIG_MACH_RP2040=y
# CONFIG_MACH_PRU is not set
# CONFIG_MACH_AR100 is not set
# CONFIG_MACH_LINUX is not set
# CONFIG_MACH_SIMU is not set
CONFIG_BOARD_DIRECTORY="rp2040"
CONFIG_MCU="rp2040"
CONFIG_CLOCK_FREQ=12000000
CONFIG_USBSERIAL=y
CONFIG_FLASH_SIZE=0x200000
CONFIG_FLASH_BOOT_ADDRESS=0x10000100
CONFIG_RAM_START=0x20000000
CONFIG_RAM_SIZE=0x42000
CONFIG_STACK_SIZE=512
CONFIG_FLASH_APPLICATION_ADDRESS=0x10000100
CONFIG_RP2040_SELECT=y
CONFIG_RP2040_HAVE_STAGE2=y
CONFIG_RP2040_FLASH_START_0100=y
# CONFIG_RP2040_FLASH_START_4000 is not set
CONFIG_RP2040_FLASH_W25Q080=y
# CONFIG_RP2040_FLASH_GENERIC_03 is not set
CONFIG_RP2040_STAGE2_FILE="boot2_w25q080.S"
CONFIG_RP2040_STAGE2_CLKDIV=2
CONFIG_RP2040_USB=y
# CONFIG_RP2040_SERIAL_UART0 is not set
# CONFIG_RP2040_CANBUS is not set
# CONFIG_RP2040_USBCANBUS is not set
CONFIG_RP2040_CANBUS_GPIO_RX=4
CONFIG_RP2040_CANBUS_GPIO_TX=5
CONFIG_USB=y
CONFIG_USB_VENDOR_ID=0x1d50
CONFIG_USB_DEVICE_ID=0x614e
CONFIG_USB_SERIAL_NUMBER_CHIPID=y
CONFIG_USB_SERIAL_NUMBER="12345"

#
# USB ids
#
# end of USB ids

CONFIG_WANT_GPIO_BITBANGING=y
CONFIG_WANT_DISPLAYS=y
CONFIG_WANT_SENSORS=y
CONFIG_WANT_LIS2DW=y
CONFIG_WANT_SOFTWARE_I2C=y
CONFIG_WANT_SOFTWARE_SPI=y
CONFIG_NEED_SENSOR_BULK=y
CONFIG_CANBUS_FREQUENCY=1000000
CONFIG_INITIAL_PINS=""
CONFIG_HAVE_GPIO=y
CONFIG_HAVE_GPIO_ADC=y
CONFIG_HAVE_GPIO_SPI=y
CONFIG_HAVE_GPIO_I2C=y
CONFIG_HAVE_GPIO_HARD_PWM=y
CONFIG_HAVE_STRICT_TIMING=y
CONFIG_HAVE_CHIPID=y
CONFIG_HAVE_STEPPER_BOTH_EDGE=y
CONFIG_HAVE_BOOTLOADER_REQUEST=y
CONFIG_INLINE_STEPPER_HACK=y
=======================
Build file /home/pi/klipper/klippy/../out/klipper.dict(8110): Fri Apr 19 01:37:04 2024
Last MCU build version: v0.12.0-142-gb029d046
Last MCU build tools: gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.34-4+rpi1+14) 2.34
Last MCU build config: ADC_MAX=4095 BUS_PINS_i2c0a=gpio0,gpio1 BUS_PINS_i2c0b=gpio4,gpio5 BUS_PINS_i2c0c=gpio8,gpio9 BUS_PINS_i2c0d=gpio12,gpio13 BUS_PINS_i2c0e=gpio16,gpio17 BUS_PINS_i2c0f=gpio20,gpio21 BUS_PINS_i2c0g=gpio24,gpio25 BUS_PINS_i2c0h=gpio28,gpio29 BUS_PINS_i2c1a=gpio2,gpio3 BUS_PINS_i2c1b=gpio6,gpio7 BUS_PINS_i2c1c=gpio10,gpio11 BUS_PINS_i2c1d=gpio14,gpio15 BUS_PINS_i2c1e=gpio18,gpio19 BUS_PINS_i2c1f=gpio22,gpio23 BUS_PINS_i2c1g=gpio26,gpio27 BUS_PINS_spi0a=gpio0,gpio3,gpio2 BUS_PINS_spi0b=gpio4,gpio7,gpio6 BUS_PINS_spi0c=gpio16,gpio19,gpio18 BUS_PINS_spi0d=gpio20,gpio23,gpio22 BUS_PINS_spi1a=gpio8,gpio11,gpio10 BUS_PINS_spi1b=gpio12,gpio15,gpio14 BUS_PINS_spi1c=gpio24,gpio27,gpio26 CLOCK_FREQ=12000000 MCU=rp2040 PWM_MAX=255 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
Build file /home/pi/klipper/klippy/../out/klipper.elf(1780784): Fri Apr 19 01:37:10 2024
Starting Klippy...
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/printer_data/config/printer.cfg', '-l', '/home/pi/printer_data/logs/klippy.log', '-I', '/home/pi/printer_data/comms/klippy.serial', '-a', '/home/pi/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-142-gb029d046-dirty'
Untracked files: klippy/extras/autotune_tmc.py, klippy/extras/beacon.py, klippy/extras/gcode_shell_command.py, klippy/extras/linear_movement_vibrations.py, klippy/extras/motor_constants.py, klippy/extras/ratos_homing.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Mar 12 2021, 04:06:34) \n[GCC 10.2.1 20210110]'
Start printer at Sat Apr 20 20:58:53 2024 (1713643133.8 23.6)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
webhooks client 4131225312: New connection
webhooks client 4131225312: Client info {'program': 'Moonraker', 'version': 'v0.8.0-325-g99b97af'}
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
MCU error during connect
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/mcu.py", line 769, in _mcu_identify
    self._serial.connect_uart(self._serialport, self._baud, rts)
  File "/home/pi/klipper/klippy/serialhdl.py", line 182, in connect_uart
    self._error("Unable to connect")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Unable to connect

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 176, in _connect
    self.send_event("klippy:mcu_identify")
  File "/home/pi/klipper/klippy/klippy.py", line 263, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/klippy.py", line 263, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/mcu.py", line 774, in _mcu_identify
    raise error(str(e))
mcu.error: mcu 'mcu': Unable to connect
Build file /home/pi/klipper/klippy/../.config(1767): Fri Apr 19 01:36:48 2024
========= Last MCU build config =========
CONFIG_LOW_LEVEL_OPTIONS=y
# CONFIG_MACH_AVR is not set
# CONFIG_MACH_ATSAM is not set
# CONFIG_MACH_ATSAMD is not set
# CONFIG_MACH_LPC176X is not set
# CONFIG_MACH_STM32 is not set
# CONFIG_MACH_HC32F460 is not set
CONFIG_MACH_RP2040=y
# CONFIG_MACH_PRU is not set
# CONFIG_MACH_AR100 is not set
# CONFIG_MACH_LINUX is not set
# CONFIG_MACH_SIMU is not set
CONFIG_BOARD_DIRECTORY="rp2040"
CONFIG_MCU="rp2040"
CONFIG_CLOCK_FREQ=12000000
CONFIG_USBSERIAL=y
CONFIG_FLASH_SIZE=0x200000
CONFIG_FLASH_BOOT_ADDRESS=0x10000100
CONFIG_RAM_START=0x20000000
CONFIG_RAM_SIZE=0x42000
CONFIG_STACK_SIZE=512
CONFIG_FLASH_APPLICATION_ADDRESS=0x10000100
CONFIG_RP2040_SELECT=y
CONFIG_RP2040_HAVE_STAGE2=y
CONFIG_RP2040_FLASH_START_0100=y
# CONFIG_RP2040_FLASH_START_4000 is not set
CONFIG_RP2040_FLASH_W25Q080=y
# CONFIG_RP2040_FLASH_GENERIC_03 is not set
CONFIG_RP2040_STAGE2_FILE="boot2_w25q080.S"
CONFIG_RP2040_STAGE2_CLKDIV=2
CONFIG_RP2040_USB=y
# CONFIG_RP2040_SERIAL_UART0 is not set
# CONFIG_RP2040_CANBUS is not set
# CONFIG_RP2040_USBCANBUS is not set
CONFIG_RP2040_CANBUS_GPIO_RX=4
CONFIG_RP2040_CANBUS_GPIO_TX=5
CONFIG_USB=y
CONFIG_USB_VENDOR_ID=0x1d50
CONFIG_USB_DEVICE_ID=0x614e
CONFIG_USB_SERIAL_NUMBER_CHIPID=y
CONFIG_USB_SERIAL_NUMBER="12345"

#
# USB ids
#
# end of USB ids

CONFIG_WANT_GPIO_BITBANGING=y
CONFIG_WANT_DISPLAYS=y
CONFIG_WANT_SENSORS=y
CONFIG_WANT_LIS2DW=y
CONFIG_WANT_SOFTWARE_I2C=y
CONFIG_WANT_SOFTWARE_SPI=y
CONFIG_NEED_SENSOR_BULK=y
CONFIG_CANBUS_FREQUENCY=1000000
CONFIG_INITIAL_PINS=""
CONFIG_HAVE_GPIO=y
CONFIG_HAVE_GPIO_ADC=y
CONFIG_HAVE_GPIO_SPI=y
CONFIG_HAVE_GPIO_I2C=y
CONFIG_HAVE_GPIO_HARD_PWM=y
CONFIG_HAVE_STRICT_TIMING=y
CONFIG_HAVE_CHIPID=y
CONFIG_HAVE_STEPPER_BOTH_EDGE=y
CONFIG_HAVE_BOOTLOADER_REQUEST=y
CONFIG_INLINE_STEPPER_HACK=y
=======================
Build file /home/pi/klipper/klippy/../out/klipper.dict(8110): Fri Apr 19 01:37:04 2024
Last MCU build version: v0.12.0-142-gb029d046
Last MCU build tools: gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.34-4+rpi1+14) 2.34
Last MCU build config: ADC_MAX=4095 BUS_PINS_i2c0a=gpio0,gpio1 BUS_PINS_i2c0b=gpio4,gpio5 BUS_PINS_i2c0c=gpio8,gpio9 BUS_PINS_i2c0d=gpio12,gpio13 BUS_PINS_i2c0e=gpio16,gpio17 BUS_PINS_i2c0f=gpio20,gpio21 BUS_PINS_i2c0g=gpio24,gpio25 BUS_PINS_i2c0h=gpio28,gpio29 BUS_PINS_i2c1a=gpio2,gpio3 BUS_PINS_i2c1b=gpio6,gpio7 BUS_PINS_i2c1c=gpio10,gpio11 BUS_PINS_i2c1d=gpio14,gpio15 BUS_PINS_i2c1e=gpio18,gpio19 BUS_PINS_i2c1f=gpio22,gpio23 BUS_PINS_i2c1g=gpio26,gpio27 BUS_PINS_spi0a=gpio0,gpio3,gpio2 BUS_PINS_spi0b=gpio4,gpio7,gpio6 BUS_PINS_spi0c=gpio16,gpio19,gpio18 BUS_PINS_spi0d=gpio20,gpio23,gpio22 BUS_PINS_spi1a=gpio8,gpio11,gpio10 BUS_PINS_spi1b=gpio12,gpio15,gpio14 BUS_PINS_spi1c=gpio24,gpio27,gpio26 CLOCK_FREQ=12000000 MCU=rp2040 PWM_MAX=255 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
Build file /home/pi/klipper/klippy/../out/klipper.elf(1780784): Fri Apr 19 01:37:10 2024
webhooks client 4131225312: Disconnected
webhooks client 4124809296: New connection
webhooks client 4124809296: Client info {'program': 'Moonraker', 'version': 'v0.8.0-325-g99b97af'}
Attempting MCU 'mcu' reset
Unable to issue reset command on MCU 'rpi'
webhooks client 4124809296: Disconnected
Restarting printer
Start printer at Sat Apr 20 22:34:42 2024 (1713648882.4 1347.9)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
webhooks client 4131068200: New connection
webhooks client 4131068200: Client info {'program': 'Moonraker', 'version': 'v0.8.0-325-g99b97af'}
Loaded MCU 'mcu' 106 commands (v0.12.0-142-gb029d046 / gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.34-4+rpi1+14) 2.34)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1_PB6_PB7=PB6,PB7 BUS_PINS_i2c1_PB8_PB9=PB8,PB9 BUS_PINS_i2c2_PB10_PB11=PB10,PB11 BUS_PINS_i2c3_PA8_PC9=PA8,PC9 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi2a=PC2,PC3,PB10 BUS_PINS_spi3a=PC11,PC12,PC10 BUS_PINS_spi4=PE13,PE14,PE12 BUS_PINS_spi5=PF8,PF9,PF7 BUS_PINS_spi5a=PH7,PF11,PH6 BUS_PINS_spi6=PG12,PG14,PG13 CLOCK_FREQ=400000000 MCU=stm32h723xx PWM_MAX=255 RESERVE_PINS_USB=PA11,PA12 RESERVE_PINS_crystal=PH0,PH1 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
mcu 'rpi': Starting connect
Loaded MCU 'rpi' 112 commands (v0.12.0-142-gb029d046 / gcc: (Raspbian 10.2.1-6+rpi1) 10.2.1 20210110 binutils: (GNU Binutils for Raspbian) 2.35.2)
MCU 'rpi' config: ADC_MAX=4095 CLOCK_FREQ=50000000 MCU=linux PCA9685_MAX=4096 PWM_MAX=32768 STATS_SUMSQ_BASE=256
mcu_temperature 'mcu' nominal base=-273.952569 slope=1618.577075
Sending MCU 'mcu' printer configuration...
Configured MCU 'mcu' (1024 moves)
Sending MCU 'rpi' printer configuration...
Configured MCU 'rpi' (1024 moves)
Starting heater checks for heater_bed
bed_mesh: generated points
Index |  Tool Adjusted  |   Probe
  0   | (40.0, 23.0)    | (10.0, 8.4)
  1   | (57.8, 23.0)    | (27.8, 8.4)
  2   | (75.5, 23.0)    | (45.5, 8.4)
  3   | (93.3, 23.0)    | (63.3, 8.4)
  4   | (111.1, 23.0)   | (81.1, 8.4)
  5   | (128.8, 23.0)   | (98.8, 8.4)
  6   | (146.6, 23.0)   | (116.6, 8.4)
  7   | (164.4, 23.0)   | (134.4, 8.4)
  8   | (182.2, 23.0)   | (152.2, 8.4)
  9   | (199.9, 23.0)   | (169.9, 8.4)
  10  | (199.9, 42.7)   | (169.9, 28.1)
  11  | (182.2, 42.7)   | (152.2, 28.1)
  12  | (164.4, 42.7)   | (134.4, 28.1)
  13  | (146.6, 42.7)   | (116.6, 28.1)
  14  | (128.9, 42.7)   | (98.9, 28.1)
  15  | (111.1, 42.7)   | (81.1, 28.1)
  16  | (93.3, 42.7)    | (63.3, 28.1)
  17  | (75.5, 42.7)    | (45.5, 28.1)
  18  | (57.8, 42.7)    | (27.8, 28.1)
  19  | (40.0, 42.7)    | (10.0, 28.1)
  20  | (40.0, 62.3)    | (10.0, 47.8)
  21  | (57.8, 62.3)    | (27.8, 47.8)
  22  | (75.5, 62.3)    | (45.5, 47.8)
  23  | (93.3, 62.3)    | (63.3, 47.8)
  24  | (111.1, 62.3)   | (81.1, 47.8)
  25  | (128.8, 62.3)   | (98.8, 47.8)
  26  | (146.6, 62.3)   | (116.6, 47.8)
  27  | (164.4, 62.3)   | (134.4, 47.8)
  28  | (182.2, 62.3)   | (152.2, 47.8)
  29  | (199.9, 62.3)   | (169.9, 47.8)
  30  | (199.9, 82.0)   | (169.9, 67.4)
  31  | (182.2, 82.0)   | (152.2, 67.4)
  32  | (164.4, 82.0)   | (134.4, 67.4)
  33  | (146.6, 82.0)   | (116.6, 67.4)
  34  | (128.9, 82.0)   | (98.9, 67.4)
  35  | (111.1, 82.0)   | (81.1, 67.4)
  36  | (93.3, 82.0)    | (63.3, 67.4)
  37  | (75.5, 82.0)    | (45.5, 67.4)
  38  | (57.8, 82.0)    | (27.8, 67.4)
  39  | (40.0, 82.0)    | (10.0, 67.4)
  40  | (40.0, 101.6)   | (10.0, 87.1)
  41  | (57.8, 101.6)   | (27.8, 87.1)
  42  | (75.5, 101.6)   | (45.5, 87.1)
  43  | (93.3, 101.6)   | (63.3, 87.1)
  44  | (111.1, 101.6)  | (81.1, 87.1)
  45  | (128.8, 101.6)  | (98.8, 87.1)
  46  | (146.6, 101.6)  | (116.6, 87.1)
  47  | (164.4, 101.6)  | (134.4, 87.1)
  48  | (182.2, 101.6)  | (152.2, 87.1)
  49  | (199.9, 101.6)  | (169.9, 87.1)
  50  | (199.9, 121.3)  | (169.9, 106.7)
  51  | (182.2, 121.3)  | (152.2, 106.7)
  52  | (164.4, 121.3)  | (134.4, 106.7)
  53  | (146.6, 121.3)  | (116.6, 106.7)
  54  | (128.9, 121.3)  | (98.9, 106.7)
  55  | (111.1, 121.3)  | (81.1, 106.7)
  56  | (93.3, 121.3)   | (63.3, 106.7)
  57  | (75.5, 121.3)   | (45.5, 106.7)
  58  | (57.8, 121.3)   | (27.8, 106.7)
  59  | (40.0, 121.3)   | (10.0, 106.7)
  60  | (40.0, 141.0)   | (10.0, 126.4)
  61  | (57.8, 141.0)   | (27.8, 126.4)
  62  | (75.5, 141.0)   | (45.5, 126.4)
  63  | (93.3, 141.0)   | (63.3, 126.4)
  64  | (111.1, 141.0)  | (81.1, 126.4)
  65  | (128.8, 141.0)  | (98.8, 126.4)
  66  | (146.6, 141.0)  | (116.6, 126.4)
  67  | (164.4, 141.0)  | (134.4, 126.4)
  68  | (182.2, 141.0)  | (152.2, 126.4)
  69  | (199.9, 141.0)  | (169.9, 126.4)
  70  | (199.9, 160.6)  | (169.9, 146.1)
  71  | (182.2, 160.6)  | (152.2, 146.1)
  72  | (164.4, 160.6)  | (134.4, 146.1)
  73  | (146.6, 160.6)  | (116.6, 146.1)
  74  | (128.9, 160.6)  | (98.9, 146.1)
  75  | (111.1, 160.6)  | (81.1, 146.1)
  76  | (93.3, 160.6)   | (63.3, 146.1)
  77  | (75.5, 160.6)   | (45.5, 146.1)
  78  | (57.8, 160.6)   | (27.8, 146.1)
  79  | (40.0, 160.6)   | (10.0, 146.1)
  80  | (40.0, 180.3)   | (10.0, 165.7)
  81  | (57.8, 180.3)   | (27.8, 165.7)
  82  | (75.5, 180.3)   | (45.5, 165.7)
  83  | (93.3, 180.3)   | (63.3, 165.7)
  84  | (111.1, 180.3)  | (81.1, 165.7)
  85  | (128.8, 180.3)  | (98.8, 165.7)
  86  | (146.6, 180.3)  | (116.6, 165.7)
  87  | (164.4, 180.3)  | (134.4, 165.7)
  88  | (182.2, 180.3)  | (152.2, 165.7)
  89  | (199.9, 180.3)  | (169.9, 165.7)
  90  | (199.9, 199.9)  | (169.9, 185.4)
  91  | (182.2, 199.9)  | (152.2, 185.4)
  92  | (164.4, 199.9)  | (134.4, 185.4)
  93  | (146.6, 199.9)  | (116.6, 185.4)
  94  | (128.9, 199.9)  | (98.9, 185.4)
  95  | (111.1, 199.9)  | (81.1, 185.4)
  96  | (93.3, 199.9)   | (63.3, 185.4)
  97  | (75.5, 199.9)   | (45.5, 185.4)
  98  | (57.8, 199.9)   | (27.8, 185.4)
  99  | (40.0, 199.9)   | (10.0, 185.4)

Printer is not ready
The klippy host software is attempting to connect.  Please
retry in a few moments.

Script running error
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/extras/gcode_button.py", line 41, in button_callback
    self.gcode.run_script(template.render())
  File "/home/pi/klipper/klippy/gcode.py", line 229, in run_script
    self._process_commands(script.split('\n'), need_ack=False)
  File "/home/pi/klipper/klippy/gcode.py", line 211, in _process_commands
    handler(gcmd)
  File "/home/pi/klipper/klippy/gcode.py", line 285, in cmd_default
    raise gcmd.error(self.printer.get_state_message()[0])
gcode.CommandError: 
Printer is not ready
The klippy host software is attempting to connect.  Please
retry in a few moments.


Printer is not ready
The klippy host software is attempting to connect.  Please
retry in a few moments.

Script running error
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/extras/gcode_button.py", line 41, in button_callback
    self.gcode.run_script(template.render())
  File "/home/pi/klipper/klippy/gcode.py", line 229, in run_script
    self._process_commands(script.split('\n'), need_ack=False)
  File "/home/pi/klipper/klippy/gcode.py", line 211, in _process_commands
    handler(gcmd)
  File "/home/pi/klipper/klippy/gcode.py", line 285, in cmd_default
    raise gcmd.error(self.printer.get_state_message()[0])
gcode.CommandError: 
Printer is not ready
The klippy host software is attempting to connect.  Please
retry in a few moments.

Starting heater checks for extruder
autotune_tmc set stepper_x pwm_freq=0
autotune_tmc stepper_x ncycles=480 pfdcycles=206
autotune_tmc set stepper_x tpfd=2
autotune_tmc set stepper_x tbl=1
autotune_tmc set stepper_x toff=3
autotune_tmc set stepper_x hstrt=7
autotune_tmc set stepper_x hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_x pwm_autoscale=True
autotune_tmc set stepper_x pwm_autograd=True
autotune_tmc set stepper_x pwm_grad=4
autotune_tmc set stepper_x pwm_ofs=10
autotune_tmc set stepper_x pwm_reg=15
autotune_tmc set stepper_x pwm_lim=4
autotune_tmc set stepper_x tpwmthrs=1048575
autotune_tmc set stepper_x en_pwm_mode=False
autotune_tmc set stepper_x tcoolthrs=391(24.0)
autotune_tmc set stepper_x sgt=1
autotune_tmc set stepper_x small_hysteresis=False
autotune_tmc set stepper_x semin=2
autotune_tmc set stepper_x semax=2
autotune_tmc set stepper_x seup=3
autotune_tmc set stepper_x sedn=2
autotune_tmc set stepper_x seimin=0
autotune_tmc set stepper_x sfilt=0
autotune_tmc set stepper_x iholddelay=12
autotune_tmc set stepper_x vhighfs=False
autotune_tmc set stepper_x vhighchm=False
autotune_tmc set stepper_x multistep_filt=True
autotune_tmc set stepper_x1 pwm_freq=0
autotune_tmc stepper_x1 ncycles=480 pfdcycles=206
autotune_tmc set stepper_x1 tpfd=2
autotune_tmc set stepper_x1 tbl=1
autotune_tmc set stepper_x1 toff=3
autotune_tmc set stepper_x1 hstrt=7
autotune_tmc set stepper_x1 hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_x1 pwm_autoscale=True
autotune_tmc set stepper_x1 pwm_autograd=True
autotune_tmc set stepper_x1 pwm_grad=4
autotune_tmc set stepper_x1 pwm_ofs=10
autotune_tmc set stepper_x1 pwm_reg=15
autotune_tmc set stepper_x1 pwm_lim=4
autotune_tmc set stepper_x1 tpwmthrs=1048575
autotune_tmc set stepper_x1 en_pwm_mode=False
autotune_tmc set stepper_x1 tcoolthrs=391(24.0)
autotune_tmc set stepper_x1 sgt=1
autotune_tmc set stepper_x1 small_hysteresis=False
autotune_tmc set stepper_x1 semin=2
autotune_tmc set stepper_x1 semax=2
autotune_tmc set stepper_x1 seup=3
autotune_tmc set stepper_x1 sedn=2
autotune_tmc set stepper_x1 seimin=0
autotune_tmc set stepper_x1 sfilt=0
autotune_tmc set stepper_x1 iholddelay=12
autotune_tmc set stepper_x1 vhighfs=False
autotune_tmc set stepper_x1 vhighchm=False
autotune_tmc set stepper_x1 multistep_filt=True
autotune_tmc set stepper_y pwm_freq=0
autotune_tmc stepper_y ncycles=480 pfdcycles=206
autotune_tmc set stepper_y tpfd=2
autotune_tmc set stepper_y tbl=1
autotune_tmc set stepper_y toff=3
autotune_tmc set stepper_y hstrt=7
autotune_tmc set stepper_y hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_y pwm_autoscale=True
autotune_tmc set stepper_y pwm_autograd=True
autotune_tmc set stepper_y pwm_grad=4
autotune_tmc set stepper_y pwm_ofs=10
autotune_tmc set stepper_y pwm_reg=15
autotune_tmc set stepper_y pwm_lim=4
autotune_tmc set stepper_y tpwmthrs=1048575
autotune_tmc set stepper_y en_pwm_mode=False
autotune_tmc set stepper_y tcoolthrs=391(24.0)
autotune_tmc set stepper_y sgt=1
autotune_tmc set stepper_y small_hysteresis=False
autotune_tmc set stepper_y semin=2
autotune_tmc set stepper_y semax=2
autotune_tmc set stepper_y seup=3
autotune_tmc set stepper_y sedn=2
autotune_tmc set stepper_y seimin=0
autotune_tmc set stepper_y sfilt=0
autotune_tmc set stepper_y iholddelay=12
autotune_tmc set stepper_y vhighfs=False
autotune_tmc set stepper_y vhighchm=False
autotune_tmc set stepper_y multistep_filt=True
autotune_tmc set stepper_y1 pwm_freq=0
autotune_tmc stepper_y1 ncycles=480 pfdcycles=206
autotune_tmc set stepper_y1 tpfd=2
autotune_tmc set stepper_y1 tbl=1
autotune_tmc set stepper_y1 toff=3
autotune_tmc set stepper_y1 hstrt=7
autotune_tmc set stepper_y1 hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_y1 pwm_autoscale=True
autotune_tmc set stepper_y1 pwm_autograd=True
autotune_tmc set stepper_y1 pwm_grad=4
autotune_tmc set stepper_y1 pwm_ofs=10
autotune_tmc set stepper_y1 pwm_reg=15
autotune_tmc set stepper_y1 pwm_lim=4
autotune_tmc set stepper_y1 tpwmthrs=1048575
autotune_tmc set stepper_y1 en_pwm_mode=False
autotune_tmc set stepper_y1 tcoolthrs=391(24.0)
autotune_tmc set stepper_y1 sgt=1
autotune_tmc set stepper_y1 small_hysteresis=False
autotune_tmc set stepper_y1 semin=2
autotune_tmc set stepper_y1 semax=2
autotune_tmc set stepper_y1 seup=3
autotune_tmc set stepper_y1 sedn=2
autotune_tmc set stepper_y1 seimin=0
autotune_tmc set stepper_y1 sfilt=0
autotune_tmc set stepper_y1 iholddelay=12
autotune_tmc set stepper_y1 vhighfs=False
autotune_tmc set stepper_y1 vhighchm=False
autotune_tmc set stepper_y1 multistep_filt=True
autotune_tmc set stepper_z pwm_freq=0
autotune_tmc stepper_z ncycles=480 pfdcycles=206
autotune_tmc set stepper_z tbl=1
autotune_tmc set stepper_z toff=3
autotune_tmc set stepper_z hstrt=7
autotune_tmc set stepper_z hend=9
autotune_tmc set stepper_z sgthrs=40
autotune_tmc using max PWM speed 43.108253
autotune_tmc set stepper_z pwm_autoscale=True
autotune_tmc set stepper_z pwm_autograd=True
autotune_tmc set stepper_z pwm_grad=7
autotune_tmc set stepper_z pwm_ofs=18
autotune_tmc set stepper_z pwm_reg=15
autotune_tmc set stepper_z pwm_lim=4
autotune_tmc set stepper_z tpwmthrs=1048575
autotune_tmc set stepper_z en_spreadcycle=True
autotune_tmc set stepper_z tcoolthrs=391(2.4)
autotune_tmc set stepper_z semin=2
autotune_tmc set stepper_z semax=2
autotune_tmc set stepper_z seup=3
autotune_tmc set stepper_z sedn=2
autotune_tmc set stepper_z seimin=0
autotune_tmc set stepper_z iholddelay=12
autotune_tmc set stepper_z multistep_filt=True
autotune_tmc set stepper_z1 pwm_freq=0
autotune_tmc stepper_z1 ncycles=480 pfdcycles=206
autotune_tmc set stepper_z1 tbl=1
autotune_tmc set stepper_z1 toff=3
autotune_tmc set stepper_z1 hstrt=7
autotune_tmc set stepper_z1 hend=9
autotune_tmc set stepper_z1 sgthrs=40
autotune_tmc using max PWM speed 43.108253
autotune_tmc set stepper_z1 pwm_autoscale=True
autotune_tmc set stepper_z1 pwm_autograd=True
autotune_tmc set stepper_z1 pwm_grad=7
autotune_tmc set stepper_z1 pwm_ofs=18
autotune_tmc set stepper_z1 pwm_reg=15
autotune_tmc set stepper_z1 pwm_lim=4
autotune_tmc set stepper_z1 tpwmthrs=1048575
autotune_tmc set stepper_z1 en_spreadcycle=True
autotune_tmc set stepper_z1 tcoolthrs=391(2.4)
autotune_tmc set stepper_z1 semin=2
autotune_tmc set stepper_z1 semax=2
autotune_tmc set stepper_z1 seup=3
autotune_tmc set stepper_z1 sedn=2
autotune_tmc set stepper_z1 seimin=0
autotune_tmc set stepper_z1 iholddelay=12
autotune_tmc set stepper_z1 multistep_filt=True
autotune_tmc set stepper_z2 pwm_freq=0
autotune_tmc stepper_z2 ncycles=480 pfdcycles=206
autotune_tmc set stepper_z2 tbl=1
autotune_tmc set stepper_z2 toff=3
autotune_tmc set stepper_z2 hstrt=7
autotune_tmc set stepper_z2 hend=9
autotune_tmc set stepper_z2 sgthrs=40
autotune_tmc using max PWM speed 43.108253
autotune_tmc set stepper_z2 pwm_autoscale=True
autotune_tmc set stepper_z2 pwm_autograd=True
autotune_tmc set stepper_z2 pwm_grad=7
autotune_tmc set stepper_z2 pwm_ofs=18
autotune_tmc set stepper_z2 pwm_reg=15
autotune_tmc set stepper_z2 pwm_lim=4
autotune_tmc set stepper_z2 tpwmthrs=1048575
autotune_tmc set stepper_z2 en_spreadcycle=True
autotune_tmc set stepper_z2 tcoolthrs=391(2.4)
autotune_tmc set stepper_z2 semin=2
autotune_tmc set stepper_z2 semax=2
autotune_tmc set stepper_z2 seup=3
autotune_tmc set stepper_z2 sedn=2
autotune_tmc set stepper_z2 seimin=0
autotune_tmc set stepper_z2 iholddelay=12
autotune_tmc set stepper_z2 multistep_filt=True
Stats 1351.9: gcodein=0  mcu: mcu_awake=0.010 mcu_task_avg=0.000011 mcu_task_stddev=0.000086 bytes_write=9727 bytes_read=12841 bytes_retransmit=9 bytes_invalid=0 send_seq=720 receive_seq=720 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400026792 rpi: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=822 bytes_read=7968 bytes_retransmit=0 bytes_invalid=0 send_seq=112 receive_seq=112 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49996968 adj=49987634 Octopus_Max: temp=30.9 Pi: temp=36.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.38 cputime=5.060 memavail=7498848 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
webhooks: registering remote method 'shutdown_machine' for connection id: 4131068200
webhooks: registering remote method 'reboot_machine' for connection id: 4131068200
webhooks: registering remote method 'pause_job_queue' for connection id: 4131068200
webhooks: registering remote method 'start_job_queue' for connection id: 4131068200
webhooks: registering remote method 'set_device_power' for connection id: 4131068200
Stats 1352.9: gcodein=0  mcu: mcu_awake=0.010 mcu_task_avg=0.000011 mcu_task_stddev=0.000086 bytes_write=9733 bytes_read=13124 bytes_retransmit=9 bytes_invalid=0 send_seq=721 receive_seq=721 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400027636 rpi: mcu_awake=0.003 mcu_task_avg=0.000019 mcu_task_stddev=0.000010 bytes_write=828 bytes_read=7998 bytes_retransmit=0 bytes_invalid=0 send_seq=113 receive_seq=113 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49998780 adj=49996910 Octopus_Max: temp=30.9 Pi: temp=36.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.38 cputime=5.102 memavail=7498888 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1353.9: gcodein=0  mcu: mcu_awake=0.010 mcu_task_avg=0.000011 mcu_task_stddev=0.000086 bytes_write=9739 bytes_read=13406 bytes_retransmit=9 bytes_invalid=0 send_seq=722 receive_seq=722 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028097 rpi: mcu_awake=0.003 mcu_task_avg=0.000019 mcu_task_stddev=0.000010 bytes_write=834 bytes_read=8014 bytes_retransmit=0 bytes_invalid=0 send_seq=114 receive_seq=114 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999418 adj=49999159 Octopus_Max: temp=31.0 Pi: temp=36.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.38 cputime=5.115 memavail=7498504 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1354.9: gcodein=0  mcu: mcu_awake=0.010 mcu_task_avg=0.000011 mcu_task_stddev=0.000086 bytes_write=9745 bytes_read=13717 bytes_retransmit=9 bytes_invalid=0 send_seq=723 receive_seq=723 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028530 rpi: mcu_awake=0.003 mcu_task_avg=0.000019 mcu_task_stddev=0.000010 bytes_write=840 bytes_read=8030 bytes_retransmit=0 bytes_invalid=0 send_seq=115 receive_seq=115 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999569 adj=49999382 Octopus_Max: temp=31.1 Pi: temp=36.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.38 cputime=5.127 memavail=7498504 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1355.9: gcodein=0  mcu: mcu_awake=0.005 mcu_task_avg=0.000004 mcu_task_stddev=0.000005 bytes_write=9751 bytes_read=14016 bytes_retransmit=9 bytes_invalid=0 send_seq=724 receive_seq=724 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028476 rpi: mcu_awake=0.003 mcu_task_avg=0.000019 mcu_task_stddev=0.000010 bytes_write=846 bytes_read=8046 bytes_retransmit=0 bytes_invalid=0 send_seq=116 receive_seq=116 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999700 adj=49998730 Octopus_Max: temp=31.3 Pi: temp=36.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.38 cputime=5.139 memavail=7498504 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.3 pwm=0.000
Stats 1356.9: gcodein=0  mcu: mcu_awake=0.005 mcu_task_avg=0.000004 mcu_task_stddev=0.000005 bytes_write=9757 bytes_read=14283 bytes_retransmit=9 bytes_invalid=0 send_seq=725 receive_seq=725 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029400 rpi: mcu_awake=0.003 mcu_task_avg=0.000019 mcu_task_stddev=0.000010 bytes_write=858 bytes_read=8078 bytes_retransmit=0 bytes_invalid=0 send_seq=118 receive_seq=118 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000002 adj=49998395 Octopus_Max: temp=31.2 Pi: temp=37.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.35 cputime=5.158 memavail=7498504 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1357.9: gcodein=0  mcu: mcu_awake=0.005 mcu_task_avg=0.000004 mcu_task_stddev=0.000005 bytes_write=9763 bytes_read=14594 bytes_retransmit=9 bytes_invalid=0 send_seq=726 receive_seq=726 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029602 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000013 bytes_write=864 bytes_read=8107 bytes_retransmit=0 bytes_invalid=0 send_seq=119 receive_seq=119 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000122 adj=49998330 Octopus_Max: temp=31.3 Pi: temp=35.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.35 cputime=5.187 memavail=7508968 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1358.9: gcodein=0  mcu: mcu_awake=0.005 mcu_task_avg=0.000004 mcu_task_stddev=0.000005 bytes_write=9769 bytes_read=14877 bytes_retransmit=9 bytes_invalid=0 send_seq=727 receive_seq=727 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029678 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000013 bytes_write=870 bytes_read=8123 bytes_retransmit=0 bytes_invalid=0 send_seq=120 receive_seq=120 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000233 adj=49998106 Octopus_Max: temp=31.4 Pi: temp=36.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.35 cputime=5.215 memavail=7508968 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1359.9: gcodein=0  mcu: mcu_awake=0.005 mcu_task_avg=0.000004 mcu_task_stddev=0.000005 bytes_write=9775 bytes_read=15159 bytes_retransmit=9 bytes_invalid=0 send_seq=728 receive_seq=728 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029659 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000013 bytes_write=876 bytes_read=8139 bytes_retransmit=0 bytes_invalid=0 send_seq=121 receive_seq=121 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000268 adj=49998008 Octopus_Max: temp=31.4 Pi: temp=36.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.35 cputime=5.244 memavail=7508968 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1360.9: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9781 bytes_read=15484 bytes_retransmit=9 bytes_invalid=0 send_seq=729 receive_seq=729 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029613 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000013 bytes_write=882 bytes_read=8155 bytes_retransmit=0 bytes_invalid=0 send_seq=122 receive_seq=122 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000261 adj=49997765 Octopus_Max: temp=31.4 Pi: temp=35.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-110.0 sysload=0.35 cputime=5.272 memavail=7507992 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1361.9: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9787 bytes_read=15767 bytes_retransmit=9 bytes_invalid=0 send_seq=730 receive_seq=730 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029532 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000013 bytes_write=888 bytes_read=8171 bytes_retransmit=0 bytes_invalid=0 send_seq=123 receive_seq=123 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000318 adj=49997461 Octopus_Max: temp=31.5 Pi: temp=37.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.32 cputime=5.301 memavail=7507992 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1362.9: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9793 bytes_read=16049 bytes_retransmit=9 bytes_invalid=0 send_seq=731 receive_seq=731 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029520 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000020 bytes_write=894 bytes_read=8200 bytes_retransmit=0 bytes_invalid=0 send_seq=124 receive_seq=124 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000317 adj=49997496 Octopus_Max: temp=31.6 Pi: temp=36.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.32 cputime=5.329 memavail=7507768 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1363.9: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9799 bytes_read=16360 bytes_retransmit=9 bytes_invalid=0 send_seq=732 receive_seq=732 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029470 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000020 bytes_write=900 bytes_read=8216 bytes_retransmit=0 bytes_invalid=0 send_seq=125 receive_seq=125 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000309 adj=49997282 Octopus_Max: temp=31.6 Pi: temp=36.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.32 cputime=5.358 memavail=7507768 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1364.9: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9805 bytes_read=16643 bytes_retransmit=9 bytes_invalid=0 send_seq=733 receive_seq=733 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029425 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000020 bytes_write=906 bytes_read=8232 bytes_retransmit=0 bytes_invalid=0 send_seq=126 receive_seq=126 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000334 adj=49997110 Octopus_Max: temp=31.6 Pi: temp=36.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.32 cputime=5.386 memavail=7507768 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.3 pwm=0.000
Stats 1365.9: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9811 bytes_read=16939 bytes_retransmit=9 bytes_invalid=0 send_seq=734 receive_seq=734 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029361 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000020 bytes_write=912 bytes_read=8248 bytes_retransmit=0 bytes_invalid=0 send_seq=127 receive_seq=127 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000362 adj=49997125 Octopus_Max: temp=31.7 Pi: temp=36.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.32 cputime=5.415 memavail=7507768 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1366.9: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9817 bytes_read=17246 bytes_retransmit=9 bytes_invalid=0 send_seq=735 receive_seq=735 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029520 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000020 bytes_write=918 bytes_read=8264 bytes_retransmit=0 bytes_invalid=0 send_seq=128 receive_seq=128 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000377 adj=49997178 Octopus_Max: temp=31.8 Pi: temp=37.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.29 cputime=5.443 memavail=7507768 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1367.9: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9823 bytes_read=17521 bytes_retransmit=9 bytes_invalid=0 send_seq=736 receive_seq=736 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029486 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000020 bytes_write=924 bytes_read=8280 bytes_retransmit=0 bytes_invalid=0 send_seq=129 receive_seq=129 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000345 adj=49997031 Octopus_Max: temp=31.8 Pi: temp=35.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.29 cputime=5.464 memavail=7507424 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1368.9: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9829 bytes_read=17803 bytes_retransmit=9 bytes_invalid=0 send_seq=737 receive_seq=737 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029247 rpi: mcu_awake=0.001 mcu_task_avg=0.000018 mcu_task_stddev=0.000018 bytes_write=930 bytes_read=8309 bytes_retransmit=0 bytes_invalid=0 send_seq=130 receive_seq=130 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000281 adj=49996807 Octopus_Max: temp=31.9 Pi: temp=35.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-110.0 sysload=0.29 cputime=5.476 memavail=7507696 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1369.9: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9835 bytes_read=18114 bytes_retransmit=9 bytes_invalid=0 send_seq=738 receive_seq=738 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029037 rpi: mcu_awake=0.001 mcu_task_avg=0.000018 mcu_task_stddev=0.000018 bytes_write=936 bytes_read=8325 bytes_retransmit=0 bytes_invalid=0 send_seq=131 receive_seq=131 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000271 adj=49996594 Octopus_Max: temp=31.9 Pi: temp=36.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.29 cputime=5.489 memavail=7502408 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1370.9: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9841 bytes_read=18411 bytes_retransmit=9 bytes_invalid=0 send_seq=739 receive_seq=739 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028858 rpi: mcu_awake=0.001 mcu_task_avg=0.000018 mcu_task_stddev=0.000018 bytes_write=942 bytes_read=8341 bytes_retransmit=0 bytes_invalid=0 send_seq=132 receive_seq=132 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000226 adj=49996694 Octopus_Max: temp=31.9 Pi: temp=36.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.29 cputime=5.502 memavail=7511592 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1371.9: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9847 bytes_read=18693 bytes_retransmit=9 bytes_invalid=0 send_seq=740 receive_seq=740 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028712 rpi: mcu_awake=0.001 mcu_task_avg=0.000018 mcu_task_stddev=0.000018 bytes_write=948 bytes_read=8357 bytes_retransmit=0 bytes_invalid=0 send_seq=133 receive_seq=133 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000192 adj=49996555 Octopus_Max: temp=32.1 Pi: temp=36.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.27 cputime=5.513 memavail=7511588 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1372.9: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9853 bytes_read=19004 bytes_retransmit=9 bytes_invalid=0 send_seq=741 receive_seq=741 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028595 rpi: mcu_awake=0.001 mcu_task_avg=0.000018 mcu_task_stddev=0.000018 bytes_write=954 bytes_read=8373 bytes_retransmit=0 bytes_invalid=0 send_seq=134 receive_seq=134 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000207 adj=49996477 Octopus_Max: temp=32.1 Pi: temp=36.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.27 cputime=5.532 memavail=7511588 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1373.9: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9859 bytes_read=19287 bytes_retransmit=9 bytes_invalid=0 send_seq=742 receive_seq=742 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028606 rpi: mcu_awake=0.001 mcu_task_avg=0.000009 mcu_task_stddev=0.000011 bytes_write=960 bytes_read=8402 bytes_retransmit=0 bytes_invalid=0 send_seq=135 receive_seq=135 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000216 adj=49996694 Octopus_Max: temp=32.1 Pi: temp=36.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.27 cputime=5.560 memavail=7511588 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1374.9: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9865 bytes_read=19569 bytes_retransmit=9 bytes_invalid=0 send_seq=743 receive_seq=743 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028583 rpi: mcu_awake=0.001 mcu_task_avg=0.000009 mcu_task_stddev=0.000011 bytes_write=966 bytes_read=8418 bytes_retransmit=0 bytes_invalid=0 send_seq=136 receive_seq=136 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000211 adj=49996727 Octopus_Max: temp=32.3 Pi: temp=36.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-110.0 sysload=0.27 cputime=5.587 memavail=7511588 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1376.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9871 bytes_read=19894 bytes_retransmit=9 bytes_invalid=0 send_seq=744 receive_seq=744 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028595 rpi: mcu_awake=0.001 mcu_task_avg=0.000009 mcu_task_stddev=0.000011 bytes_write=972 bytes_read=8434 bytes_retransmit=0 bytes_invalid=0 send_seq=137 receive_seq=137 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000211 adj=49996689 Octopus_Max: temp=32.3 Pi: temp=36.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.27 cputime=5.615 memavail=7511336 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.3 pwm=0.000
Stats 1377.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9877 bytes_read=20177 bytes_retransmit=9 bytes_invalid=0 send_seq=745 receive_seq=745 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028708 rpi: mcu_awake=0.001 mcu_task_avg=0.000009 mcu_task_stddev=0.000011 bytes_write=978 bytes_read=8450 bytes_retransmit=0 bytes_invalid=0 send_seq=138 receive_seq=138 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000210 adj=49996664 Octopus_Max: temp=32.2 Pi: temp=35.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.25 cputime=5.643 memavail=7511336 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1378.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9883 bytes_read=20453 bytes_retransmit=9 bytes_invalid=0 send_seq=746 receive_seq=746 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028661 rpi: mcu_awake=0.001 mcu_task_avg=0.000009 mcu_task_stddev=0.000011 bytes_write=984 bytes_read=8466 bytes_retransmit=0 bytes_invalid=0 send_seq=139 receive_seq=139 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000203 adj=49996558 Octopus_Max: temp=32.4 Pi: temp=35.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-110.0 sysload=0.25 cputime=5.670 memavail=7511336 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1379.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9889 bytes_read=20759 bytes_retransmit=9 bytes_invalid=0 send_seq=747 receive_seq=747 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028622 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000020 bytes_write=990 bytes_read=8495 bytes_retransmit=0 bytes_invalid=0 send_seq=140 receive_seq=140 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000216 adj=49996567 Octopus_Max: temp=32.4 Pi: temp=36.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.25 cputime=5.698 memavail=7511336 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1380.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9895 bytes_read=21042 bytes_retransmit=9 bytes_invalid=0 send_seq=748 receive_seq=748 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028599 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000020 bytes_write=996 bytes_read=8511 bytes_retransmit=0 bytes_invalid=0 send_seq=141 receive_seq=141 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000219 adj=49996709 Octopus_Max: temp=32.5 Pi: temp=36.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.25 cputime=5.725 memavail=7511336 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1381.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9901 bytes_read=21338 bytes_retransmit=9 bytes_invalid=0 send_seq=749 receive_seq=749 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028592 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000020 bytes_write=1002 bytes_read=8527 bytes_retransmit=0 bytes_invalid=0 send_seq=142 receive_seq=142 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000224 adj=49996733 Octopus_Max: temp=32.4 Pi: temp=35.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-110.0 sysload=0.25 cputime=5.753 memavail=7511360 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.3 pwm=0.000
Stats 1382.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9907 bytes_read=21649 bytes_retransmit=9 bytes_invalid=0 send_seq=750 receive_seq=750 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028613 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000020 bytes_write=1008 bytes_read=8543 bytes_retransmit=0 bytes_invalid=0 send_seq=143 receive_seq=143 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000218 adj=49996752 Octopus_Max: temp=32.5 Pi: temp=35.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.23 cputime=5.781 memavail=7511360 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1383.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9913 bytes_read=21932 bytes_retransmit=9 bytes_invalid=0 send_seq=751 receive_seq=751 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028608 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000020 bytes_write=1014 bytes_read=8558 bytes_retransmit=0 bytes_invalid=0 send_seq=144 receive_seq=144 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000210 adj=49996663 Octopus_Max: temp=32.7 Pi: temp=35.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.23 cputime=5.809 memavail=7511360 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1384.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9919 bytes_read=22214 bytes_retransmit=9 bytes_invalid=0 send_seq=752 receive_seq=752 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028570 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000022 bytes_write=1020 bytes_read=8586 bytes_retransmit=0 bytes_invalid=0 send_seq=145 receive_seq=145 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000203 adj=49996602 Octopus_Max: temp=32.6 Pi: temp=35.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.9 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.23 cputime=5.836 memavail=7511360 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1385.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9925 bytes_read=22525 bytes_retransmit=9 bytes_invalid=0 send_seq=753 receive_seq=753 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028537 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000022 bytes_write=1026 bytes_read=8601 bytes_retransmit=0 bytes_invalid=0 send_seq=146 receive_seq=146 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000204 adj=49996594 Octopus_Max: temp=32.7 Pi: temp=36.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.23 cputime=5.864 memavail=7511148 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1386.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9931 bytes_read=22822 bytes_retransmit=9 bytes_invalid=0 send_seq=754 receive_seq=754 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028521 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000022 bytes_write=1032 bytes_read=8616 bytes_retransmit=0 bytes_invalid=0 send_seq=147 receive_seq=147 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000203 adj=49996644 Octopus_Max: temp=32.6 Pi: temp=36.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-110.0 sysload=0.23 cputime=5.890 memavail=7504112 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1387.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9937 bytes_read=23104 bytes_retransmit=9 bytes_invalid=0 send_seq=755 receive_seq=755 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028457 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000022 bytes_write=1038 bytes_read=8631 bytes_retransmit=0 bytes_invalid=0 send_seq=148 receive_seq=148 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000190 adj=49996652 Octopus_Max: temp=32.8 Pi: temp=36.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.21 cputime=5.902 memavail=7509508 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1388.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9943 bytes_read=23415 bytes_retransmit=9 bytes_invalid=0 send_seq=756 receive_seq=756 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028411 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000022 bytes_write=1044 bytes_read=8647 bytes_retransmit=0 bytes_invalid=0 send_seq=149 receive_seq=149 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000174 adj=49996604 Octopus_Max: temp=32.8 Pi: temp=36.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.21 cputime=5.914 memavail=7509508 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1389.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9949 bytes_read=23685 bytes_retransmit=9 bytes_invalid=0 send_seq=757 receive_seq=757 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028368 rpi: mcu_awake=0.001 mcu_task_avg=0.000014 mcu_task_stddev=0.000016 bytes_write=1050 bytes_read=8676 bytes_retransmit=0 bytes_invalid=0 send_seq=150 receive_seq=150 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000157 adj=49996526 Octopus_Max: temp=32.9 Pi: temp=35.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.21 cputime=5.926 memavail=7509508 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.3 pwm=0.000
Stats 1390.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9961 bytes_read=23982 bytes_retransmit=9 bytes_invalid=0 send_seq=759 receive_seq=759 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028292 rpi: mcu_awake=0.001 mcu_task_avg=0.000014 mcu_task_stddev=0.000016 bytes_write=1056 bytes_read=8692 bytes_retransmit=0 bytes_invalid=0 send_seq=151 receive_seq=151 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000142 adj=49996447 Octopus_Max: temp=32.9 Pi: temp=35.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.21 cputime=5.939 memavail=7509508 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1391.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9967 bytes_read=24307 bytes_retransmit=9 bytes_invalid=0 send_seq=760 receive_seq=760 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028271 rpi: mcu_awake=0.001 mcu_task_avg=0.000014 mcu_task_stddev=0.000016 bytes_write=1062 bytes_read=8708 bytes_retransmit=0 bytes_invalid=0 send_seq=152 receive_seq=152 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000131 adj=49996443 Octopus_Max: temp=32.9 Pi: temp=36.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.21 cputime=5.954 memavail=7509260 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1392.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9973 bytes_read=24590 bytes_retransmit=9 bytes_invalid=0 send_seq=761 receive_seq=761 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028266 rpi: mcu_awake=0.001 mcu_task_avg=0.000014 mcu_task_stddev=0.000016 bytes_write=1068 bytes_read=8724 bytes_retransmit=0 bytes_invalid=0 send_seq=153 receive_seq=153 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000142 adj=49996405 Octopus_Max: temp=32.9 Pi: temp=36.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.19 cputime=5.981 memavail=7509260 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.3 pwm=0.000
Stats 1393.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9979 bytes_read=24872 bytes_retransmit=9 bytes_invalid=0 send_seq=762 receive_seq=762 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028267 rpi: mcu_awake=0.001 mcu_task_avg=0.000014 mcu_task_stddev=0.000016 bytes_write=1074 bytes_read=8740 bytes_retransmit=0 bytes_invalid=0 send_seq=154 receive_seq=154 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000153 adj=49996558 Octopus_Max: temp=33.1 Pi: temp=35.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-110.0 sysload=0.19 cputime=6.007 memavail=7509260 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1394.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9985 bytes_read=25183 bytes_retransmit=9 bytes_invalid=0 send_seq=763 receive_seq=763 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028280 rpi: mcu_awake=0.001 mcu_task_avg=0.000013 mcu_task_stddev=0.000016 bytes_write=1080 bytes_read=8769 bytes_retransmit=0 bytes_invalid=0 send_seq=155 receive_seq=155 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000163 adj=49996679 Octopus_Max: temp=33.1 Pi: temp=36.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.19 cputime=6.035 memavail=7509260 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1395.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9991 bytes_read=25466 bytes_retransmit=9 bytes_invalid=0 send_seq=764 receive_seq=764 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028295 rpi: mcu_awake=0.001 mcu_task_avg=0.000013 mcu_task_stddev=0.000016 bytes_write=1086 bytes_read=8785 bytes_retransmit=0 bytes_invalid=0 send_seq=156 receive_seq=156 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000166 adj=49996738 Octopus_Max: temp=32.9 Pi: temp=36.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.19 cputime=6.064 memavail=7509260 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1396.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9997 bytes_read=25762 bytes_retransmit=9 bytes_invalid=0 send_seq=765 receive_seq=765 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028307 rpi: mcu_awake=0.001 mcu_task_avg=0.000013 mcu_task_stddev=0.000016 bytes_write=1092 bytes_read=8801 bytes_retransmit=0 bytes_invalid=0 send_seq=157 receive_seq=157 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000169 adj=49996723 Octopus_Max: temp=33.1 Pi: temp=35.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.19 cputime=6.091 memavail=7509260 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1397.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=10003 bytes_read=26073 bytes_retransmit=9 bytes_invalid=0 send_seq=766 receive_seq=766 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028324 rpi: mcu_awake=0.001 mcu_task_avg=0.000013 mcu_task_stddev=0.000016 bytes_write=1098 bytes_read=8817 bytes_retransmit=0 bytes_invalid=0 send_seq=158 receive_seq=158 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000167 adj=49996711 Octopus_Max: temp=33.1 Pi: temp=35.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.18 cputime=6.118 memavail=7509260 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1398.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=10009 bytes_read=26356 bytes_retransmit=9 bytes_invalid=0 send_seq=767 receive_seq=767 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028316 rpi: mcu_awake=0.001 mcu_task_avg=0.000013 mcu_task_stddev=0.000016 bytes_write=1104 bytes_read=8833 bytes_retransmit=0 bytes_invalid=0 send_seq=159 receive_seq=159 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000167 adj=49996658 Octopus_Max: temp=33.1 Pi: temp=36.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.18 cputime=6.145 memavail=7509260 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1399.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=10015 bytes_read=26638 bytes_retransmit=9 bytes_invalid=0 send_seq=768 receive_seq=768 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028306 rpi: mcu_awake=0.001 mcu_task_avg=0.000021 mcu_task_stddev=0.000024 bytes_write=1110 bytes_read=8862 bytes_retransmit=0 bytes_invalid=0 send_seq=160 receive_seq=160 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000171 adj=49996658 Octopus_Max: temp=33.1 Pi: temp=34.6  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-110.0 sysload=0.18 cputime=6.172 memavail=7509260 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1400.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=10021 bytes_read=26933 bytes_retransmit=9 bytes_invalid=0 send_seq=769 receive_seq=769 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028302 rpi: mcu_awake=0.001 mcu_task_avg=0.000021 mcu_task_stddev=0.000024 bytes_write=1116 bytes_read=8878 bytes_retransmit=0 bytes_invalid=0 send_seq=161 receive_seq=161 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000173 adj=49996698 Octopus_Max: temp=33.0 Pi: temp=35.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-110.0 sysload=0.18 cputime=6.201 memavail=7509260 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.3 pwm=0.000
Stats 1401.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=10027 bytes_read=27230 bytes_retransmit=9 bytes_invalid=0 send_seq=770 receive_seq=770 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028316 rpi: mcu_awake=0.001 mcu_task_avg=0.000021 mcu_task_stddev=0.000024 bytes_write=1122 bytes_read=8894 bytes_retransmit=0 bytes_invalid=0 send_seq=162 receive_seq=162 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000171 adj=49996711 Octopus_Max: temp=33.2 Pi: temp=35.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.18 cputime=6.227 memavail=7509044 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1402.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=10033 bytes_read=27512 bytes_retransmit=9 bytes_invalid=0 send_seq=771 receive_seq=771 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028298 rpi: mcu_awake=0.001 mcu_task_avg=0.000021 mcu_task_stddev=0.000024 bytes_write=1128 bytes_read=8910 bytes_retransmit=0 bytes_invalid=0 send_seq=163 receive_seq=163 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000172 adj=49996654 Octopus_Max: temp=33.2 Pi: temp=35.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.16 cputime=6.256 memavail=7508796 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1403.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=10039 bytes_read=27823 bytes_retransmit=9 bytes_invalid=0 send_seq=772 receive_seq=772 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028259 rpi: mcu_awake=0.001 mcu_task_avg=0.000021 mcu_task_stddev=0.000024 bytes_write=1134 bytes_read=8926 bytes_retransmit=0 bytes_invalid=0 send_seq=164 receive_seq=164 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000160 adj=49996679 Octopus_Max: temp=33.2 Pi: temp=36.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.9 barrow: temp=-119.3 sysload=0.16 cputime=6.271 memavail=7508292 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1404.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=10045 bytes_read=28106 bytes_retransmit=9 bytes_invalid=0 send_seq=773 receive_seq=773 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028224 rpi: mcu_awake=0.001 mcu_task_avg=0.000016 mcu_task_stddev=0.000016 bytes_write=1140 bytes_read=8955 bytes_retransmit=0 bytes_invalid=0 send_seq=165 receive_seq=165 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000149 adj=49996599 Octopus_Max: temp=33.4 Pi: temp=36.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-110.0 sysload=0.16 cputime=6.282 memavail=7508392 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.3 pwm=0.000
Stats 1405.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=10051 bytes_read=28388 bytes_retransmit=9 bytes_invalid=0 send_seq=774 receive_seq=774 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028196 rpi: mcu_awake=0.001 mcu_task_avg=0.000016 mcu_task_stddev=0.000016 bytes_write=1146 bytes_read=8971 bytes_retransmit=0 bytes_invalid=0 send_seq=166 receive_seq=166 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000142 adj=49996537 Octopus_Max: temp=33.5 Pi: temp=37.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.16 cputime=6.294 memavail=7508392 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
webhooks client 4131068200: Disconnected
b'Got EOF when reading from device'
webhooks client 4125801752: New connection
webhooks client 4125801752: Client info {'program': 'Moonraker', 'version': 'v0.8.0-325-g99b97af'}
webhooks: registering remote method 'shutdown_machine' for connection id: 4125801752
webhooks: registering remote method 'reboot_machine' for connection id: 4125801752
webhooks: registering remote method 'pause_job_queue' for connection id: 4125801752
webhooks: registering remote method 'start_job_queue' for connection id: 4125801752
webhooks: registering remote method 'set_device_power' for connection id: 4125801752
Timeout with MCU 'mcu' (eventtime=1493.030269)
Transition to shutdown state: Lost communication with MCU 'mcu'
Dumping gcode input 0 blocks
Dumping 17 requests for client 4125801752
Received 1488.702174: b'{"id": 3856935496, "method": "info", "params": {"client_info": {"program": "Moonraker", "version": "v0.8.0-325-g99b97af"}}}'
Received 1488.709079: b'{"id": 3856935688, "method": "list_endpoints", "params": {}}'
Received 1488.712391: b'{"id": 3876139048, "method": "objects/subscribe", "params": {"objects": {"webhooks": null}, "response_template": {"method": "process_status_update"}}}'
Received 1488.713662: b'{"id": 3876139048, "method": "gcode/subscribe_output", "params": {"response_template": {"method": "process_gcode_response"}}}'
Received 1488.715456: b'{"id": 3876139528, "method": "list_endpoints", "params": {}}'
Received 1488.717265: b'{"id": 3876142816, "method": "objects/subscribe", "params": {"objects": {"webhooks": null, "print_stats": null}, "response_template": {"method": "process_status_update"}}}'
Received 1488.965281: b'{"id": 3875990688, "method": "objects/list", "params": {}}'
Received 1488.967278: b'{"id": 3875990688, "method": "objects/query", "params": {"objects": {"configfile": null}}}'
Received 1489.222909: b'{"id": 3875998664, "method": "register_remote_method", "params": {"response_template": {"method": "shutdown_machine"}, "remote_method": "shutdown_machine"}}'
Received 1489.224632: b'{"id": 3846906712, "method": "register_remote_method", "params": {"response_template": {"method": "reboot_machine"}, "remote_method": "reboot_machine"}}'
Received 1489.225937: b'{"id": 3856978176, "method": "register_remote_method", "params": {"response_template": {"method": "pause_job_queue"}, "remote_method": "pause_job_queue"}}'
Received 1489.227174: b'{"id": 3856978176, "method": "register_remote_method", "params": {"response_template": {"method": "start_job_queue"}, "remote_method": "start_job_queue"}}'
Received 1489.228349: b'{"id": 3856978176, "method": "register_remote_method", "params": {"response_template": {"method": "set_device_power"}, "remote_method": "set_device_power"}}'
Received 1489.230094: b'{"id": 3875998160, "method": "objects/query", "params": {"objects": {"heaters": null}}}'
Received 1489.230680: b'{"id": 3875996840, "method": "objects/query", "params": {"objects": {"heaters": null}}}'
Received 1489.466083: b'{"id": 3875989944, "method": "objects/subscribe", "params": {"objects": {"webhooks": null, "print_stats": null, "temperature_sensor Octopus_Max": null, "temperature_sensor Pi": null, "heater_bed": null, "temperature_sensor bed_mat": null, "temperature_sensor bed_core": null, "temperature_sensor barrow": null, "extruder": null}, "response_template": {"method": "process_status_update"}}}'
Received 1489.717596: b'{"id": 3875975256, "method": "objects/subscribe", "params": {"objects": {"webhooks": null, "print_stats": null, "temperature_sensor Octopus_Max": null, "temperature_sensor Pi": null, "heater_bed": null, "temperature_sensor bed_mat": null, "temperature_sensor bed_core": null, "temperature_sensor barrow": null, "extruder": null}, "response_template": {"method": "process_status_update"}}}'
gcode state: absolute_coord=True absolute_extrude=True base_position=[0.0, 0.0, 0.0, 0.0] last_position=[0.0, 0.0, 0.0, 0.0] homing_position=[0.0, 0.0, 0.0, 0.0] speed_factor=0.016666666666666666 extrude_factor=1.0 speed=25.0
Reactor garbage collection: (1352.741182156, 0.0, 0.0)
MCU 'rpi' shutdown: Command request
clocksync state: mcu_freq=50000000 last_clock=74190168392 clock_est=(1464.456 72772862135 50000106.775) min_half_rtt=0.000041 min_rtt_time=1349.935 time_avg=1464.456(783.933) clock_avg=72772862135.516(39196728144.023) pred_variance=21643316.027 clock_adj=(-1336.854 49996506.000)
Dumping serial stats: bytes_write=1692 bytes_read=10638 bytes_retransmit=0 bytes_invalid=0 send_seq=257 receive_seq=257 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0
Dumping send queue 100 messages
Sent 0 1396.311187 1396.311187 6: seq: 1d, get_clock
Sent 1 1397.296163 1397.296163 6: seq: 1e, get_clock
Sent 2 1398.281253 1398.281253 6: seq: 1f, get_clock
Sent 3 1399.266060 1399.266060 6: seq: 10, get_clock
Sent 4 1400.250690 1400.250690 6: seq: 11, get_clock
Sent 5 1401.235532 1401.235532 6: seq: 12, get_clock
Sent 6 1402.220234 1402.220234 6: seq: 13, get_clock
Sent 7 1403.204866 1403.204866 6: seq: 14, get_clock
Sent 8 1404.189204 1404.189204 6: seq: 15, get_clock
Sent 9 1405.173543 1405.173543 6: seq: 16, get_clock
Sent 10 1406.157722 1406.157722 6: seq: 17, get_clock
Sent 11 1407.142877 1407.142877 6: seq: 18, get_clock
Sent 12 1408.127389 1408.127389 6: seq: 19, get_clock
Sent 13 1409.111581 1409.111581 6: seq: 1a, get_clock
Sent 14 1410.096173 1410.096173 6: seq: 1b, get_clock
Sent 15 1411.080631 1411.080631 6: seq: 1c, get_clock
Sent 16 1412.065162 1412.065162 6: seq: 1d, get_clock
Sent 17 1413.049401 1413.049401 6: seq: 1e, get_clock
Sent 18 1414.033716 1414.033716 6: seq: 1f, get_clock
Sent 19 1415.017870 1415.017870 6: seq: 10, get_clock
Sent 20 1416.002651 1416.002651 6: seq: 11, get_clock
Sent 21 1416.990791 1416.990791 6: seq: 12, get_clock
Sent 22 1417.974918 1417.974918 6: seq: 13, get_clock
Sent 23 1418.958863 1418.958863 6: seq: 14, get_clock
Sent 24 1419.943039 1419.943039 6: seq: 15, get_clock
Sent 25 1420.927351 1420.927351 6: seq: 16, get_clock
Sent 26 1421.911990 1421.911990 6: seq: 17, get_clock
Sent 27 1422.896426 1422.896426 6: seq: 18, get_clock
Sent 28 1423.880657 1423.880657 6: seq: 19, get_clock
Sent 29 1424.865435 1424.865435 6: seq: 1a, get_clock
Sent 30 1425.849896 1425.849896 6: seq: 1b, get_clock
Sent 31 1426.834824 1426.834824 6: seq: 1c, get_clock
Sent 32 1427.818966 1427.818966 6: seq: 1d, get_clock
Sent 33 1428.803306 1428.803306 6: seq: 1e, get_clock
Sent 34 1429.788282 1429.788282 6: seq: 1f, get_clock
Sent 35 1430.772941 1430.772941 6: seq: 10, get_clock
Sent 36 1431.757658 1431.757658 6: seq: 11, get_clock
Sent 37 1432.742148 1432.742148 6: seq: 12, get_clock
Sent 38 1433.727126 1433.727126 6: seq: 13, get_clock
Sent 39 1434.711957 1434.711957 6: seq: 14, get_clock
Sent 40 1435.696074 1435.696074 6: seq: 15, get_clock
Sent 41 1436.680357 1436.680357 6: seq: 16, get_clock
Sent 42 1437.664766 1437.664766 6: seq: 17, get_clock
Sent 43 1438.649315 1438.649315 6: seq: 18, get_clock
Sent 44 1439.634123 1439.634123 6: seq: 19, get_clock
Sent 45 1440.618344 1440.618344 6: seq: 1a, get_clock
Sent 46 1441.602948 1441.602948 6: seq: 1b, get_clock
Sent 47 1442.587472 1442.587472 6: seq: 1c, get_clock
Sent 48 1443.571609 1443.571609 6: seq: 1d, get_clock
Sent 49 1444.556494 1444.556494 6: seq: 1e, get_clock
Sent 50 1445.540578 1445.540578 6: seq: 1f, get_clock
Sent 51 1446.524652 1446.524652 6: seq: 10, get_clock
Sent 52 1447.509205 1447.509205 6: seq: 11, get_clock
Sent 53 1448.496072 1448.496072 6: seq: 12, get_clock
Sent 54 1449.480643 1449.480643 6: seq: 13, get_clock
Sent 55 1450.465578 1450.465578 6: seq: 14, get_clock
Sent 56 1451.450358 1451.450358 6: seq: 15, get_clock
Sent 57 1452.434536 1452.434536 6: seq: 16, get_clock
Sent 58 1453.418705 1453.418705 6: seq: 17, get_clock
Sent 59 1454.402809 1454.402809 6: seq: 18, get_clock
Sent 60 1455.387131 1455.387131 6: seq: 19, get_clock
Sent 61 1456.371684 1456.371684 6: seq: 1a, get_clock
Sent 62 1457.356713 1457.356713 6: seq: 1b, get_clock
Sent 63 1458.341300 1458.341300 6: seq: 1c, get_clock
Sent 64 1459.325513 1459.325513 6: seq: 1d, get_clock
Sent 65 1460.310573 1460.310573 6: seq: 1e, get_clock
Sent 66 1461.294996 1461.294996 6: seq: 1f, get_clock
Sent 67 1462.282135 1462.282135 6: seq: 10, get_clock
Sent 68 1463.266894 1463.266894 6: seq: 11, get_clock
Sent 69 1464.251566 1464.251566 6: seq: 12, get_clock
Sent 70 1465.235706 1465.235706 6: seq: 13, get_clock
Sent 71 1466.219885 1466.219885 6: seq: 14, get_clock
Sent 72 1467.203883 1467.203883 6: seq: 15, get_clock
Sent 73 1468.187906 1468.187906 6: seq: 16, get_clock
Sent 74 1469.172159 1469.172159 6: seq: 17, get_clock
Sent 75 1470.156289 1470.156289 6: seq: 18, get_clock
Sent 76 1471.140450 1471.140450 6: seq: 19, get_clock
Sent 77 1472.124850 1472.124850 6: seq: 1a, get_clock
Sent 78 1473.109521 1473.109521 6: seq: 1b, get_clock
Sent 79 1474.094067 1474.094067 6: seq: 1c, get_clock
Sent 80 1475.078710 1475.078710 6: seq: 1d, get_clock
Sent 81 1476.063471 1476.063471 6: seq: 1e, get_clock
Sent 82 1477.047776 1477.047776 6: seq: 1f, get_clock
Sent 83 1478.032363 1478.032363 6: seq: 10, get_clock
Sent 84 1479.017138 1479.017138 6: seq: 11, get_clock
Sent 85 1480.001454 1480.001454 6: seq: 12, get_clock
Sent 86 1480.986698 1480.986698 6: seq: 13, get_clock
Sent 87 1481.971443 1481.971443 6: seq: 14, get_clock
Sent 88 1482.956055 1482.956055 6: seq: 15, get_clock
Sent 89 1483.940208 1483.940208 6: seq: 16, get_clock
Sent 90 1484.924352 1484.924352 6: seq: 17, get_clock
Sent 91 1485.908762 1485.908762 6: seq: 18, get_clock
Sent 92 1486.893411 1486.893411 6: seq: 19, get_clock
Sent 93 1487.878308 1487.878308 6: seq: 1a, get_clock
Sent 94 1488.863282 1488.863282 6: seq: 1b, get_clock
Sent 95 1489.847368 1489.847368 6: seq: 1c, get_clock
Sent 96 1490.831761 1490.831761 6: seq: 1d, get_clock
Sent 97 1491.816755 1491.816755 6: seq: 1e, get_clock
Sent 98 1492.801643 1492.801643 6: seq: 1f, get_clock
Sent 99 1493.033540 1493.033540 6: seq: 10, emergency_stop
Dumping receive queue 100 messages
Receive: 0 1412.065451 1412.065162 11: seq: 1e, clock clock=1433861932
Receive: 1 1413.049673 1413.049401 11: seq: 1f, clock clock=1483073369
Receive: 2 1413.498920 1413.049401 13: seq: 1f, stats count=56 sum=54408 sumsq=436064
Receive: 3 1414.033991 1414.033716 11: seq: 10, clock clock=1532288992
Receive: 4 1415.018182 1415.017870 11: seq: 11, clock clock=1581496665
Receive: 5 1416.002923 1416.002651 11: seq: 12, clock clock=1630735098
Receive: 6 1416.991045 1416.990791 11: seq: 13, clock clock=1680144093
Receive: 7 1417.975216 1417.974918 11: seq: 14, clock clock=1729351849
Receive: 8 1418.598681 1417.974918 13: seq: 14, stats count=56 sum=53237 sumsq=421903
Receive: 9 1418.958993 1418.958863 11: seq: 15, clock clock=1778544371
Receive: 10 1419.943169 1419.943039 11: seq: 16, clock clock=1827753207
Receive: 11 1420.927482 1420.927351 11: seq: 17, clock clock=1876968936
Receive: 12 1421.912096 1421.911990 11: seq: 18, clock clock=1926199811
Receive: 13 1422.896546 1422.896426 11: seq: 19, clock clock=1975422487
Receive: 14 1423.598791 1422.896426 13: seq: 19, stats count=55 sum=22725 sumsq=75574
Receive: 15 1423.880978 1423.880657 11: seq: 1a, clock clock=2024640361
Receive: 16 1424.865738 1424.865435 11: seq: 1b, clock clock=2073878605
Receive: 17 1425.850231 1425.849896 11: seq: 1c, clock clock=2123102963
Receive: 18 1426.835153 1426.834824 11: seq: 1d, clock clock=2172349239
Receive: 19 1427.819250 1427.818966 11: seq: 1e, clock clock=2221554487
Receive: 20 1428.598831 1427.818966 13: seq: 1e, stats count=55 sum=54654 sumsq=473862
Receive: 21 1428.803594 1428.803306 11: seq: 1f, clock clock=2270771635
Receive: 22 1429.788597 1429.788282 11: seq: 10, clock clock=2320021829
Receive: 23 1430.773270 1430.772941 11: seq: 11, clock clock=2369255621
Receive: 24 1431.757967 1431.757658 11: seq: 12, clock clock=2418490471
Receive: 25 1432.742479 1432.742148 11: seq: 13, clock clock=2467715948
Receive: 26 1433.598808 1432.742148 13: seq: 13, stats count=55 sum=55833 sumsq=483999
Receive: 27 1433.727438 1433.727126 11: seq: 14, clock clock=2516964130
Receive: 28 1434.712094 1434.711957 11: seq: 15, clock clock=2566201196
Receive: 29 1435.696179 1435.696074 11: seq: 16, clock clock=2615405522
Receive: 30 1436.680460 1436.680357 11: seq: 17, clock clock=2664619775
Receive: 31 1437.664874 1437.664766 11: seq: 18, clock clock=2713840528
Receive: 32 1438.649421 1438.649315 11: seq: 19, clock clock=2763067936
Receive: 33 1438.649431 1438.649315 13: seq: 19, stats count=56 sum=30247 sumsq=171532
Receive: 34 1439.634414 1439.634123 11: seq: 1a, clock clock=2812313800
Receive: 35 1440.618684 1440.618344 11: seq: 1b, clock clock=2861527413
Receive: 36 1441.603241 1441.602948 11: seq: 1c, clock clock=2910755264
Receive: 37 1442.587748 1442.587472 11: seq: 1d, clock clock=2959981019
Receive: 38 1443.571885 1443.571609 11: seq: 1e, clock clock=3009187923
Receive: 39 1443.698717 1443.571609 13: seq: 1e, stats count=56 sum=48953 sumsq=402070
Receive: 40 1444.556784 1444.556494 11: seq: 1f, clock clock=3058432818
Receive: 41 1445.540878 1445.540578 11: seq: 10, clock clock=3107637757
Receive: 42 1446.524954 1446.524652 11: seq: 11, clock clock=3156841544
Receive: 43 1447.509504 1447.509205 11: seq: 12, clock clock=3206069177
Receive: 44 1448.496401 1448.496072 11: seq: 13, clock clock=3255414035
Receive: 45 1448.698740 1448.496072 13: seq: 13, stats count=55 sum=55456 sumsq=467105
Receive: 46 1449.480971 1449.480643 11: seq: 14, clock clock=3304642506
Receive: 47 1450.465864 1450.465578 11: seq: 15, clock clock=3353887515
Receive: 48 1451.450485 1451.450358 11: seq: 16, clock clock=3403121750
Receive: 49 1452.434663 1452.434536 11: seq: 17, clock clock=3452330540
Receive: 50 1453.418808 1453.418705 11: seq: 18, clock clock=3501538954
Receive: 51 1453.798595 1453.418705 13: seq: 18, stats count=56 sum=36646 sumsq=245625
Receive: 52 1454.402915 1454.402809 11: seq: 19, clock clock=3550744407
Receive: 53 1455.387238 1455.387131 11: seq: 1a, clock clock=3599960727
Receive: 54 1456.371982 1456.371684 11: seq: 1b, clock clock=3649193748
Receive: 55 1457.357016 1457.356713 11: seq: 1c, clock clock=3698446013
Receive: 56 1458.341593 1458.341300 11: seq: 1d, clock clock=3747675215
Receive: 57 1458.798759 1458.341300 13: seq: 1d, stats count=55 sum=41490 sumsq=296305
Receive: 58 1459.325792 1459.325513 11: seq: 1e, clock clock=3796885519
Receive: 59 1460.310819 1460.310573 11: seq: 1f, clock clock=3846137674
Receive: 60 1461.295326 1461.294996 11: seq: 10, clock clock=3895362193
Receive: 61 1462.282536 1462.282135 11: seq: 11, clock clock=3944719134
Receive: 62 1463.267261 1463.266894 11: seq: 12, clock clock=3993955908
Receive: 63 1463.898804 1463.266894 13: seq: 12, stats count=56 sum=56346 sumsq=477470
Receive: 64 1464.251829 1464.251566 11: seq: 13, clock clock=4043187649
Receive: 65 1465.235974 1465.235706 11: seq: 14, clock clock=4092394876
Receive: 66 1466.220180 1466.219885 11: seq: 15, clock clock=4141605523
Receive: 67 1467.203994 1467.203883 11: seq: 16, clock clock=4190800170
Receive: 68 1468.188017 1468.187906 10: seq: 17, clock clock=4240001499
Receive: 69 1468.998529 1468.187906 13: seq: 17, stats count=56 sum=42566 sumsq=299540
Receive: 70 1469.172265 1469.172159 10: seq: 18, clock clock=4289213995
Receive: 71 1470.156397 1470.156289 10: seq: 19, clock clock=43453404
Receive: 72 1471.140564 1471.140450 10: seq: 1a, clock clock=92661769
Receive: 73 1472.125105 1472.124850 10: seq: 1b, clock clock=141885943
Receive: 74 1473.109778 1473.109521 10: seq: 1c, clock clock=191119725
Receive: 75 1473.998631 1473.109521 13: seq: 1c, stats count=55 sum=32824 sumsq=179185
Receive: 76 1474.094471 1474.094067 11: seq: 1d, clock clock=240352358
Receive: 77 1475.079008 1475.078710 11: seq: 1e, clock clock=289581148
Receive: 78 1476.063764 1476.063471 11: seq: 1f, clock clock=338818606
Receive: 79 1477.048022 1477.047776 11: seq: 10, clock clock=388032553
Receive: 80 1478.032665 1478.032363 11: seq: 11, clock clock=437263417
Receive: 81 1478.998611 1478.032363 13: seq: 11, stats count=55 sum=53728 sumsq=500403
Receive: 82 1479.017403 1479.017138 11: seq: 12, clock clock=486501562
Receive: 83 1480.001712 1480.001454 11: seq: 13, clock clock=535716972
Receive: 84 1480.986978 1480.986698 11: seq: 14, clock clock=584980570
Receive: 85 1481.971722 1481.971443 11: seq: 15, clock clock=634217955
Receive: 86 1482.956305 1482.956055 11: seq: 16, clock clock=683446963
Receive: 87 1483.940307 1483.940208 11: seq: 17, clock clock=732650708
Receive: 88 1484.098553 1483.940208 13: seq: 17, stats count=57 sum=51689 sumsq=440729
Receive: 89 1484.924452 1484.924352 11: seq: 18, clock clock=781857878
Receive: 90 1485.908870 1485.908762 11: seq: 19, clock clock=831078820
Receive: 91 1486.893544 1486.893411 11: seq: 1a, clock clock=880312595
Receive: 92 1487.878517 1487.878308 11: seq: 1b, clock clock=929561473
Receive: 93 1488.863575 1488.863282 11: seq: 1c, clock clock=978814089
Receive: 94 1489.198463 1488.863282 13: seq: 1c, stats count=56 sum=23911 sumsq=82287
Receive: 95 1489.847487 1489.847368 11: seq: 1d, clock clock=1028010265
Receive: 96 1490.831873 1490.831761 11: seq: 1e, clock clock=1077229749
Receive: 97 1491.816873 1491.816755 11: seq: 1f, clock clock=1126479823
Receive: 98 1492.801761 1492.801643 11: seq: 10, clock clock=1175724360
Receive: 99 1493.033783 1493.033540 12: seq: 11, shutdown clock=1187320913 static_string_id=Command request
Unable to issue reset command on MCU 'mcu'
Attempting MCU 'rpi' config_reset command
b'Got EOF when reading from device'
webhooks client 4125801752: Disconnected
Restarting printer
Start printer at Sat Apr 20 22:37:14 2024 (1713649034.7 1500.2)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
webhooks client 4124581648: New connection
webhooks client 4124581648: Client info {'program': 'Moonraker', 'version': 'v0.8.0-325-g99b97af'}
Loaded MCU 'mcu' 106 commands (v0.12.0-142-gb029d046 / gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.34-4+rpi1+14) 2.34)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1_PB6_PB7=PB6,PB7 BUS_PINS_i2c1_PB8_PB9=PB8,PB9 BUS_PINS_i2c2_PB10_PB11=PB10,PB11 BUS_PINS_i2c3_PA8_PC9=PA8,PC9 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi2a=PC2,PC3,PB10 BUS_PINS_spi3a=PC11,PC12,PC10 BUS_PINS_spi4=PE13,PE14,PE12 BUS_PINS_spi5=PF8,PF9,PF7 BUS_PINS_spi5a=PH7,PF11,PH6 BUS_PINS_spi6=PG12,PG14,PG13 CLOCK_FREQ=400000000 MCU=stm32h723xx PWM_MAX=255 RESERVE_PINS_USB=PA11,PA12 RESERVE_PINS_crystal=PH0,PH1 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
mcu 'rpi': Starting connect
Loaded MCU 'rpi' 112 commands (v0.12.0-142-gb029d046 / gcc: (Raspbian 10.2.1-6+rpi1) 10.2.1 20210110 binutils: (GNU Binutils for Raspbian) 2.35.2)
MCU 'rpi' config: ADC_MAX=4095 CLOCK_FREQ=50000000 MCU=linux PCA9685_MAX=4096 PWM_MAX=32768 STATS_SUMSQ_BASE=256
mcu_temperature 'mcu' nominal base=-273.952569 slope=1618.577075
Sending MCU 'mcu' printer configuration...
Configured MCU 'mcu' (1024 moves)
Sending MCU 'rpi' printer configuration...
Configured MCU 'rpi' (1024 moves)
Starting heater checks for heater_bed
bed_mesh: generated points
Index |  Tool Adjusted  |   Probe
  0   | (40.0, 23.0)    | (10.0, 8.4)
  1   | (57.8, 23.0)    | (27.8, 8.4)
  2   | (75.5, 23.0)    | (45.5, 8.4)
  3   | (93.3, 23.0)    | (63.3, 8.4)
  4   | (111.1, 23.0)   | (81.1, 8.4)
  5   | (128.8, 23.0)   | (98.8, 8.4)
  6   | (146.6, 23.0)   | (116.6, 8.4)
  7   | (164.4, 23.0)   | (134.4, 8.4)
  8   | (182.2, 23.0)   | (152.2, 8.4)
  9   | (199.9, 23.0)   | (169.9, 8.4)
  10  | (199.9, 42.7)   | (169.9, 28.1)
  11  | (182.2, 42.7)   | (152.2, 28.1)
  12  | (164.4, 42.7)   | (134.4, 28.1)
  13  | (146.6, 42.7)   | (116.6, 28.1)
  14  | (128.9, 42.7)   | (98.9, 28.1)
  15  | (111.1, 42.7)   | (81.1, 28.1)
  16  | (93.3, 42.7)    | (63.3, 28.1)
  17  | (75.5, 42.7)    | (45.5, 28.1)
  18  | (57.8, 42.7)    | (27.8, 28.1)
  19  | (40.0, 42.7)    | (10.0, 28.1)
  20  | (40.0, 62.3)    | (10.0, 47.8)
  21  | (57.8, 62.3)    | (27.8, 47.8)
  22  | (75.5, 62.3)    | (45.5, 47.8)
  23  | (93.3, 62.3)    | (63.3, 47.8)
  24  | (111.1, 62.3)   | (81.1, 47.8)
  25  | (128.8, 62.3)   | (98.8, 47.8)
  26  | (146.6, 62.3)   | (116.6, 47.8)
  27  | (164.4, 62.3)   | (134.4, 47.8)
  28  | (182.2, 62.3)   | (152.2, 47.8)
  29  | (199.9, 62.3)   | (169.9, 47.8)
  30  | (199.9, 82.0)   | (169.9, 67.4)
  31  | (182.2, 82.0)   | (152.2, 67.4)
  32  | (164.4, 82.0)   | (134.4, 67.4)
  33  | (146.6, 82.0)   | (116.6, 67.4)
  34  | (128.9, 82.0)   | (98.9, 67.4)
  35  | (111.1, 82.0)   | (81.1, 67.4)
  36  | (93.3, 82.0)    | (63.3, 67.4)
  37  | (75.5, 82.0)    | (45.5, 67.4)
  38  | (57.8, 82.0)    | (27.8, 67.4)
  39  | (40.0, 82.0)    | (10.0, 67.4)
  40  | (40.0, 101.6)   | (10.0, 87.1)
  41  | (57.8, 101.6)   | (27.8, 87.1)
  42  | (75.5, 101.6)   | (45.5, 87.1)
  43  | (93.3, 101.6)   | (63.3, 87.1)
  44  | (111.1, 101.6)  | (81.1, 87.1)
  45  | (128.8, 101.6)  | (98.8, 87.1)
  46  | (146.6, 101.6)  | (116.6, 87.1)
  47  | (164.4, 101.6)  | (134.4, 87.1)
  48  | (182.2, 101.6)  | (152.2, 87.1)
  49  | (199.9, 101.6)  | (169.9, 87.1)
  50  | (199.9, 121.3)  | (169.9, 106.7)
  51  | (182.2, 121.3)  | (152.2, 106.7)
  52  | (164.4, 121.3)  | (134.4, 106.7)
  53  | (146.6, 121.3)  | (116.6, 106.7)
  54  | (128.9, 121.3)  | (98.9, 106.7)
  55  | (111.1, 121.3)  | (81.1, 106.7)
  56  | (93.3, 121.3)   | (63.3, 106.7)
  57  | (75.5, 121.3)   | (45.5, 106.7)
  58  | (57.8, 121.3)   | (27.8, 106.7)
  59  | (40.0, 121.3)   | (10.0, 106.7)
  60  | (40.0, 141.0)   | (10.0, 126.4)
  61  | (57.8, 141.0)   | (27.8, 126.4)
  62  | (75.5, 141.0)   | (45.5, 126.4)
  63  | (93.3, 141.0)   | (63.3, 126.4)
  64  | (111.1, 141.0)  | (81.1, 126.4)
  65  | (128.8, 141.0)  | (98.8, 126.4)
  66  | (146.6, 141.0)  | (116.6, 126.4)
  67  | (164.4, 141.0)  | (134.4, 126.4)
  68  | (182.2, 141.0)  | (152.2, 126.4)
  69  | (199.9, 141.0)  | (169.9, 126.4)
  70  | (199.9, 160.6)  | (169.9, 146.1)
  71  | (182.2, 160.6)  | (152.2, 146.1)
  72  | (164.4, 160.6)  | (134.4, 146.1)
  73  | (146.6, 160.6)  | (116.6, 146.1)
  74  | (128.9, 160.6)  | (98.9, 146.1)
  75  | (111.1, 160.6)  | (81.1, 146.1)
  76  | (93.3, 160.6)   | (63.3, 146.1)
  77  | (75.5, 160.6)   | (45.5, 146.1)
  78  | (57.8, 160.6)   | (27.8, 146.1)
  79  | (40.0, 160.6)   | (10.0, 146.1)
  80  | (40.0, 180.3)   | (10.0, 165.7)
  81  | (57.8, 180.3)   | (27.8, 165.7)
  82  | (75.5, 180.3)   | (45.5, 165.7)
  83  | (93.3, 180.3)   | (63.3, 165.7)
  84  | (111.1, 180.3)  | (81.1, 165.7)
  85  | (128.8, 180.3)  | (98.8, 165.7)
  86  | (146.6, 180.3)  | (116.6, 165.7)
  87  | (164.4, 180.3)  | (134.4, 165.7)
  88  | (182.2, 180.3)  | (152.2, 165.7)
  89  | (199.9, 180.3)  | (169.9, 165.7)
  90  | (199.9, 199.9)  | (169.9, 185.4)
  91  | (182.2, 199.9)  | (152.2, 185.4)
  92  | (164.4, 199.9)  | (134.4, 185.4)
  93  | (146.6, 199.9)  | (116.6, 185.4)
  94  | (128.9, 199.9)  | (98.9, 185.4)
  95  | (111.1, 199.9)  | (81.1, 185.4)
  96  | (93.3, 199.9)   | (63.3, 185.4)
  97  | (75.5, 199.9)   | (45.5, 185.4)
  98  | (57.8, 199.9)   | (27.8, 185.4)
  99  | (40.0, 199.9)   | (10.0, 185.4)
Starting heater checks for extruder
autotune_tmc set stepper_x pwm_freq=0
autotune_tmc stepper_x ncycles=480 pfdcycles=206
autotune_tmc set stepper_x tpfd=2
autotune_tmc set stepper_x tbl=1
autotune_tmc set stepper_x toff=3
autotune_tmc set stepper_x hstrt=7
autotune_tmc set stepper_x hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_x pwm_autoscale=True
autotune_tmc set stepper_x pwm_autograd=True
autotune_tmc set stepper_x pwm_grad=4
autotune_tmc set stepper_x pwm_ofs=10
autotune_tmc set stepper_x pwm_reg=15
autotune_tmc set stepper_x pwm_lim=4
autotune_tmc set stepper_x tpwmthrs=1048575
autotune_tmc set stepper_x en_pwm_mode=False
autotune_tmc set stepper_x tcoolthrs=391(24.0)
autotune_tmc set stepper_x sgt=1
autotune_tmc set stepper_x small_hysteresis=False
autotune_tmc set stepper_x semin=2
autotune_tmc set stepper_x semax=2
autotune_tmc set stepper_x seup=3
autotune_tmc set stepper_x sedn=2
autotune_tmc set stepper_x seimin=0
autotune_tmc set stepper_x sfilt=0
autotune_tmc set stepper_x iholddelay=12
autotune_tmc set stepper_x vhighfs=False
autotune_tmc set stepper_x vhighchm=False
autotune_tmc set stepper_x multistep_filt=True
autotune_tmc set stepper_x1 pwm_freq=0
autotune_tmc stepper_x1 ncycles=480 pfdcycles=206
autotune_tmc set stepper_x1 tpfd=2
autotune_tmc set stepper_x1 tbl=1
autotune_tmc set stepper_x1 toff=3
autotune_tmc set stepper_x1 hstrt=7
autotune_tmc set stepper_x1 hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_x1 pwm_autoscale=True
autotune_tmc set stepper_x1 pwm_autograd=True
autotune_tmc set stepper_x1 pwm_grad=4
autotune_tmc set stepper_x1 pwm_ofs=10
autotune_tmc set stepper_x1 pwm_reg=15
autotune_tmc set stepper_x1 pwm_lim=4
autotune_tmc set stepper_x1 tpwmthrs=1048575
autotune_tmc set stepper_x1 en_pwm_mode=False
autotune_tmc set stepper_x1 tcoolthrs=391(24.0)
autotune_tmc set stepper_x1 sgt=1
autotune_tmc set stepper_x1 small_hysteresis=False
autotune_tmc set stepper_x1 semin=2
autotune_tmc set stepper_x1 semax=2
autotune_tmc set stepper_x1 seup=3
autotune_tmc set stepper_x1 sedn=2
autotune_tmc set stepper_x1 seimin=0
autotune_tmc set stepper_x1 sfilt=0
autotune_tmc set stepper_x1 iholddelay=12
autotune_tmc set stepper_x1 vhighfs=False
autotune_tmc set stepper_x1 vhighchm=False
autotune_tmc set stepper_x1 multistep_filt=True
autotune_tmc set stepper_y pwm_freq=0
autotune_tmc stepper_y ncycles=480 pfdcycles=206
autotune_tmc set stepper_y tpfd=2
autotune_tmc set stepper_y tbl=1
autotune_tmc set stepper_y toff=3
autotune_tmc set stepper_y hstrt=7
autotune_tmc set stepper_y hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_y pwm_autoscale=True
autotune_tmc set stepper_y pwm_autograd=True
autotune_tmc set stepper_y pwm_grad=4
autotune_tmc set stepper_y pwm_ofs=10
autotune_tmc set stepper_y pwm_reg=15
autotune_tmc set stepper_y pwm_lim=4
autotune_tmc set stepper_y tpwmthrs=1048575
autotune_tmc set stepper_y en_pwm_mode=False
autotune_tmc set stepper_y tcoolthrs=391(24.0)
autotune_tmc set stepper_y sgt=1
autotune_tmc set stepper_y small_hysteresis=False
autotune_tmc set stepper_y semin=2
autotune_tmc set stepper_y semax=2
autotune_tmc set stepper_y seup=3
autotune_tmc set stepper_y sedn=2
autotune_tmc set stepper_y seimin=0
autotune_tmc set stepper_y sfilt=0
autotune_tmc set stepper_y iholddelay=12
autotune_tmc set stepper_y vhighfs=False
autotune_tmc set stepper_y vhighchm=False
autotune_tmc set stepper_y multistep_filt=True
autotune_tmc set stepper_y1 pwm_freq=0
autotune_tmc stepper_y1 ncycles=480 pfdcycles=206
autotune_tmc set stepper_y1 tpfd=2
autotune_tmc set stepper_y1 tbl=1
autotune_tmc set stepper_y1 toff=3
autotune_tmc set stepper_y1 hstrt=7
autotune_tmc set stepper_y1 hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_y1 pwm_autoscale=True
autotune_tmc set stepper_y1 pwm_autograd=True
autotune_tmc set stepper_y1 pwm_grad=4
autotune_tmc set stepper_y1 pwm_ofs=10
autotune_tmc set stepper_y1 pwm_reg=15
autotune_tmc set stepper_y1 pwm_lim=4
autotune_tmc set stepper_y1 tpwmthrs=1048575
autotune_tmc set stepper_y1 en_pwm_mode=False
autotune_tmc set stepper_y1 tcoolthrs=391(24.0)
autotune_tmc set stepper_y1 sgt=1
autotune_tmc set stepper_y1 small_hysteresis=False
autotune_tmc set stepper_y1 semin=2
autotune_tmc set stepper_y1 semax=2
autotune_tmc set stepper_y1 seup=3
autotune_tmc set stepper_y1 sedn=2
autotune_tmc set stepper_y1 seimin=0
autotune_tmc set stepper_y1 sfilt=0
autotune_tmc set stepper_y1 iholddelay=12
autotune_tmc set stepper_y1 vhighfs=False
autotune_tmc set stepper_y1 vhighchm=False
autotune_tmc set stepper_y1 multistep_filt=True
autotune_tmc set stepper_z pwm_freq=0
autotune_tmc stepper_z ncycles=480 pfdcycles=206
autotune_tmc set stepper_z tbl=1
autotune_tmc set stepper_z toff=3
autotune_tmc set stepper_z hstrt=7
autotune_tmc set stepper_z hend=9
autotune_tmc set stepper_z sgthrs=40
autotune_tmc using max PWM speed 43.108253
autotune_tmc set stepper_z pwm_autoscale=True
autotune_tmc set stepper_z pwm_autograd=True
autotune_tmc set stepper_z pwm_grad=7
autotune_tmc set stepper_z pwm_ofs=18
autotune_tmc set stepper_z pwm_reg=15
autotune_tmc set stepper_z pwm_lim=4
autotune_tmc set stepper_z tpwmthrs=1048575
autotune_tmc set stepper_z en_spreadcycle=True
autotune_tmc set stepper_z tcoolthrs=391(2.4)
autotune_tmc set stepper_z semin=2
autotune_tmc set stepper_z semax=2
autotune_tmc set stepper_z seup=3
autotune_tmc set stepper_z sedn=2
autotune_tmc set stepper_z seimin=0
autotune_tmc set stepper_z iholddelay=12
autotune_tmc set stepper_z multistep_filt=True
autotune_tmc set stepper_z1 pwm_freq=0
autotune_tmc stepper_z1 ncycles=480 pfdcycles=206
autotune_tmc set stepper_z1 tbl=1
autotune_tmc set stepper_z1 toff=3
autotune_tmc set stepper_z1 hstrt=7
autotune_tmc set stepper_z1 hend=9
autotune_tmc set stepper_z1 sgthrs=40
autotune_tmc using max PWM speed 43.108253
autotune_tmc set stepper_z1 pwm_autoscale=True
autotune_tmc set stepper_z1 pwm_autograd=True
autotune_tmc set stepper_z1 pwm_grad=7
autotune_tmc set stepper_z1 pwm_ofs=18
autotune_tmc set stepper_z1 pwm_reg=15
autotune_tmc set stepper_z1 pwm_lim=4
autotune_tmc set stepper_z1 tpwmthrs=1048575
autotune_tmc set stepper_z1 en_spreadcycle=True
autotune_tmc set stepper_z1 tcoolthrs=391(2.4)
autotune_tmc set stepper_z1 semin=2
autotune_tmc set stepper_z1 semax=2
autotune_tmc set stepper_z1 seup=3
autotune_tmc set stepper_z1 sedn=2
autotune_tmc set stepper_z1 seimin=0
autotune_tmc set stepper_z1 iholddelay=12
autotune_tmc set stepper_z1 multistep_filt=True
autotune_tmc set stepper_z2 pwm_freq=0
autotune_tmc stepper_z2 ncycles=480 pfdcycles=206
autotune_tmc set stepper_z2 tbl=1
autotune_tmc set stepper_z2 toff=3
autotune_tmc set stepper_z2 hstrt=7
autotune_tmc set stepper_z2 hend=9
autotune_tmc set stepper_z2 sgthrs=40
autotune_tmc using max PWM speed 43.108253
autotune_tmc set stepper_z2 pwm_autoscale=True
autotune_tmc set stepper_z2 pwm_autograd=True
autotune_tmc set stepper_z2 pwm_grad=7
autotune_tmc set stepper_z2 pwm_ofs=18
autotune_tmc set stepper_z2 pwm_reg=15
autotune_tmc set stepper_z2 pwm_lim=4
autotune_tmc set stepper_z2 tpwmthrs=1048575
autotune_tmc set stepper_z2 en_spreadcycle=True
autotune_tmc set stepper_z2 tcoolthrs=391(2.4)
autotune_tmc set stepper_z2 semin=2
autotune_tmc set stepper_z2 semax=2
autotune_tmc set stepper_z2 seup=3
autotune_tmc set stepper_z2 sedn=2
autotune_tmc set stepper_z2 seimin=0
autotune_tmc set stepper_z2 iholddelay=12
autotune_tmc set stepper_z2 multistep_filt=True
Stats 1504.2: gcodein=0  mcu: mcu_awake=0.010 mcu_task_avg=0.000014 mcu_task_stddev=0.000095 bytes_write=9077 bytes_read=12069 bytes_retransmit=9 bytes_invalid=0 send_seq=590 receive_seq=590 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400027647 rpi: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=822 bytes_read=4516 bytes_retransmit=0 bytes_invalid=0 send_seq=112 receive_seq=112 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49998698 adj=49993408 Octopus_Max: temp=34.9 Pi: temp=36.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.14 cputime=9.859 memavail=7504324 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
webhooks: registering remote method 'shutdown_machine' for connection id: 4124581648
webhooks: registering remote method 'reboot_machine' for connection id: 4124581648
webhooks: registering remote method 'pause_job_queue' for connection id: 4124581648
webhooks: registering remote method 'start_job_queue' for connection id: 4124581648
webhooks: registering remote method 'set_device_power' for connection id: 4124581648
Stats 1505.2: gcodein=0  mcu: mcu_awake=0.010 mcu_task_avg=0.000014 mcu_task_stddev=0.000095 bytes_write=9083 bytes_read=12366 bytes_retransmit=9 bytes_invalid=0 send_seq=591 receive_seq=591 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400031283 rpi: mcu_awake=0.003 mcu_task_avg=0.000019 mcu_task_stddev=0.000011 bytes_write=828 bytes_read=4546 bytes_retransmit=0 bytes_invalid=0 send_seq=113 receive_seq=113 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000992 adj=49996142 Octopus_Max: temp=34.6 Pi: temp=37.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-110.0 sysload=0.14 cputime=9.947 memavail=7504108 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1506.2: gcodein=0  mcu: mcu_awake=0.010 mcu_task_avg=0.000014 mcu_task_stddev=0.000095 bytes_write=9089 bytes_read=12648 bytes_retransmit=9 bytes_invalid=0 send_seq=592 receive_seq=592 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400031890 rpi: mcu_awake=0.003 mcu_task_avg=0.000019 mcu_task_stddev=0.000011 bytes_write=834 bytes_read=4562 bytes_retransmit=0 bytes_invalid=0 send_seq=114 receive_seq=114 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000884 adj=49999182 Octopus_Max: temp=34.8 Pi: temp=36.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.14 cputime=9.975 memavail=7504108 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1507.2: gcodein=0  mcu: mcu_awake=0.010 mcu_task_avg=0.000014 mcu_task_stddev=0.000095 bytes_write=9095 bytes_read=12945 bytes_retransmit=9 bytes_invalid=0 send_seq=593 receive_seq=593 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400031947 rpi: mcu_awake=0.003 mcu_task_avg=0.000019 mcu_task_stddev=0.000011 bytes_write=840 bytes_read=4578 bytes_retransmit=0 bytes_invalid=0 send_seq=115 receive_seq=115 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000786 adj=49998274 Octopus_Max: temp=34.9 Pi: temp=36.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.13 cputime=10.003 memavail=7504108 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1508.2: gcodein=0  mcu: mcu_awake=0.010 mcu_task_avg=0.000014 mcu_task_stddev=0.000095 bytes_write=9101 bytes_read=13242 bytes_retransmit=9 bytes_invalid=0 send_seq=594 receive_seq=594 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400031150 rpi: mcu_awake=0.003 mcu_task_avg=0.000019 mcu_task_stddev=0.000011 bytes_write=846 bytes_read=4594 bytes_retransmit=0 bytes_invalid=0 send_seq=116 receive_seq=116 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000700 adj=49997689 Octopus_Max: temp=34.9 Pi: temp=36.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.8 barrow: temp=-110.0 sysload=0.13 cputime=10.033 memavail=7504108 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.3 pwm=0.000
Stats 1509.2: gcodein=0  mcu: mcu_awake=0.005 mcu_task_avg=0.000004 mcu_task_stddev=0.000006 bytes_write=9107 bytes_read=13529 bytes_retransmit=9 bytes_invalid=0 send_seq=595 receive_seq=595 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400030807 rpi: mcu_awake=0.003 mcu_task_avg=0.000019 mcu_task_stddev=0.000011 bytes_write=852 bytes_read=4610 bytes_retransmit=0 bytes_invalid=0 send_seq=117 receive_seq=117 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000598 adj=49997509 Octopus_Max: temp=34.8 Pi: temp=36.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-110.0 sysload=0.13 cputime=10.060 memavail=7504108 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1510.2: gcodein=0  mcu: mcu_awake=0.005 mcu_task_avg=0.000004 mcu_task_stddev=0.000006 bytes_write=9113 bytes_read=13823 bytes_retransmit=9 bytes_invalid=0 send_seq=596 receive_seq=596 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400030509 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000018 bytes_write=864 bytes_read=4655 bytes_retransmit=0 bytes_invalid=0 send_seq=119 receive_seq=119 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000568 adj=49997175 Octopus_Max: temp=35.0 Pi: temp=36.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.13 cputime=10.089 memavail=7504108 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1511.2: gcodein=0  mcu: mcu_awake=0.005 mcu_task_avg=0.000004 mcu_task_stddev=0.000006 bytes_write=9119 bytes_read=14120 bytes_retransmit=9 bytes_invalid=0 send_seq=597 receive_seq=597 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400030210 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000018 bytes_write=870 bytes_read=4671 bytes_retransmit=0 bytes_invalid=0 send_seq=120 receive_seq=120 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000526 adj=49997093 Octopus_Max: temp=35.1 Pi: temp=35.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.13 cputime=10.116 memavail=7504108 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1512.2: gcodein=0  mcu: mcu_awake=0.005 mcu_task_avg=0.000004 mcu_task_stddev=0.000006 bytes_write=9125 bytes_read=14402 bytes_retransmit=9 bytes_invalid=0 send_seq=598 receive_seq=598 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029647 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000018 bytes_write=876 bytes_read=4687 bytes_retransmit=0 bytes_invalid=0 send_seq=121 receive_seq=121 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000403 adj=49997000 Octopus_Max: temp=35.0 Pi: temp=36.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-110.0 sysload=0.12 cputime=10.138 memavail=7501880 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.3 pwm=0.000
Stats 1513.2: gcodein=0  mcu: mcu_awake=0.005 mcu_task_avg=0.000004 mcu_task_stddev=0.000006 bytes_write=9131 bytes_read=14699 bytes_retransmit=9 bytes_invalid=0 send_seq=599 receive_seq=599 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029805 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000018 bytes_write=882 bytes_read=4703 bytes_retransmit=0 bytes_invalid=0 send_seq=122 receive_seq=122 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000351 adj=49996765 Octopus_Max: temp=35.0 Pi: temp=37.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.12 cputime=10.154 memavail=7504144 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1514.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9137 bytes_read=15010 bytes_retransmit=9 bytes_invalid=0 send_seq=600 receive_seq=600 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029461 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000018 bytes_write=888 bytes_read=4719 bytes_retransmit=0 bytes_invalid=0 send_seq=123 receive_seq=123 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000308 adj=49996487 Octopus_Max: temp=35.0 Pi: temp=38.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.12 cputime=10.171 memavail=7502004 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1515.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9143 bytes_read=15292 bytes_retransmit=9 bytes_invalid=0 send_seq=601 receive_seq=601 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029232 rpi: mcu_awake=0.001 mcu_task_avg=0.000013 mcu_task_stddev=0.000015 bytes_write=894 bytes_read=4748 bytes_retransmit=0 bytes_invalid=0 send_seq=124 receive_seq=124 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000249 adj=49996524 Octopus_Max: temp=35.0 Pi: temp=37.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.12 cputime=10.186 memavail=7497900 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1516.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9149 bytes_read=15603 bytes_retransmit=9 bytes_invalid=0 send_seq=602 receive_seq=602 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029295 rpi: mcu_awake=0.001 mcu_task_avg=0.000013 mcu_task_stddev=0.000015 bytes_write=900 bytes_read=4764 bytes_retransmit=0 bytes_invalid=0 send_seq=125 receive_seq=125 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000232 adj=49996431 Octopus_Max: temp=35.0 Pi: temp=37.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-110.0 sysload=0.12 cputime=10.203 memavail=7492688 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1517.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9155 bytes_read=15886 bytes_retransmit=9 bytes_invalid=0 send_seq=603 receive_seq=603 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029082 rpi: mcu_awake=0.001 mcu_task_avg=0.000013 mcu_task_stddev=0.000015 bytes_write=906 bytes_read=4780 bytes_retransmit=0 bytes_invalid=0 send_seq=126 receive_seq=126 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000258 adj=49996365 Octopus_Max: temp=35.1 Pi: temp=37.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.19 cputime=10.221 memavail=7503496 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1518.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9161 bytes_read=16168 bytes_retransmit=9 bytes_invalid=0 send_seq=604 receive_seq=604 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028880 rpi: mcu_awake=0.001 mcu_task_avg=0.000013 mcu_task_stddev=0.000015 bytes_write=912 bytes_read=4796 bytes_retransmit=0 bytes_invalid=0 send_seq=127 receive_seq=127 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000236 adj=49996655 Octopus_Max: temp=35.2 Pi: temp=38.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.19 cputime=10.238 memavail=7500604 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1519.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9167 bytes_read=16493 bytes_retransmit=9 bytes_invalid=0 send_seq=605 receive_seq=605 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028719 rpi: mcu_awake=0.001 mcu_task_avg=0.000013 mcu_task_stddev=0.000015 bytes_write=918 bytes_read=4812 bytes_retransmit=0 bytes_invalid=0 send_seq=128 receive_seq=128 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000287 adj=49996664 Octopus_Max: temp=35.3 Pi: temp=37.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.19 cputime=10.255 memavail=7498368 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1520.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9173 bytes_read=16765 bytes_retransmit=9 bytes_invalid=0 send_seq=606 receive_seq=606 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028630 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000011 bytes_write=924 bytes_read=4841 bytes_retransmit=0 bytes_invalid=0 send_seq=129 receive_seq=129 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000244 adj=49997007 Octopus_Max: temp=35.3 Pi: temp=36.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.19 cputime=10.270 memavail=7495344 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1521.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9179 bytes_read=17047 bytes_retransmit=9 bytes_invalid=0 send_seq=607 receive_seq=607 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028528 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000011 bytes_write=930 bytes_read=4857 bytes_retransmit=0 bytes_invalid=0 send_seq=130 receive_seq=130 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000232 adj=49996767 Octopus_Max: temp=35.2 Pi: temp=38.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.19 cputime=10.286 memavail=7497872 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1522.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9185 bytes_read=17358 bytes_retransmit=9 bytes_invalid=0 send_seq=608 receive_seq=608 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028452 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000011 bytes_write=936 bytes_read=4873 bytes_retransmit=0 bytes_invalid=0 send_seq=131 receive_seq=131 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000214 adj=49996748 Octopus_Max: temp=35.3 Pi: temp=38.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.17 cputime=10.303 memavail=7495812 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1523.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9191 bytes_read=17641 bytes_retransmit=9 bytes_invalid=0 send_seq=609 receive_seq=609 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028429 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000011 bytes_write=942 bytes_read=4889 bytes_retransmit=0 bytes_invalid=0 send_seq=132 receive_seq=132 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000198 adj=49996683 Octopus_Max: temp=35.3 Pi: temp=37.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.17 cputime=10.320 memavail=7495276 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1524.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9197 bytes_read=17937 bytes_retransmit=9 bytes_invalid=0 send_seq=610 receive_seq=610 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028376 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000011 bytes_write=948 bytes_read=4905 bytes_retransmit=0 bytes_invalid=0 send_seq=133 receive_seq=133 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000188 adj=49996601 Octopus_Max: temp=35.4 Pi: temp=38.0  heater_bed: target=0 temp=26.4 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.9 barrow: temp=-119.3 sysload=0.17 cputime=10.337 memavail=7491984 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1525.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9203 bytes_read=18248 bytes_retransmit=9 bytes_invalid=0 send_seq=611 receive_seq=611 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028342 rpi: mcu_awake=0.001 mcu_task_avg=0.000009 mcu_task_stddev=0.000009 bytes_write=954 bytes_read=4934 bytes_retransmit=0 bytes_invalid=0 send_seq=134 receive_seq=134 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000178 adj=49996593 Octopus_Max: temp=35.3 Pi: temp=38.9  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.6 barrow: temp=-110.0 sysload=0.17 cputime=10.355 memavail=7491920 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 1526.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9209 bytes_read=18531 bytes_retransmit=9 bytes_invalid=0 send_seq=612 receive_seq=612 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028312 rpi: mcu_awake=0.001 mcu_task_avg=0.000009 mcu_task_stddev=0.000009 bytes_write=960 bytes_read=4950 bytes_retransmit=0 bytes_invalid=0 send_seq=135 receive_seq=135 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000180 adj=49996569 Octopus_Max: temp=35.4 Pi: temp=38.9  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.17 cputime=10.372 memavail=7493592 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1527.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9215 bytes_read=18813 bytes_retransmit=9 bytes_invalid=0 send_seq=613 receive_seq=613 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028282 rpi: mcu_awake=0.001 mcu_task_avg=0.000009 mcu_task_stddev=0.000009 bytes_write=966 bytes_read=4966 bytes_retransmit=0 bytes_invalid=0 send_seq=136 receive_seq=136 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000184 adj=49996624 Octopus_Max: temp=35.3 Pi: temp=38.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.6 barrow: temp=-110.0 sysload=0.24 cputime=10.389 memavail=7493252 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1528.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9221 bytes_read=19124 bytes_retransmit=9 bytes_invalid=0 send_seq=614 receive_seq=614 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028253 rpi: mcu_awake=0.001 mcu_task_avg=0.000009 mcu_task_stddev=0.000009 bytes_write=972 bytes_read=4982 bytes_retransmit=0 bytes_invalid=0 send_seq=137 receive_seq=137 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000185 adj=49996679 Octopus_Max: temp=35.5 Pi: temp=38.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.24 cputime=10.406 memavail=7491008 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1529.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9227 bytes_read=19421 bytes_retransmit=9 bytes_invalid=0 send_seq=615 receive_seq=615 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028234 rpi: mcu_awake=0.001 mcu_task_avg=0.000009 mcu_task_stddev=0.000009 bytes_write=978 bytes_read=4998 bytes_retransmit=0 bytes_invalid=0 send_seq=138 receive_seq=138 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000170 adj=49996703 Octopus_Max: temp=35.4 Pi: temp=38.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.24 cputime=10.423 memavail=7493508 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1530.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9233 bytes_read=19702 bytes_retransmit=9 bytes_invalid=0 send_seq=616 receive_seq=616 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028216 rpi: mcu_awake=0.001 mcu_task_avg=0.000009 mcu_task_stddev=0.000009 bytes_write=984 bytes_read=5027 bytes_retransmit=0 bytes_invalid=0 send_seq=139 receive_seq=139 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000164 adj=49996607 Octopus_Max: temp=35.4 Pi: temp=39.4  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-103.8 sysload=0.24 cputime=10.442 memavail=7494088 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1531.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9239 bytes_read=20003 bytes_retransmit=9 bytes_invalid=0 send_seq=617 receive_seq=617 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028197 rpi: mcu_awake=0.001 mcu_task_avg=0.000009 mcu_task_stddev=0.000009 bytes_write=990 bytes_read=5043 bytes_retransmit=0 bytes_invalid=0 send_seq=140 receive_seq=140 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000158 adj=49996589 Octopus_Max: temp=35.4 Pi: temp=38.9  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.6 barrow: temp=-110.0 sysload=0.24 cputime=10.460 memavail=7491772 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1532.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9245 bytes_read=20286 bytes_retransmit=9 bytes_invalid=0 send_seq=618 receive_seq=618 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028194 rpi: mcu_awake=0.001 mcu_task_avg=0.000009 mcu_task_stddev=0.000009 bytes_write=996 bytes_read=5059 bytes_retransmit=0 bytes_invalid=0 send_seq=141 receive_seq=141 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000149 adj=49996573 Octopus_Max: temp=35.6 Pi: temp=38.9  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.38 cputime=10.477 memavail=7490724 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1533.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9251 bytes_read=20568 bytes_retransmit=9 bytes_invalid=0 send_seq=619 receive_seq=619 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028211 rpi: mcu_awake=0.001 mcu_task_avg=0.000009 mcu_task_stddev=0.000009 bytes_write=1002 bytes_read=5075 bytes_retransmit=0 bytes_invalid=0 send_seq=142 receive_seq=142 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000151 adj=49996529 Octopus_Max: temp=35.4 Pi: temp=39.4  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-110.0 sysload=0.38 cputime=10.496 memavail=7485032 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1534.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9257 bytes_read=20893 bytes_retransmit=9 bytes_invalid=0 send_seq=620 receive_seq=620 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028197 rpi: mcu_awake=0.001 mcu_task_avg=0.000009 mcu_task_stddev=0.000009 bytes_write=1008 bytes_read=5091 bytes_retransmit=0 bytes_invalid=0 send_seq=143 receive_seq=143 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000153 adj=49996553 Octopus_Max: temp=35.5 Pi: temp=38.9  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.38 cputime=10.516 memavail=7496236 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1535.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9263 bytes_read=21176 bytes_retransmit=9 bytes_invalid=0 send_seq=621 receive_seq=621 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028193 rpi: mcu_awake=0.001 mcu_task_avg=0.000009 mcu_task_stddev=0.000009 bytes_write=1014 bytes_read=5107 bytes_retransmit=0 bytes_invalid=0 send_seq=144 receive_seq=144 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000151 adj=49996599 Octopus_Max: temp=35.4 Pi: temp=39.4  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.6 barrow: temp=-110.0 sysload=0.38 cputime=10.533 memavail=7490668 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1536.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9269 bytes_read=21458 bytes_retransmit=9 bytes_invalid=0 send_seq=622 receive_seq=622 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028181 rpi: mcu_awake=0.001 mcu_task_avg=0.000009 mcu_task_stddev=0.000009 bytes_write=1020 bytes_read=5136 bytes_retransmit=0 bytes_invalid=0 send_seq=145 receive_seq=145 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000149 adj=49996595 Octopus_Max: temp=35.5 Pi: temp=38.9  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.38 cputime=10.550 memavail=7487092 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1537.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9275 bytes_read=21769 bytes_retransmit=9 bytes_invalid=0 send_seq=623 receive_seq=623 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028177 rpi: mcu_awake=0.001 mcu_task_avg=0.000009 mcu_task_stddev=0.000009 bytes_write=1026 bytes_read=5152 bytes_retransmit=0 bytes_invalid=0 send_seq=146 receive_seq=146 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000151 adj=49996597 Octopus_Max: temp=35.5 Pi: temp=39.4  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.43 cputime=10.567 memavail=7483636 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1538.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9281 bytes_read=22052 bytes_retransmit=9 bytes_invalid=0 send_seq=624 receive_seq=624 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028171 rpi: mcu_awake=0.001 mcu_task_avg=0.000009 mcu_task_stddev=0.000009 bytes_write=1032 bytes_read=5168 bytes_retransmit=0 bytes_invalid=0 send_seq=147 receive_seq=147 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000147 adj=49996626 Octopus_Max: temp=35.5 Pi: temp=38.9  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-110.0 sysload=0.43 cputime=10.585 memavail=7492072 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1539.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9287 bytes_read=22348 bytes_retransmit=9 bytes_invalid=0 send_seq=625 receive_seq=625 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028167 rpi: mcu_awake=0.001 mcu_task_avg=0.000009 mcu_task_stddev=0.000009 bytes_write=1038 bytes_read=5184 bytes_retransmit=0 bytes_invalid=0 send_seq=148 receive_seq=148 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000145 adj=49996598 Octopus_Max: temp=35.6 Pi: temp=39.4  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.43 cputime=10.602 memavail=7489764 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1540.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9293 bytes_read=22659 bytes_retransmit=9 bytes_invalid=0 send_seq=626 receive_seq=626 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028257 rpi: mcu_awake=0.001 mcu_task_avg=0.000009 mcu_task_stddev=0.000009 bytes_write=1044 bytes_read=5200 bytes_retransmit=0 bytes_invalid=0 send_seq=149 receive_seq=149 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000140 adj=49996589 Octopus_Max: temp=35.6 Pi: temp=39.9  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-110.0 sysload=0.43 cputime=10.619 memavail=7484800 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1541.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9299 bytes_read=22936 bytes_retransmit=9 bytes_invalid=0 send_seq=627 receive_seq=627 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028243 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000010 bytes_write=1050 bytes_read=5229 bytes_retransmit=0 bytes_invalid=0 send_seq=150 receive_seq=150 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000138 adj=49996462 Octopus_Max: temp=35.4 Pi: temp=40.4  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.43 cputime=10.637 memavail=7481428 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1542.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9305 bytes_read=23210 bytes_retransmit=9 bytes_invalid=0 send_seq=628 receive_seq=628 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028230 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000010 bytes_write=1056 bytes_read=5245 bytes_retransmit=0 bytes_invalid=0 send_seq=151 receive_seq=151 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000131 adj=49996494 Octopus_Max: temp=35.8 Pi: temp=38.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.48 cputime=10.655 memavail=7489152 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1543.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9317 bytes_read=23537 bytes_retransmit=9 bytes_invalid=0 send_seq=630 receive_seq=630 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028232 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000010 bytes_write=1062 bytes_read=5261 bytes_retransmit=0 bytes_invalid=0 send_seq=152 receive_seq=152 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000130 adj=49996481 Octopus_Max: temp=35.7 Pi: temp=38.9  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.9 barrow: temp=-119.3 sysload=0.48 cputime=10.674 memavail=7486432 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.3 pwm=0.000
Stats 1544.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9323 bytes_read=23834 bytes_retransmit=9 bytes_invalid=0 send_seq=631 receive_seq=631 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028221 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000010 bytes_write=1068 bytes_read=5277 bytes_retransmit=0 bytes_invalid=0 send_seq=153 receive_seq=153 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000128 adj=49996497 Octopus_Max: temp=35.7 Pi: temp=39.4  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.9 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.48 cputime=10.692 memavail=7489764 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1545.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9329 bytes_read=24116 bytes_retransmit=9 bytes_invalid=0 send_seq=632 receive_seq=632 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028210 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000010 bytes_write=1074 bytes_read=5293 bytes_retransmit=0 bytes_invalid=0 send_seq=154 receive_seq=154 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000126 adj=49996516 Octopus_Max: temp=35.7 Pi: temp=38.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.48 cputime=10.709 memavail=7491408 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1546.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9335 bytes_read=24427 bytes_retransmit=9 bytes_invalid=0 send_seq=633 receive_seq=633 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028201 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000010 bytes_write=1080 bytes_read=5322 bytes_retransmit=0 bytes_invalid=0 send_seq=155 receive_seq=155 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000123 adj=49996534 Octopus_Max: temp=35.9 Pi: temp=38.9  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.48 cputime=10.727 memavail=7493976 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1547.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9341 bytes_read=24710 bytes_retransmit=9 bytes_invalid=0 send_seq=634 receive_seq=634 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028198 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000010 bytes_write=1086 bytes_read=5338 bytes_retransmit=0 bytes_invalid=0 send_seq=156 receive_seq=156 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000121 adj=49996533 Octopus_Max: temp=35.6 Pi: temp=39.9  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.52 cputime=10.743 memavail=7488120 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1548.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9347 bytes_read=24992 bytes_retransmit=9 bytes_invalid=0 send_seq=635 receive_seq=635 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028189 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000010 bytes_write=1092 bytes_read=5354 bytes_retransmit=0 bytes_invalid=0 send_seq=157 receive_seq=157 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000123 adj=49996529 Octopus_Max: temp=35.8 Pi: temp=39.4  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-110.0 sysload=0.52 cputime=10.763 memavail=7495536 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1549.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9353 bytes_read=25317 bytes_retransmit=9 bytes_invalid=0 send_seq=636 receive_seq=636 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028181 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000010 bytes_write=1098 bytes_read=5370 bytes_retransmit=0 bytes_invalid=0 send_seq=158 receive_seq=158 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000123 adj=49996576 Octopus_Max: temp=35.7 Pi: temp=38.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.52 cputime=10.780 memavail=7492800 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1550.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9359 bytes_read=25600 bytes_retransmit=9 bytes_invalid=0 send_seq=637 receive_seq=637 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028175 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000010 bytes_write=1104 bytes_read=5386 bytes_retransmit=0 bytes_invalid=0 send_seq=159 receive_seq=159 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000118 adj=49996593 Octopus_Max: temp=35.9 Pi: temp=38.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.52 cputime=10.795 memavail=7481976 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1551.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9365 bytes_read=25882 bytes_retransmit=9 bytes_invalid=0 send_seq=638 receive_seq=638 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028170 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000010 bytes_write=1110 bytes_read=5415 bytes_retransmit=0 bytes_invalid=0 send_seq=160 receive_seq=160 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000117 adj=49996553 Octopus_Max: temp=35.7 Pi: temp=38.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.52 cputime=10.812 memavail=7487508 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1552.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9371 bytes_read=26179 bytes_retransmit=9 bytes_invalid=0 send_seq=639 receive_seq=639 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028168 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000010 bytes_write=1116 bytes_read=5431 bytes_retransmit=0 bytes_invalid=0 send_seq=161 receive_seq=161 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000121 adj=49996562 Octopus_Max: temp=35.8 Pi: temp=38.9  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.56 cputime=10.829 memavail=7484164 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1553.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9377 bytes_read=26460 bytes_retransmit=9 bytes_invalid=0 send_seq=640 receive_seq=640 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028150 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000010 bytes_write=1122 bytes_read=5447 bytes_retransmit=0 bytes_invalid=0 send_seq=162 receive_seq=162 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000127 adj=49996612 Octopus_Max: temp=36.0 Pi: temp=39.4  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.56 cputime=10.846 memavail=7488040 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1554.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9383 bytes_read=26756 bytes_retransmit=9 bytes_invalid=0 send_seq=641 receive_seq=641 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028149 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000010 bytes_write=1128 bytes_read=5463 bytes_retransmit=0 bytes_invalid=0 send_seq=163 receive_seq=163 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000127 adj=49996693 Octopus_Max: temp=35.9 Pi: temp=39.9  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.56 cputime=10.863 memavail=7487176 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1555.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9389 bytes_read=27067 bytes_retransmit=9 bytes_invalid=0 send_seq=642 receive_seq=642 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028151 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000010 bytes_write=1134 bytes_read=5479 bytes_retransmit=0 bytes_invalid=0 send_seq=164 receive_seq=164 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000125 adj=49996673 Octopus_Max: temp=35.8 Pi: temp=39.9  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.56 cputime=10.881 memavail=7473956 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1556.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9395 bytes_read=27350 bytes_retransmit=9 bytes_invalid=0 send_seq=643 receive_seq=643 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028145 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000011 bytes_write=1140 bytes_read=5508 bytes_retransmit=0 bytes_invalid=0 send_seq=165 receive_seq=165 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000123 adj=49996637 Octopus_Max: temp=35.9 Pi: temp=40.4  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-110.0 sysload=0.56 cputime=10.897 memavail=7493072 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1557.2: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9401 bytes_read=27632 bytes_retransmit=9 bytes_invalid=0 send_seq=644 receive_seq=644 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028132 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000011 bytes_write=1146 bytes_read=5524 bytes_retransmit=0 bytes_invalid=0 send_seq=166 receive_seq=166 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000120 adj=49996621 Octopus_Max: temp=35.8 Pi: temp=39.9  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.59 cputime=10.913 memavail=7492976 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Starting Klippy...
Starting Klippy...
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/printer_data/config/printer.cfg', '-l', '/home/pi/printer_data/logs/klippy.log', '-I', '/home/pi/printer_data/comms/klippy.serial', '-a', '/home/pi/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-169-g28faf814-dirty'
Untracked files: klippy/extras/autotune_tmc.py, klippy/extras/beacon.py, klippy/extras/gcode_shell_command.py, klippy/extras/linear_movement_vibrations.py, klippy/extras/motor_constants.py, klippy/extras/ratos_homing.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Mar 12 2021, 04:06:34) \n[GCC 10.2.1 20210110]'
Start printer at Sat Apr 20 22:38:57 2024 (1713649137.5 1603.0)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999
=======================
Starting Klippy...
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/printer_data/config/printer.cfg', '-l', '/home/pi/printer_data/logs/klippy.log', '-I', '/home/pi/printer_data/comms/klippy.serial', '-a', '/home/pi/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-169-g28faf814-dirty'
Untracked files: klippy/extras/autotune_tmc.py, klippy/extras/beacon.py, klippy/extras/gcode_shell_command.py, klippy/extras/linear_movement_vibrations.py, klippy/extras/motor_constants.py, klippy/extras/ratos_homing.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Mar 12 2021, 04:06:34) \n[GCC 10.2.1 20210110]'
Start printer at Sat Apr 20 22:38:58 2024 (1713649138.2 1603.7)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
webhooks client 4123116160: New connection
webhooks client 4123116160: Client info {'program': 'Moonraker', 'version': 'v0.8.0-325-g99b97af'}
webhooks client 4123116160: Disconnected
Loaded MCU 'mcu' 112 commands (v0.12.0-169-g28faf814 / gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.34-4+rpi1+14) 2.34)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1_PB6_PB7=PB6,PB7 BUS_PINS_i2c1_PB8_PB9=PB8,PB9 BUS_PINS_i2c2_PB10_PB11=PB10,PB11 BUS_PINS_i2c3_PA8_PC9=PA8,PC9 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi2a=PC2,PC3,PB10 BUS_PINS_spi3a=PC11,PC12,PC10 BUS_PINS_spi4=PE13,PE14,PE12 BUS_PINS_spi5=PF8,PF9,PF7 BUS_PINS_spi5a=PH7,PF11,PH6 BUS_PINS_spi6=PG12,PG14,PG13 CLOCK_FREQ=400000000 MCU=stm32h723xx PWM_MAX=255 RESERVE_PINS_USB=PA11,PA12 RESERVE_PINS_crystal=PH0,PH1 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
mcu 'rpi': Starting connect
mcu 'rpi': got {'count': 138, 'sum': 141115, 'sumsq': 738266, '#name': 'stats', '#sent_time': 1605.986063357, '#receive_time': 1605.99833569}
Loaded MCU 'rpi' 112 commands (v0.12.0-142-gb029d046 / gcc: (Raspbian 10.2.1-6+rpi1) 10.2.1 20210110 binutils: (GNU Binutils for Raspbian) 2.35.2)
MCU 'rpi' config: ADC_MAX=4095 CLOCK_FREQ=50000000 MCU=linux PCA9685_MAX=4096 PWM_MAX=32768 STATS_SUMSQ_BASE=256
mcu_temperature 'mcu' nominal base=-273.952569 slope=1618.577075
Sending MCU 'mcu' printer configuration...
Configured MCU 'mcu' (1024 moves)
Configured MCU 'rpi' (1024 moves)
Starting heater checks for heater_bed
bed_mesh: generated points
Index |  Tool Adjusted  |   Probe
  0   | (40.0, 23.0)    | (10.0, 8.4)
  1   | (57.8, 23.0)    | (27.8, 8.4)
  2   | (75.5, 23.0)    | (45.5, 8.4)
  3   | (93.3, 23.0)    | (63.3, 8.4)
  4   | (111.1, 23.0)   | (81.1, 8.4)
  5   | (128.8, 23.0)   | (98.8, 8.4)
  6   | (146.6, 23.0)   | (116.6, 8.4)
  7   | (164.4, 23.0)   | (134.4, 8.4)
  8   | (182.2, 23.0)   | (152.2, 8.4)
  9   | (199.9, 23.0)   | (169.9, 8.4)
  10  | (199.9, 42.7)   | (169.9, 28.1)
  11  | (182.2, 42.7)   | (152.2, 28.1)
  12  | (164.4, 42.7)   | (134.4, 28.1)
  13  | (146.6, 42.7)   | (116.6, 28.1)
  14  | (128.9, 42.7)   | (98.9, 28.1)
  15  | (111.1, 42.7)   | (81.1, 28.1)
  16  | (93.3, 42.7)    | (63.3, 28.1)
  17  | (75.5, 42.7)    | (45.5, 28.1)
  18  | (57.8, 42.7)    | (27.8, 28.1)
  19  | (40.0, 42.7)    | (10.0, 28.1)
  20  | (40.0, 62.3)    | (10.0, 47.8)
  21  | (57.8, 62.3)    | (27.8, 47.8)
  22  | (75.5, 62.3)    | (45.5, 47.8)
  23  | (93.3, 62.3)    | (63.3, 47.8)
  24  | (111.1, 62.3)   | (81.1, 47.8)
  25  | (128.8, 62.3)   | (98.8, 47.8)
  26  | (146.6, 62.3)   | (116.6, 47.8)
  27  | (164.4, 62.3)   | (134.4, 47.8)
  28  | (182.2, 62.3)   | (152.2, 47.8)
  29  | (199.9, 62.3)   | (169.9, 47.8)
  30  | (199.9, 82.0)   | (169.9, 67.4)
  31  | (182.2, 82.0)   | (152.2, 67.4)
  32  | (164.4, 82.0)   | (134.4, 67.4)
  33  | (146.6, 82.0)   | (116.6, 67.4)
  34  | (128.9, 82.0)   | (98.9, 67.4)
  35  | (111.1, 82.0)   | (81.1, 67.4)
  36  | (93.3, 82.0)    | (63.3, 67.4)
  37  | (75.5, 82.0)    | (45.5, 67.4)
  38  | (57.8, 82.0)    | (27.8, 67.4)
  39  | (40.0, 82.0)    | (10.0, 67.4)
  40  | (40.0, 101.6)   | (10.0, 87.1)
  41  | (57.8, 101.6)   | (27.8, 87.1)
  42  | (75.5, 101.6)   | (45.5, 87.1)
  43  | (93.3, 101.6)   | (63.3, 87.1)
  44  | (111.1, 101.6)  | (81.1, 87.1)
  45  | (128.8, 101.6)  | (98.8, 87.1)
  46  | (146.6, 101.6)  | (116.6, 87.1)
  47  | (164.4, 101.6)  | (134.4, 87.1)
  48  | (182.2, 101.6)  | (152.2, 87.1)
  49  | (199.9, 101.6)  | (169.9, 87.1)
  50  | (199.9, 121.3)  | (169.9, 106.7)
  51  | (182.2, 121.3)  | (152.2, 106.7)
  52  | (164.4, 121.3)  | (134.4, 106.7)
  53  | (146.6, 121.3)  | (116.6, 106.7)
  54  | (128.9, 121.3)  | (98.9, 106.7)
  55  | (111.1, 121.3)  | (81.1, 106.7)
  56  | (93.3, 121.3)   | (63.3, 106.7)
  57  | (75.5, 121.3)   | (45.5, 106.7)
  58  | (57.8, 121.3)   | (27.8, 106.7)
  59  | (40.0, 121.3)   | (10.0, 106.7)
  60  | (40.0, 141.0)   | (10.0, 126.4)
  61  | (57.8, 141.0)   | (27.8, 126.4)
  62  | (75.5, 141.0)   | (45.5, 126.4)
  63  | (93.3, 141.0)   | (63.3, 126.4)
  64  | (111.1, 141.0)  | (81.1, 126.4)
  65  | (128.8, 141.0)  | (98.8, 126.4)
  66  | (146.6, 141.0)  | (116.6, 126.4)
  67  | (164.4, 141.0)  | (134.4, 126.4)
  68  | (182.2, 141.0)  | (152.2, 126.4)
  69  | (199.9, 141.0)  | (169.9, 126.4)
  70  | (199.9, 160.6)  | (169.9, 146.1)
  71  | (182.2, 160.6)  | (152.2, 146.1)
  72  | (164.4, 160.6)  | (134.4, 146.1)
  73  | (146.6, 160.6)  | (116.6, 146.1)
  74  | (128.9, 160.6)  | (98.9, 146.1)
  75  | (111.1, 160.6)  | (81.1, 146.1)
  76  | (93.3, 160.6)   | (63.3, 146.1)
  77  | (75.5, 160.6)   | (45.5, 146.1)
  78  | (57.8, 160.6)   | (27.8, 146.1)
  79  | (40.0, 160.6)   | (10.0, 146.1)
  80  | (40.0, 180.3)   | (10.0, 165.7)
  81  | (57.8, 180.3)   | (27.8, 165.7)
  82  | (75.5, 180.3)   | (45.5, 165.7)
  83  | (93.3, 180.3)   | (63.3, 165.7)
  84  | (111.1, 180.3)  | (81.1, 165.7)
  85  | (128.8, 180.3)  | (98.8, 165.7)
  86  | (146.6, 180.3)  | (116.6, 165.7)
  87  | (164.4, 180.3)  | (134.4, 165.7)
  88  | (182.2, 180.3)  | (152.2, 165.7)
  89  | (199.9, 180.3)  | (169.9, 165.7)
  90  | (199.9, 199.9)  | (169.9, 185.4)
  91  | (182.2, 199.9)  | (152.2, 185.4)
  92  | (164.4, 199.9)  | (134.4, 185.4)
  93  | (146.6, 199.9)  | (116.6, 185.4)
  94  | (128.9, 199.9)  | (98.9, 185.4)
  95  | (111.1, 199.9)  | (81.1, 185.4)
  96  | (93.3, 199.9)   | (63.3, 185.4)
  97  | (75.5, 199.9)   | (45.5, 185.4)
  98  | (57.8, 199.9)   | (27.8, 185.4)
  99  | (40.0, 199.9)   | (10.0, 185.4)
b'Got EOF when reading from device'
webhooks client 4124114728: New connection
webhooks client 4124114728: Client info {'program': 'Moonraker', 'version': 'v0.8.0-325-g99b97af'}
Unable to issue reset command on MCU 'mcu'
Attempting MCU 'rpi' config_reset command
b'Got EOF when reading from device'
webhooks client 4124114728: Disconnected
Restarting printer
Start printer at Sat Apr 20 22:40:36 2024 (1713649236.3 1701.8)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
webhooks client 4123703184: New connection
webhooks client 4123703184: Client info {'program': 'Moonraker', 'version': 'v0.8.0-325-g99b97af'}
Loaded MCU 'mcu' 112 commands (v0.12.0-169-g28faf814 / gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.34-4+rpi1+14) 2.34)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1_PB6_PB7=PB6,PB7 BUS_PINS_i2c1_PB8_PB9=PB8,PB9 BUS_PINS_i2c2_PB10_PB11=PB10,PB11 BUS_PINS_i2c3_PA8_PC9=PA8,PC9 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi2a=PC2,PC3,PB10 BUS_PINS_spi3a=PC11,PC12,PC10 BUS_PINS_spi4=PE13,PE14,PE12 BUS_PINS_spi5=PF8,PF9,PF7 BUS_PINS_spi5a=PH7,PF11,PH6 BUS_PINS_spi6=PG12,PG14,PG13 CLOCK_FREQ=400000000 MCU=stm32h723xx PWM_MAX=255 RESERVE_PINS_USB=PA11,PA12 RESERVE_PINS_crystal=PH0,PH1 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
mcu 'rpi': Starting connect
Loaded MCU 'rpi' 118 commands (v0.12.0-169-g28faf814 / gcc: (Raspbian 10.2.1-6+rpi1) 10.2.1 20210110 binutils: (GNU Binutils for Raspbian) 2.35.2)
MCU 'rpi' config: ADC_MAX=4095 CLOCK_FREQ=50000000 MCU=linux PCA9685_MAX=4096 PWM_MAX=32768 STATS_SUMSQ_BASE=256
mcu_temperature 'mcu' nominal base=-273.952569 slope=1618.577075
Sending MCU 'mcu' printer configuration...
Configured MCU 'mcu' (1024 moves)
Sending MCU 'rpi' printer configuration...
Configured MCU 'rpi' (1024 moves)
Starting heater checks for heater_bed
bed_mesh: generated points
Index |  Tool Adjusted  |   Probe
  0   | (40.0, 23.0)    | (10.0, 8.4)
  1   | (57.8, 23.0)    | (27.8, 8.4)
  2   | (75.5, 23.0)    | (45.5, 8.4)
  3   | (93.3, 23.0)    | (63.3, 8.4)
  4   | (111.1, 23.0)   | (81.1, 8.4)
  5   | (128.8, 23.0)   | (98.8, 8.4)
  6   | (146.6, 23.0)   | (116.6, 8.4)
  7   | (164.4, 23.0)   | (134.4, 8.4)
  8   | (182.2, 23.0)   | (152.2, 8.4)
  9   | (199.9, 23.0)   | (169.9, 8.4)
  10  | (199.9, 42.7)   | (169.9, 28.1)
  11  | (182.2, 42.7)   | (152.2, 28.1)
  12  | (164.4, 42.7)   | (134.4, 28.1)
  13  | (146.6, 42.7)   | (116.6, 28.1)
  14  | (128.9, 42.7)   | (98.9, 28.1)
  15  | (111.1, 42.7)   | (81.1, 28.1)
  16  | (93.3, 42.7)    | (63.3, 28.1)
  17  | (75.5, 42.7)    | (45.5, 28.1)
  18  | (57.8, 42.7)    | (27.8, 28.1)
  19  | (40.0, 42.7)    | (10.0, 28.1)
  20  | (40.0, 62.3)    | (10.0, 47.8)
  21  | (57.8, 62.3)    | (27.8, 47.8)
  22  | (75.5, 62.3)    | (45.5, 47.8)
  23  | (93.3, 62.3)    | (63.3, 47.8)
  24  | (111.1, 62.3)   | (81.1, 47.8)
  25  | (128.8, 62.3)   | (98.8, 47.8)
  26  | (146.6, 62.3)   | (116.6, 47.8)
  27  | (164.4, 62.3)   | (134.4, 47.8)
  28  | (182.2, 62.3)   | (152.2, 47.8)
  29  | (199.9, 62.3)   | (169.9, 47.8)
  30  | (199.9, 82.0)   | (169.9, 67.4)
  31  | (182.2, 82.0)   | (152.2, 67.4)
  32  | (164.4, 82.0)   | (134.4, 67.4)
  33  | (146.6, 82.0)   | (116.6, 67.4)
  34  | (128.9, 82.0)   | (98.9, 67.4)
  35  | (111.1, 82.0)   | (81.1, 67.4)
  36  | (93.3, 82.0)    | (63.3, 67.4)
  37  | (75.5, 82.0)    | (45.5, 67.4)
  38  | (57.8, 82.0)    | (27.8, 67.4)
  39  | (40.0, 82.0)    | (10.0, 67.4)
  40  | (40.0, 101.6)   | (10.0, 87.1)
  41  | (57.8, 101.6)   | (27.8, 87.1)
  42  | (75.5, 101.6)   | (45.5, 87.1)
  43  | (93.3, 101.6)   | (63.3, 87.1)
  44  | (111.1, 101.6)  | (81.1, 87.1)
  45  | (128.8, 101.6)  | (98.8, 87.1)
  46  | (146.6, 101.6)  | (116.6, 87.1)
  47  | (164.4, 101.6)  | (134.4, 87.1)
  48  | (182.2, 101.6)  | (152.2, 87.1)
  49  | (199.9, 101.6)  | (169.9, 87.1)
  50  | (199.9, 121.3)  | (169.9, 106.7)
  51  | (182.2, 121.3)  | (152.2, 106.7)
  52  | (164.4, 121.3)  | (134.4, 106.7)
  53  | (146.6, 121.3)  | (116.6, 106.7)
  54  | (128.9, 121.3)  | (98.9, 106.7)
  55  | (111.1, 121.3)  | (81.1, 106.7)
  56  | (93.3, 121.3)   | (63.3, 106.7)
  57  | (75.5, 121.3)   | (45.5, 106.7)
  58  | (57.8, 121.3)   | (27.8, 106.7)
  59  | (40.0, 121.3)   | (10.0, 106.7)
  60  | (40.0, 141.0)   | (10.0, 126.4)
  61  | (57.8, 141.0)   | (27.8, 126.4)
  62  | (75.5, 141.0)   | (45.5, 126.4)
  63  | (93.3, 141.0)   | (63.3, 126.4)
  64  | (111.1, 141.0)  | (81.1, 126.4)
  65  | (128.8, 141.0)  | (98.8, 126.4)
  66  | (146.6, 141.0)  | (116.6, 126.4)
  67  | (164.4, 141.0)  | (134.4, 126.4)
  68  | (182.2, 141.0)  | (152.2, 126.4)
  69  | (199.9, 141.0)  | (169.9, 126.4)
  70  | (199.9, 160.6)  | (169.9, 146.1)
  71  | (182.2, 160.6)  | (152.2, 146.1)
  72  | (164.4, 160.6)  | (134.4, 146.1)
  73  | (146.6, 160.6)  | (116.6, 146.1)
  74  | (128.9, 160.6)  | (98.9, 146.1)
  75  | (111.1, 160.6)  | (81.1, 146.1)
  76  | (93.3, 160.6)   | (63.3, 146.1)
  77  | (75.5, 160.6)   | (45.5, 146.1)
  78  | (57.8, 160.6)   | (27.8, 146.1)
  79  | (40.0, 160.6)   | (10.0, 146.1)
  80  | (40.0, 180.3)   | (10.0, 165.7)
  81  | (57.8, 180.3)   | (27.8, 165.7)
  82  | (75.5, 180.3)   | (45.5, 165.7)
  83  | (93.3, 180.3)   | (63.3, 165.7)
  84  | (111.1, 180.3)  | (81.1, 165.7)
  85  | (128.8, 180.3)  | (98.8, 165.7)
  86  | (146.6, 180.3)  | (116.6, 165.7)
  87  | (164.4, 180.3)  | (134.4, 165.7)
  88  | (182.2, 180.3)  | (152.2, 165.7)
  89  | (199.9, 180.3)  | (169.9, 165.7)
  90  | (199.9, 199.9)  | (169.9, 185.4)
  91  | (182.2, 199.9)  | (152.2, 185.4)
  92  | (164.4, 199.9)  | (134.4, 185.4)
  93  | (146.6, 199.9)  | (116.6, 185.4)
  94  | (128.9, 199.9)  | (98.9, 185.4)
  95  | (111.1, 199.9)  | (81.1, 185.4)
  96  | (93.3, 199.9)   | (63.3, 185.4)
  97  | (75.5, 199.9)   | (45.5, 185.4)
  98  | (57.8, 199.9)   | (27.8, 185.4)
  99  | (40.0, 199.9)   | (10.0, 185.4)
Starting heater checks for extruder
autotune_tmc set stepper_x pwm_freq=2
autotune_tmc stepper_x ncycles=219 pfdcycles=73
autotune_tmc set stepper_x tpfd=1
autotune_tmc set stepper_x tbl=1
autotune_tmc set stepper_x toff=1
autotune_tmc seting hysteresis based on 48.0 V
dcoilblank = 0.160000, dcoilsd = 0.015156
hysteresis = 42, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_x hstrt=7
autotune_tmc set stepper_x hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_x pwm_autoscale=True
autotune_tmc set stepper_x pwm_autograd=True
autotune_tmc set stepper_x pwm_grad=4
autotune_tmc set stepper_x pwm_ofs=10
autotune_tmc set stepper_x pwm_reg=15
autotune_tmc set stepper_x pwm_lim=4
autotune_tmc set stepper_x tpwmthrs=1048575
autotune_tmc set stepper_x en_pwm_mode=False
autotune_tmc set stepper_x tcoolthrs=391(24.0)
autotune_tmc set stepper_x sgt=1
autotune_tmc set stepper_x small_hysteresis=False
autotune_tmc set stepper_x semin=2
autotune_tmc set stepper_x semax=2
autotune_tmc set stepper_x seup=3
autotune_tmc set stepper_x sedn=2
autotune_tmc set stepper_x seimin=0
autotune_tmc set stepper_x sfilt=0
autotune_tmc set stepper_x iholddelay=12
autotune_tmc set stepper_x vhighfs=False
autotune_tmc set stepper_x vhighchm=False
autotune_tmc set stepper_x multistep_filt=True
autotune_tmc set stepper_x1 pwm_freq=2
autotune_tmc stepper_x1 ncycles=219 pfdcycles=73
autotune_tmc set stepper_x1 tpfd=1
autotune_tmc set stepper_x1 tbl=1
autotune_tmc set stepper_x1 toff=1
autotune_tmc seting hysteresis based on 48.0 V
dcoilblank = 0.160000, dcoilsd = 0.015156
hysteresis = 42, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_x1 hstrt=7
autotune_tmc set stepper_x1 hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_x1 pwm_autoscale=True
autotune_tmc set stepper_x1 pwm_autograd=True
autotune_tmc set stepper_x1 pwm_grad=4
autotune_tmc set stepper_x1 pwm_ofs=10
autotune_tmc set stepper_x1 pwm_reg=15
autotune_tmc set stepper_x1 pwm_lim=4
autotune_tmc set stepper_x1 tpwmthrs=1048575
autotune_tmc set stepper_x1 en_pwm_mode=False
autotune_tmc set stepper_x1 tcoolthrs=391(24.0)
autotune_tmc set stepper_x1 sgt=1
autotune_tmc set stepper_x1 small_hysteresis=False
autotune_tmc set stepper_x1 semin=2
autotune_tmc set stepper_x1 semax=2
autotune_tmc set stepper_x1 seup=3
autotune_tmc set stepper_x1 sedn=2
autotune_tmc set stepper_x1 seimin=0
autotune_tmc set stepper_x1 sfilt=0
autotune_tmc set stepper_x1 iholddelay=12
autotune_tmc set stepper_x1 vhighfs=False
autotune_tmc set stepper_x1 vhighchm=False
autotune_tmc set stepper_x1 multistep_filt=True
autotune_tmc set stepper_y pwm_freq=2
autotune_tmc stepper_y ncycles=219 pfdcycles=73
autotune_tmc set stepper_y tpfd=1
autotune_tmc set stepper_y tbl=1
autotune_tmc set stepper_y toff=1
autotune_tmc seting hysteresis based on 48.0 V
dcoilblank = 0.160000, dcoilsd = 0.015156
hysteresis = 42, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_y hstrt=7
autotune_tmc set stepper_y hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_y pwm_autoscale=True
autotune_tmc set stepper_y pwm_autograd=True
autotune_tmc set stepper_y pwm_grad=4
autotune_tmc set stepper_y pwm_ofs=10
autotune_tmc set stepper_y pwm_reg=15
autotune_tmc set stepper_y pwm_lim=4
autotune_tmc set stepper_y tpwmthrs=1048575
autotune_tmc set stepper_y en_pwm_mode=False
autotune_tmc set stepper_y tcoolthrs=391(24.0)
autotune_tmc set stepper_y sgt=1
autotune_tmc set stepper_y small_hysteresis=False
autotune_tmc set stepper_y semin=2
autotune_tmc set stepper_y semax=2
autotune_tmc set stepper_y seup=3
autotune_tmc set stepper_y sedn=2
autotune_tmc set stepper_y seimin=0
autotune_tmc set stepper_y sfilt=0
autotune_tmc set stepper_y iholddelay=12
autotune_tmc set stepper_y vhighfs=False
autotune_tmc set stepper_y vhighchm=False
autotune_tmc set stepper_y multistep_filt=True
autotune_tmc set stepper_y1 pwm_freq=2
autotune_tmc stepper_y1 ncycles=219 pfdcycles=73
autotune_tmc set stepper_y1 tpfd=1
autotune_tmc set stepper_y1 tbl=1
autotune_tmc set stepper_y1 toff=1
autotune_tmc seting hysteresis based on 48.0 V
dcoilblank = 0.160000, dcoilsd = 0.015156
hysteresis = 42, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_y1 hstrt=7
autotune_tmc set stepper_y1 hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_y1 pwm_autoscale=True
autotune_tmc set stepper_y1 pwm_autograd=True
autotune_tmc set stepper_y1 pwm_grad=4
autotune_tmc set stepper_y1 pwm_ofs=10
autotune_tmc set stepper_y1 pwm_reg=15
autotune_tmc set stepper_y1 pwm_lim=4
autotune_tmc set stepper_y1 tpwmthrs=1048575
autotune_tmc set stepper_y1 en_pwm_mode=False
autotune_tmc set stepper_y1 tcoolthrs=391(24.0)
autotune_tmc set stepper_y1 sgt=1
autotune_tmc set stepper_y1 small_hysteresis=False
autotune_tmc set stepper_y1 semin=2
autotune_tmc set stepper_y1 semax=2
autotune_tmc set stepper_y1 seup=3
autotune_tmc set stepper_y1 sedn=2
autotune_tmc set stepper_y1 seimin=0
autotune_tmc set stepper_y1 sfilt=0
autotune_tmc set stepper_y1 iholddelay=12
autotune_tmc set stepper_y1 vhighfs=False
autotune_tmc set stepper_y1 vhighchm=False
autotune_tmc set stepper_y1 multistep_filt=True
autotune_tmc set stepper_z pwm_freq=2
autotune_tmc stepper_z ncycles=219 pfdcycles=73
autotune_tmc set stepper_z tbl=1
autotune_tmc set stepper_z toff=1
autotune_tmc seting hysteresis based on 24.0 V
dcoilblank = 0.080000, dcoilsd = 0.013495
hysteresis = 22, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_z hstrt=7
autotune_tmc set stepper_z hend=9
autotune_tmc set stepper_z sgthrs=40
autotune_tmc using max PWM speed 43.108253
autotune_tmc set stepper_z pwm_autoscale=True
autotune_tmc set stepper_z pwm_autograd=True
autotune_tmc set stepper_z pwm_grad=7
autotune_tmc set stepper_z pwm_ofs=18
autotune_tmc set stepper_z pwm_reg=15
autotune_tmc set stepper_z pwm_lim=4
autotune_tmc set stepper_z tpwmthrs=1048575
autotune_tmc set stepper_z en_spreadcycle=True
autotune_tmc set stepper_z tcoolthrs=391(2.4)
autotune_tmc set stepper_z semin=2
autotune_tmc set stepper_z semax=2
autotune_tmc set stepper_z seup=3
autotune_tmc set stepper_z sedn=2
autotune_tmc set stepper_z seimin=0
autotune_tmc set stepper_z iholddelay=12
autotune_tmc set stepper_z multistep_filt=True
autotune_tmc set stepper_z1 pwm_freq=2
autotune_tmc stepper_z1 ncycles=219 pfdcycles=73
autotune_tmc set stepper_z1 tbl=1
autotune_tmc set stepper_z1 toff=1
autotune_tmc seting hysteresis based on 24.0 V
dcoilblank = 0.080000, dcoilsd = 0.013495
hysteresis = 22, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_z1 hstrt=7
autotune_tmc set stepper_z1 hend=9
autotune_tmc set stepper_z1 sgthrs=40
autotune_tmc using max PWM speed 43.108253
autotune_tmc set stepper_z1 pwm_autoscale=True
autotune_tmc set stepper_z1 pwm_autograd=True
autotune_tmc set stepper_z1 pwm_grad=7
autotune_tmc set stepper_z1 pwm_ofs=18
autotune_tmc set stepper_z1 pwm_reg=15
autotune_tmc set stepper_z1 pwm_lim=4
autotune_tmc set stepper_z1 tpwmthrs=1048575
autotune_tmc set stepper_z1 en_spreadcycle=True
autotune_tmc set stepper_z1 tcoolthrs=391(2.4)
autotune_tmc set stepper_z1 semin=2
autotune_tmc set stepper_z1 semax=2
autotune_tmc set stepper_z1 seup=3
autotune_tmc set stepper_z1 sedn=2
autotune_tmc set stepper_z1 seimin=0
autotune_tmc set stepper_z1 iholddelay=12
autotune_tmc set stepper_z1 multistep_filt=True
autotune_tmc set stepper_z2 pwm_freq=2
autotune_tmc stepper_z2 ncycles=219 pfdcycles=73
autotune_tmc set stepper_z2 tbl=1
autotune_tmc set stepper_z2 toff=1
autotune_tmc seting hysteresis based on 24.0 V
dcoilblank = 0.080000, dcoilsd = 0.013495
hysteresis = 22, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_z2 hstrt=7
autotune_tmc set stepper_z2 hend=9
autotune_tmc set stepper_z2 sgthrs=40
autotune_tmc using max PWM speed 43.108253
autotune_tmc set stepper_z2 pwm_autoscale=True
autotune_tmc set stepper_z2 pwm_autograd=True
autotune_tmc set stepper_z2 pwm_grad=7
autotune_tmc set stepper_z2 pwm_ofs=18
autotune_tmc set stepper_z2 pwm_reg=15
autotune_tmc set stepper_z2 pwm_lim=4
autotune_tmc set stepper_z2 tpwmthrs=1048575
autotune_tmc set stepper_z2 en_spreadcycle=True
autotune_tmc set stepper_z2 tcoolthrs=391(2.4)
autotune_tmc set stepper_z2 semin=2
autotune_tmc set stepper_z2 semax=2
autotune_tmc set stepper_z2 seup=3
autotune_tmc set stepper_z2 sedn=2
autotune_tmc set stepper_z2 seimin=0
autotune_tmc set stepper_z2 iholddelay=12
autotune_tmc set stepper_z2 multistep_filt=True
Stats 1705.8: gcodein=0  mcu: mcu_awake=0.010 mcu_task_avg=0.000013 mcu_task_stddev=0.000090 bytes_write=9365 bytes_read=12347 bytes_retransmit=9 bytes_invalid=0 send_seq=646 receive_seq=646 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400027854 rpi: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=831 bytes_read=4595 bytes_retransmit=0 bytes_invalid=0 send_seq=113 receive_seq=113 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49997448 adj=49981425 Octopus_Max: temp=36.5 Pi: temp=38.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.40 cputime=3.952 memavail=7494384 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
webhooks: registering remote method 'shutdown_machine' for connection id: 4123703184
webhooks: registering remote method 'reboot_machine' for connection id: 4123703184
webhooks: registering remote method 'pause_job_queue' for connection id: 4123703184
webhooks: registering remote method 'start_job_queue' for connection id: 4123703184
webhooks: registering remote method 'set_device_power' for connection id: 4123703184
Stats 1706.8: gcodein=0  mcu: mcu_awake=0.010 mcu_task_avg=0.000013 mcu_task_stddev=0.000090 bytes_write=9371 bytes_read=12659 bytes_retransmit=9 bytes_invalid=0 send_seq=647 receive_seq=647 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028291 rpi: mcu_awake=0.003 mcu_task_avg=0.000019 mcu_task_stddev=0.000010 bytes_write=837 bytes_read=4625 bytes_retransmit=0 bytes_invalid=0 send_seq=114 receive_seq=114 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999063 adj=50001183 Octopus_Max: temp=36.6 Pi: temp=37.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.37 cputime=3.995 memavail=7493380 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1707.8: gcodein=0  mcu: mcu_awake=0.010 mcu_task_avg=0.000013 mcu_task_stddev=0.000090 bytes_write=9377 bytes_read=12941 bytes_retransmit=9 bytes_invalid=0 send_seq=648 receive_seq=648 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400030302 rpi: mcu_awake=0.003 mcu_task_avg=0.000019 mcu_task_stddev=0.000010 bytes_write=843 bytes_read=4641 bytes_retransmit=0 bytes_invalid=0 send_seq=115 receive_seq=115 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999576 adj=50002160 Octopus_Max: temp=36.6 Pi: temp=36.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.37 cputime=4.020 memavail=7493652 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1708.8: gcodein=0  mcu: mcu_awake=0.010 mcu_task_avg=0.000013 mcu_task_stddev=0.000090 bytes_write=9383 bytes_read=13223 bytes_retransmit=9 bytes_invalid=0 send_seq=649 receive_seq=649 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400030794 rpi: mcu_awake=0.003 mcu_task_avg=0.000019 mcu_task_stddev=0.000010 bytes_write=849 bytes_read=4657 bytes_retransmit=0 bytes_invalid=0 send_seq=116 receive_seq=116 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000166 adj=50001007 Octopus_Max: temp=36.6 Pi: temp=37.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.8 barrow: temp=-110.0 sysload=0.37 cputime=4.048 memavail=7493652 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1709.8: gcodein=0  mcu: mcu_awake=0.010 mcu_task_avg=0.000013 mcu_task_stddev=0.000090 bytes_write=9389 bytes_read=13535 bytes_retransmit=9 bytes_invalid=0 send_seq=650 receive_seq=650 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400030231 rpi: mcu_awake=0.003 mcu_task_avg=0.000019 mcu_task_stddev=0.000010 bytes_write=855 bytes_read=4673 bytes_retransmit=0 bytes_invalid=0 send_seq=117 receive_seq=117 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000378 adj=50000892 Octopus_Max: temp=36.9 Pi: temp=36.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.37 cputime=4.077 memavail=7493652 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1710.8: gcodein=0  mcu: mcu_awake=0.005 mcu_task_avg=0.000004 mcu_task_stddev=0.000005 bytes_write=9395 bytes_read=13827 bytes_retransmit=9 bytes_invalid=0 send_seq=651 receive_seq=651 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029948 rpi: mcu_awake=0.003 mcu_task_avg=0.000019 mcu_task_stddev=0.000010 bytes_write=861 bytes_read=4689 bytes_retransmit=0 bytes_invalid=0 send_seq=118 receive_seq=118 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000653 adj=50000464 Octopus_Max: temp=36.7 Pi: temp=36.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.9 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.37 cputime=4.106 memavail=7493652 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1711.8: gcodein=0  mcu: mcu_awake=0.005 mcu_task_avg=0.000004 mcu_task_stddev=0.000005 bytes_write=9401 bytes_read=14115 bytes_retransmit=9 bytes_invalid=0 send_seq=652 receive_seq=652 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029665 rpi: mcu_awake=0.001 mcu_task_avg=0.000018 mcu_task_stddev=0.000021 bytes_write=867 bytes_read=4718 bytes_retransmit=0 bytes_invalid=0 send_seq=119 receive_seq=119 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000753 adj=50000350 Octopus_Max: temp=36.7 Pi: temp=36.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.34 cputime=4.134 memavail=7493652 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1712.8: gcodein=0  mcu: mcu_awake=0.005 mcu_task_avg=0.000004 mcu_task_stddev=0.000005 bytes_write=9407 bytes_read=14412 bytes_retransmit=9 bytes_invalid=0 send_seq=653 receive_seq=653 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029184 rpi: mcu_awake=0.001 mcu_task_avg=0.000018 mcu_task_stddev=0.000021 bytes_write=873 bytes_read=4734 bytes_retransmit=0 bytes_invalid=0 send_seq=120 receive_seq=120 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000733 adj=49999894 Octopus_Max: temp=36.6 Pi: temp=37.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.34 cputime=4.157 memavail=7487848 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1713.8: gcodein=0  mcu: mcu_awake=0.005 mcu_task_avg=0.000004 mcu_task_stddev=0.000005 bytes_write=9413 bytes_read=14694 bytes_retransmit=9 bytes_invalid=0 send_seq=654 receive_seq=654 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028877 rpi: mcu_awake=0.001 mcu_task_avg=0.000018 mcu_task_stddev=0.000021 bytes_write=879 bytes_read=4750 bytes_retransmit=0 bytes_invalid=0 send_seq=121 receive_seq=121 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000468 adj=49999316 Octopus_Max: temp=36.8 Pi: temp=36.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.34 cputime=4.170 memavail=7498084 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1714.8: gcodein=0  mcu: mcu_awake=0.005 mcu_task_avg=0.000004 mcu_task_stddev=0.000005 bytes_write=9419 bytes_read=14991 bytes_retransmit=9 bytes_invalid=0 send_seq=655 receive_seq=655 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028552 rpi: mcu_awake=0.001 mcu_task_avg=0.000018 mcu_task_stddev=0.000021 bytes_write=885 bytes_read=4766 bytes_retransmit=0 bytes_invalid=0 send_seq=122 receive_seq=122 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000307 adj=49997984 Octopus_Max: temp=36.7 Pi: temp=37.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.9 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.34 cputime=4.182 memavail=7498188 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1715.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9425 bytes_read=15302 bytes_retransmit=9 bytes_invalid=0 send_seq=656 receive_seq=656 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028330 rpi: mcu_awake=0.001 mcu_task_avg=0.000018 mcu_task_stddev=0.000021 bytes_write=897 bytes_read=4798 bytes_retransmit=0 bytes_invalid=0 send_seq=124 receive_seq=124 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000143 adj=49997267 Octopus_Max: temp=36.8 Pi: temp=37.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.34 cputime=4.194 memavail=7498188 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1716.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9431 bytes_read=15584 bytes_retransmit=9 bytes_invalid=0 send_seq=657 receive_seq=657 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028802 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000014 bytes_write=903 bytes_read=4827 bytes_retransmit=0 bytes_invalid=0 send_seq=125 receive_seq=125 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000091 adj=49996614 Octopus_Max: temp=36.9 Pi: temp=36.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.31 cputime=4.206 memavail=7498188 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1717.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9437 bytes_read=15881 bytes_retransmit=9 bytes_invalid=0 send_seq=658 receive_seq=658 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028862 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000014 bytes_write=909 bytes_read=4843 bytes_retransmit=0 bytes_invalid=0 send_seq=126 receive_seq=126 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000150 adj=49996155 Octopus_Max: temp=36.8 Pi: temp=37.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.9 barrow: temp=-110.0 sysload=0.31 cputime=4.226 memavail=7498676 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1718.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9443 bytes_read=16178 bytes_retransmit=9 bytes_invalid=0 send_seq=659 receive_seq=659 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028827 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000014 bytes_write=915 bytes_read=4859 bytes_retransmit=0 bytes_invalid=0 send_seq=127 receive_seq=127 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000199 adj=49996460 Octopus_Max: temp=36.7 Pi: temp=37.0  heater_bed: target=0 temp=26.4 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.31 cputime=4.254 memavail=7498692 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.3 pwm=0.000
Stats 1719.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9449 bytes_read=16460 bytes_retransmit=9 bytes_invalid=0 send_seq=660 receive_seq=660 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028795 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000014 bytes_write=921 bytes_read=4875 bytes_retransmit=0 bytes_invalid=0 send_seq=128 receive_seq=128 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000245 adj=49996717 Octopus_Max: temp=36.8 Pi: temp=36.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.31 cputime=4.282 memavail=7498692 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1720.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9455 bytes_read=16771 bytes_retransmit=9 bytes_invalid=0 send_seq=661 receive_seq=661 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028803 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000014 bytes_write=927 bytes_read=4891 bytes_retransmit=0 bytes_invalid=0 send_seq=129 receive_seq=129 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000255 adj=49996921 Octopus_Max: temp=37.0 Pi: temp=36.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.9 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.31 cputime=4.310 memavail=7498468 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1721.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9461 bytes_read=17058 bytes_retransmit=9 bytes_invalid=0 send_seq=662 receive_seq=662 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028740 rpi: mcu_awake=0.001 mcu_task_avg=0.000017 mcu_task_stddev=0.000020 bytes_write=933 bytes_read=4920 bytes_retransmit=0 bytes_invalid=0 send_seq=130 receive_seq=130 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000259 adj=49996895 Octopus_Max: temp=36.7 Pi: temp=37.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.28 cputime=4.338 memavail=7498476 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1722.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9467 bytes_read=17339 bytes_retransmit=9 bytes_invalid=0 send_seq=663 receive_seq=663 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028738 rpi: mcu_awake=0.001 mcu_task_avg=0.000017 mcu_task_stddev=0.000020 bytes_write=939 bytes_read=4936 bytes_retransmit=0 bytes_invalid=0 send_seq=131 receive_seq=131 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000262 adj=49996900 Octopus_Max: temp=36.9 Pi: temp=36.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.28 cputime=4.367 memavail=7498476 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1723.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9473 bytes_read=17636 bytes_retransmit=9 bytes_invalid=0 send_seq=664 receive_seq=664 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028694 rpi: mcu_awake=0.001 mcu_task_avg=0.000017 mcu_task_stddev=0.000020 bytes_write=945 bytes_read=4952 bytes_retransmit=0 bytes_invalid=0 send_seq=132 receive_seq=132 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000242 adj=49996856 Octopus_Max: temp=37.0 Pi: temp=36.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.28 cputime=4.395 memavail=7499332 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1724.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9479 bytes_read=17933 bytes_retransmit=9 bytes_invalid=0 send_seq=665 receive_seq=665 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028634 rpi: mcu_awake=0.001 mcu_task_avg=0.000017 mcu_task_stddev=0.000020 bytes_write=951 bytes_read=4968 bytes_retransmit=0 bytes_invalid=0 send_seq=133 receive_seq=133 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000239 adj=49996731 Octopus_Max: temp=37.0 Pi: temp=36.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.9 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.28 cputime=4.424 memavail=7499440 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1725.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9485 bytes_read=18229 bytes_retransmit=9 bytes_invalid=0 send_seq=666 receive_seq=666 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028601 rpi: mcu_awake=0.001 mcu_task_avg=0.000017 mcu_task_stddev=0.000020 bytes_write=957 bytes_read=4984 bytes_retransmit=0 bytes_invalid=0 send_seq=134 receive_seq=134 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000249 adj=49996739 Octopus_Max: temp=37.0 Pi: temp=37.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.9 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.28 cputime=4.453 memavail=7499440 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1726.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9491 bytes_read=18540 bytes_retransmit=9 bytes_invalid=0 send_seq=667 receive_seq=667 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028543 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000019 bytes_write=963 bytes_read=5013 bytes_retransmit=0 bytes_invalid=0 send_seq=135 receive_seq=135 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000257 adj=49996804 Octopus_Max: temp=37.0 Pi: temp=36.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.26 cputime=4.482 memavail=7499440 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1727.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9497 bytes_read=18823 bytes_retransmit=9 bytes_invalid=0 send_seq=668 receive_seq=668 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028515 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000019 bytes_write=969 bytes_read=5029 bytes_retransmit=0 bytes_invalid=0 send_seq=136 receive_seq=136 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000241 adj=49996863 Octopus_Max: temp=36.9 Pi: temp=36.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.26 cputime=4.511 memavail=7502804 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1728.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9503 bytes_read=19105 bytes_retransmit=9 bytes_invalid=0 send_seq=669 receive_seq=669 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028474 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000019 bytes_write=975 bytes_read=5045 bytes_retransmit=0 bytes_invalid=0 send_seq=137 receive_seq=137 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000237 adj=49996742 Octopus_Max: temp=37.0 Pi: temp=37.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.26 cputime=4.536 memavail=7497388 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.3 pwm=0.000
Stats 1729.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9509 bytes_read=19416 bytes_retransmit=9 bytes_invalid=0 send_seq=670 receive_seq=670 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028374 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000019 bytes_write=981 bytes_read=5061 bytes_retransmit=0 bytes_invalid=0 send_seq=138 receive_seq=138 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000210 adj=49996735 Octopus_Max: temp=37.0 Pi: temp=38.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.26 cputime=4.549 memavail=7503284 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1730.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9515 bytes_read=19713 bytes_retransmit=9 bytes_invalid=0 send_seq=671 receive_seq=671 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028280 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000019 bytes_write=987 bytes_read=5077 bytes_retransmit=0 bytes_invalid=0 send_seq=139 receive_seq=139 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000185 adj=49996627 Octopus_Max: temp=37.1 Pi: temp=37.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.26 cputime=4.561 memavail=7503284 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1731.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9521 bytes_read=19995 bytes_retransmit=9 bytes_invalid=0 send_seq=672 receive_seq=672 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028207 rpi: mcu_awake=0.001 mcu_task_avg=0.000013 mcu_task_stddev=0.000015 bytes_write=993 bytes_read=5106 bytes_retransmit=0 bytes_invalid=0 send_seq=140 receive_seq=140 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000163 adj=49996548 Octopus_Max: temp=37.2 Pi: temp=36.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.24 cputime=4.573 memavail=7505132 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1732.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9527 bytes_read=20296 bytes_retransmit=9 bytes_invalid=0 send_seq=673 receive_seq=673 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028152 rpi: mcu_awake=0.001 mcu_task_avg=0.000013 mcu_task_stddev=0.000015 bytes_write=999 bytes_read=5122 bytes_retransmit=0 bytes_invalid=0 send_seq=141 receive_seq=141 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000145 adj=49996482 Octopus_Max: temp=37.1 Pi: temp=37.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.24 cputime=4.586 memavail=7505172 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1733.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9533 bytes_read=20579 bytes_retransmit=9 bytes_invalid=0 send_seq=674 receive_seq=674 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028126 rpi: mcu_awake=0.001 mcu_task_avg=0.000013 mcu_task_stddev=0.000015 bytes_write=1005 bytes_read=5138 bytes_retransmit=0 bytes_invalid=0 send_seq=142 receive_seq=142 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000133 adj=49996444 Octopus_Max: temp=37.0 Pi: temp=37.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-110.0 sysload=0.24 cputime=4.601 memavail=7505172 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1734.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9539 bytes_read=20861 bytes_retransmit=9 bytes_invalid=0 send_seq=675 receive_seq=675 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028156 rpi: mcu_awake=0.001 mcu_task_avg=0.000013 mcu_task_stddev=0.000015 bytes_write=1011 bytes_read=5154 bytes_retransmit=0 bytes_invalid=0 send_seq=143 receive_seq=143 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000144 adj=49996428 Octopus_Max: temp=37.1 Pi: temp=37.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.24 cputime=4.630 memavail=7505172 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1735.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9545 bytes_read=21186 bytes_retransmit=9 bytes_invalid=0 send_seq=676 receive_seq=676 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028155 rpi: mcu_awake=0.001 mcu_task_avg=0.000013 mcu_task_stddev=0.000015 bytes_write=1017 bytes_read=5170 bytes_retransmit=0 bytes_invalid=0 send_seq=144 receive_seq=144 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000153 adj=49996532 Octopus_Max: temp=37.2 Pi: temp=37.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.24 cputime=4.659 memavail=7505172 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1736.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9551 bytes_read=21469 bytes_retransmit=9 bytes_invalid=0 send_seq=677 receive_seq=677 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028164 rpi: mcu_awake=0.001 mcu_task_avg=0.000014 mcu_task_stddev=0.000016 bytes_write=1023 bytes_read=5199 bytes_retransmit=0 bytes_invalid=0 send_seq=145 receive_seq=145 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000158 adj=49996620 Octopus_Max: temp=37.2 Pi: temp=37.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.22 cputime=4.687 memavail=7505172 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1737.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9557 bytes_read=21751 bytes_retransmit=9 bytes_invalid=0 send_seq=678 receive_seq=678 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028181 rpi: mcu_awake=0.001 mcu_task_avg=0.000014 mcu_task_stddev=0.000016 bytes_write=1029 bytes_read=5215 bytes_retransmit=0 bytes_invalid=0 send_seq=146 receive_seq=146 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000163 adj=49996659 Octopus_Max: temp=37.1 Pi: temp=36.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.9 bed_core: temp=26.8 barrow: temp=-103.8 sysload=0.22 cputime=4.716 memavail=7503712 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1738.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9563 bytes_read=22062 bytes_retransmit=9 bytes_invalid=0 send_seq=679 receive_seq=679 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028189 rpi: mcu_awake=0.001 mcu_task_avg=0.000014 mcu_task_stddev=0.000016 bytes_write=1035 bytes_read=5231 bytes_retransmit=0 bytes_invalid=0 send_seq=147 receive_seq=147 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000169 adj=49996675 Octopus_Max: temp=37.2 Pi: temp=37.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.8 barrow: temp=-103.8 sysload=0.22 cputime=4.744 memavail=7503712 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.3 pwm=0.000
Stats 1739.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9569 bytes_read=22345 bytes_retransmit=9 bytes_invalid=0 send_seq=680 receive_seq=680 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028178 rpi: mcu_awake=0.001 mcu_task_avg=0.000014 mcu_task_stddev=0.000016 bytes_write=1041 bytes_read=5247 bytes_retransmit=0 bytes_invalid=0 send_seq=148 receive_seq=148 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000172 adj=49996702 Octopus_Max: temp=37.1 Pi: temp=36.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.22 cputime=4.771 memavail=7503712 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1740.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9575 bytes_read=22641 bytes_retransmit=9 bytes_invalid=0 send_seq=681 receive_seq=681 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028184 rpi: mcu_awake=0.001 mcu_task_avg=0.000014 mcu_task_stddev=0.000016 bytes_write=1047 bytes_read=5263 bytes_retransmit=0 bytes_invalid=0 send_seq=149 receive_seq=149 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000175 adj=49996726 Octopus_Max: temp=37.1 Pi: temp=36.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.22 cputime=4.800 memavail=7503712 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1741.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9581 bytes_read=22952 bytes_retransmit=9 bytes_invalid=0 send_seq=682 receive_seq=682 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028189 rpi: mcu_awake=0.001 mcu_task_avg=0.000022 mcu_task_stddev=0.000023 bytes_write=1053 bytes_read=5292 bytes_retransmit=0 bytes_invalid=0 send_seq=150 receive_seq=150 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000176 adj=49996726 Octopus_Max: temp=37.2 Pi: temp=36.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.9 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.20 cputime=4.828 memavail=7503712 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 1742.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9587 bytes_read=23234 bytes_retransmit=9 bytes_invalid=0 send_seq=683 receive_seq=683 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028185 rpi: mcu_awake=0.001 mcu_task_avg=0.000022 mcu_task_stddev=0.000023 bytes_write=1059 bytes_read=5308 bytes_retransmit=0 bytes_invalid=0 send_seq=151 receive_seq=151 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000194 adj=49996710 Octopus_Max: temp=37.1 Pi: temp=37.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-110.0 sysload=0.20 cputime=4.856 memavail=7503720 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1743.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9593 bytes_read=23504 bytes_retransmit=9 bytes_invalid=0 send_seq=684 receive_seq=684 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028181 rpi: mcu_awake=0.001 mcu_task_avg=0.000022 mcu_task_stddev=0.000023 bytes_write=1065 bytes_read=5324 bytes_retransmit=0 bytes_invalid=0 send_seq=152 receive_seq=152 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000193 adj=49996862 Octopus_Max: temp=37.1 Pi: temp=37.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.20 cputime=4.883 memavail=7503720 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1744.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9599 bytes_read=23815 bytes_retransmit=9 bytes_invalid=0 send_seq=685 receive_seq=685 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028165 rpi: mcu_awake=0.001 mcu_task_avg=0.000022 mcu_task_stddev=0.000023 bytes_write=1071 bytes_read=5340 bytes_retransmit=0 bytes_invalid=0 send_seq=153 receive_seq=153 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000193 adj=49996803 Octopus_Max: temp=37.3 Pi: temp=35.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.20 cputime=4.911 memavail=7501960 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1745.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9605 bytes_read=24112 bytes_retransmit=9 bytes_invalid=0 send_seq=686 receive_seq=686 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028141 rpi: mcu_awake=0.001 mcu_task_avg=0.000022 mcu_task_stddev=0.000023 bytes_write=1077 bytes_read=5356 bytes_retransmit=0 bytes_invalid=0 send_seq=154 receive_seq=154 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000176 adj=49996790 Octopus_Max: temp=37.2 Pi: temp=36.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.20 cputime=4.927 memavail=7502300 print_time=45.576 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Attempting MCU 'mcu' reset command
Attempting MCU 'rpi' config_reset command
b'Got EOF when reading from device'
webhooks client 4123703184: Disconnected
Restarting printer
Start printer at Sat Apr 20 22:41:21 2024 (1713649281.4 1746.9)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999

[gcode_macro STATE_NOTIFY_EXAMPLE]
description = Display the state_notify state
gcode = 
	{% set st = printer.state_notify %}
	{action_respond_info("state_notify: state=%s, timeout=%" % (st.state, st.timeout))}
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
webhooks client 4123702368: New connection
webhooks client 4123702368: Client info {'program': 'Moonraker', 'version': 'v0.8.0-325-g99b97af'}
Loaded MCU 'mcu' 112 commands (v0.12.0-169-g28faf814 / gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.34-4+rpi1+14) 2.34)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1_PB6_PB7=PB6,PB7 BUS_PINS_i2c1_PB8_PB9=PB8,PB9 BUS_PINS_i2c2_PB10_PB11=PB10,PB11 BUS_PINS_i2c3_PA8_PC9=PA8,PC9 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi2a=PC2,PC3,PB10 BUS_PINS_spi3a=PC11,PC12,PC10 BUS_PINS_spi4=PE13,PE14,PE12 BUS_PINS_spi5=PF8,PF9,PF7 BUS_PINS_spi5a=PH7,PF11,PH6 BUS_PINS_spi6=PG12,PG14,PG13 CLOCK_FREQ=400000000 MCU=stm32h723xx PWM_MAX=255 RESERVE_PINS_USB=PA11,PA12 RESERVE_PINS_crystal=PH0,PH1 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
mcu 'rpi': Starting connect
Loaded MCU 'rpi' 118 commands (v0.12.0-169-g28faf814 / gcc: (Raspbian 10.2.1-6+rpi1) 10.2.1 20210110 binutils: (GNU Binutils for Raspbian) 2.35.2)
MCU 'rpi' config: ADC_MAX=4095 CLOCK_FREQ=50000000 MCU=linux PCA9685_MAX=4096 PWM_MAX=32768 STATS_SUMSQ_BASE=256
mcu_temperature 'mcu' nominal base=-273.952569 slope=1618.577075
Sending MCU 'mcu' printer configuration...
Configured MCU 'mcu' (1024 moves)
Sending MCU 'rpi' printer configuration...
Configured MCU 'rpi' (1024 moves)
Starting heater checks for heater_bed
bed_mesh: generated points
Index |  Tool Adjusted  |   Probe
  0   | (40.0, 23.0)    | (10.0, 8.4)
  1   | (57.8, 23.0)    | (27.8, 8.4)
  2   | (75.5, 23.0)    | (45.5, 8.4)
  3   | (93.3, 23.0)    | (63.3, 8.4)
  4   | (111.1, 23.0)   | (81.1, 8.4)
  5   | (128.8, 23.0)   | (98.8, 8.4)
  6   | (146.6, 23.0)   | (116.6, 8.4)
  7   | (164.4, 23.0)   | (134.4, 8.4)
  8   | (182.2, 23.0)   | (152.2, 8.4)
  9   | (199.9, 23.0)   | (169.9, 8.4)
  10  | (199.9, 42.7)   | (169.9, 28.1)
  11  | (182.2, 42.7)   | (152.2, 28.1)
  12  | (164.4, 42.7)   | (134.4, 28.1)
  13  | (146.6, 42.7)   | (116.6, 28.1)
  14  | (128.9, 42.7)   | (98.9, 28.1)
  15  | (111.1, 42.7)   | (81.1, 28.1)
  16  | (93.3, 42.7)    | (63.3, 28.1)
  17  | (75.5, 42.7)    | (45.5, 28.1)
  18  | (57.8, 42.7)    | (27.8, 28.1)
  19  | (40.0, 42.7)    | (10.0, 28.1)
  20  | (40.0, 62.3)    | (10.0, 47.8)
  21  | (57.8, 62.3)    | (27.8, 47.8)
  22  | (75.5, 62.3)    | (45.5, 47.8)
  23  | (93.3, 62.3)    | (63.3, 47.8)
  24  | (111.1, 62.3)   | (81.1, 47.8)
  25  | (128.8, 62.3)   | (98.8, 47.8)
  26  | (146.6, 62.3)   | (116.6, 47.8)
  27  | (164.4, 62.3)   | (134.4, 47.8)
  28  | (182.2, 62.3)   | (152.2, 47.8)
  29  | (199.9, 62.3)   | (169.9, 47.8)
  30  | (199.9, 82.0)   | (169.9, 67.4)
  31  | (182.2, 82.0)   | (152.2, 67.4)
  32  | (164.4, 82.0)   | (134.4, 67.4)
  33  | (146.6, 82.0)   | (116.6, 67.4)
  34  | (128.9, 82.0)   | (98.9, 67.4)
  35  | (111.1, 82.0)   | (81.1, 67.4)
  36  | (93.3, 82.0)    | (63.3, 67.4)
  37  | (75.5, 82.0)    | (45.5, 67.4)
  38  | (57.8, 82.0)    | (27.8, 67.4)
  39  | (40.0, 82.0)    | (10.0, 67.4)
  40  | (40.0, 101.6)   | (10.0, 87.1)
  41  | (57.8, 101.6)   | (27.8, 87.1)
  42  | (75.5, 101.6)   | (45.5, 87.1)
  43  | (93.3, 101.6)   | (63.3, 87.1)
  44  | (111.1, 101.6)  | (81.1, 87.1)
  45  | (128.8, 101.6)  | (98.8, 87.1)
  46  | (146.6, 101.6)  | (116.6, 87.1)
  47  | (164.4, 101.6)  | (134.4, 87.1)
  48  | (182.2, 101.6)  | (152.2, 87.1)
  49  | (199.9, 101.6)  | (169.9, 87.1)
  50  | (199.9, 121.3)  | (169.9, 106.7)
  51  | (182.2, 121.3)  | (152.2, 106.7)
  52  | (164.4, 121.3)  | (134.4, 106.7)
  53  | (146.6, 121.3)  | (116.6, 106.7)
  54  | (128.9, 121.3)  | (98.9, 106.7)
  55  | (111.1, 121.3)  | (81.1, 106.7)
  56  | (93.3, 121.3)   | (63.3, 106.7)
  57  | (75.5, 121.3)   | (45.5, 106.7)
  58  | (57.8, 121.3)   | (27.8, 106.7)
  59  | (40.0, 121.3)   | (10.0, 106.7)
  60  | (40.0, 141.0)   | (10.0, 126.4)
  61  | (57.8, 141.0)   | (27.8, 126.4)
  62  | (75.5, 141.0)   | (45.5, 126.4)
  63  | (93.3, 141.0)   | (63.3, 126.4)
  64  | (111.1, 141.0)  | (81.1, 126.4)
  65  | (128.8, 141.0)  | (98.8, 126.4)
  66  | (146.6, 141.0)  | (116.6, 126.4)
  67  | (164.4, 141.0)  | (134.4, 126.4)
  68  | (182.2, 141.0)  | (152.2, 126.4)
  69  | (199.9, 141.0)  | (169.9, 126.4)
  70  | (199.9, 160.6)  | (169.9, 146.1)
  71  | (182.2, 160.6)  | (152.2, 146.1)
  72  | (164.4, 160.6)  | (134.4, 146.1)
  73  | (146.6, 160.6)  | (116.6, 146.1)
  74  | (128.9, 160.6)  | (98.9, 146.1)
  75  | (111.1, 160.6)  | (81.1, 146.1)
  76  | (93.3, 160.6)   | (63.3, 146.1)
  77  | (75.5, 160.6)   | (45.5, 146.1)
  78  | (57.8, 160.6)   | (27.8, 146.1)
  79  | (40.0, 160.6)   | (10.0, 146.1)
  80  | (40.0, 180.3)   | (10.0, 165.7)
  81  | (57.8, 180.3)   | (27.8, 165.7)
  82  | (75.5, 180.3)   | (45.5, 165.7)
  83  | (93.3, 180.3)   | (63.3, 165.7)
  84  | (111.1, 180.3)  | (81.1, 165.7)
  85  | (128.8, 180.3)  | (98.8, 165.7)
  86  | (146.6, 180.3)  | (116.6, 165.7)
  87  | (164.4, 180.3)  | (134.4, 165.7)
  88  | (182.2, 180.3)  | (152.2, 165.7)
  89  | (199.9, 180.3)  | (169.9, 165.7)
  90  | (199.9, 199.9)  | (169.9, 185.4)
  91  | (182.2, 199.9)  | (152.2, 185.4)
  92  | (164.4, 199.9)  | (134.4, 185.4)
  93  | (146.6, 199.9)  | (116.6, 185.4)
  94  | (128.9, 199.9)  | (98.9, 185.4)
  95  | (111.1, 199.9)  | (81.1, 185.4)
  96  | (93.3, 199.9)   | (63.3, 185.4)
  97  | (75.5, 199.9)   | (45.5, 185.4)
  98  | (57.8, 199.9)   | (27.8, 185.4)
  99  | (40.0, 199.9)   | (10.0, 185.4)

Printer is not ready
The klippy host software is attempting to connect.  Please
retry in a few moments.

Script running error
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/extras/gcode_button.py", line 41, in button_callback
    self.gcode.run_script(template.render())
  File "/home/pi/klipper/klippy/gcode.py", line 229, in run_script
    self._process_commands(script.split('\n'), need_ack=False)
  File "/home/pi/klipper/klippy/gcode.py", line 211, in _process_commands
    handler(gcmd)
  File "/home/pi/klipper/klippy/gcode.py", line 285, in cmd_default
    raise gcmd.error(self.printer.get_state_message()[0])
gcode.CommandError: 
Printer is not ready
The klippy host software is attempting to connect.  Please
retry in a few moments.


Printer is not ready
The klippy host software is attempting to connect.  Please
retry in a few moments.

Script running error
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/extras/gcode_button.py", line 41, in button_callback
    self.gcode.run_script(template.render())
  File "/home/pi/klipper/klippy/gcode.py", line 229, in run_script
    self._process_commands(script.split('\n'), need_ack=False)
  File "/home/pi/klipper/klippy/gcode.py", line 211, in _process_commands
    handler(gcmd)
  File "/home/pi/klipper/klippy/gcode.py", line 285, in cmd_default
    raise gcmd.error(self.printer.get_state_message()[0])
gcode.CommandError: 
Printer is not ready
The klippy host software is attempting to connect.  Please
retry in a few moments.

Starting heater checks for extruder
autotune_tmc set stepper_x pwm_freq=2
autotune_tmc stepper_x ncycles=219 pfdcycles=73
autotune_tmc set stepper_x tpfd=1
autotune_tmc set stepper_x tbl=1
autotune_tmc set stepper_x toff=1
autotune_tmc seting hysteresis based on 48.0 V
dcoilblank = 0.160000, dcoilsd = 0.015156
hysteresis = 42, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_x hstrt=7
autotune_tmc set stepper_x hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_x pwm_autoscale=True
autotune_tmc set stepper_x pwm_autograd=True
autotune_tmc set stepper_x pwm_grad=4
autotune_tmc set stepper_x pwm_ofs=10
autotune_tmc set stepper_x pwm_reg=15
autotune_tmc set stepper_x pwm_lim=4
autotune_tmc set stepper_x tpwmthrs=1048575
autotune_tmc set stepper_x en_pwm_mode=False
autotune_tmc set stepper_x tcoolthrs=391(24.0)
autotune_tmc set stepper_x sgt=1
autotune_tmc set stepper_x small_hysteresis=False
autotune_tmc set stepper_x semin=2
autotune_tmc set stepper_x semax=2
autotune_tmc set stepper_x seup=3
autotune_tmc set stepper_x sedn=2
autotune_tmc set stepper_x seimin=0
autotune_tmc set stepper_x sfilt=0
autotune_tmc set stepper_x iholddelay=12
autotune_tmc set stepper_x vhighfs=False
autotune_tmc set stepper_x vhighchm=False
autotune_tmc set stepper_x multistep_filt=True
autotune_tmc set stepper_x1 pwm_freq=2
autotune_tmc stepper_x1 ncycles=219 pfdcycles=73
autotune_tmc set stepper_x1 tpfd=1
autotune_tmc set stepper_x1 tbl=1
autotune_tmc set stepper_x1 toff=1
autotune_tmc seting hysteresis based on 48.0 V
dcoilblank = 0.160000, dcoilsd = 0.015156
hysteresis = 42, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_x1 hstrt=7
autotune_tmc set stepper_x1 hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_x1 pwm_autoscale=True
autotune_tmc set stepper_x1 pwm_autograd=True
autotune_tmc set stepper_x1 pwm_grad=4
autotune_tmc set stepper_x1 pwm_ofs=10
autotune_tmc set stepper_x1 pwm_reg=15
autotune_tmc set stepper_x1 pwm_lim=4
autotune_tmc set stepper_x1 tpwmthrs=1048575
autotune_tmc set stepper_x1 en_pwm_mode=False
autotune_tmc set stepper_x1 tcoolthrs=391(24.0)
autotune_tmc set stepper_x1 sgt=1
autotune_tmc set stepper_x1 small_hysteresis=False
autotune_tmc set stepper_x1 semin=2
autotune_tmc set stepper_x1 semax=2
autotune_tmc set stepper_x1 seup=3
autotune_tmc set stepper_x1 sedn=2
autotune_tmc set stepper_x1 seimin=0
autotune_tmc set stepper_x1 sfilt=0
autotune_tmc set stepper_x1 iholddelay=12
autotune_tmc set stepper_x1 vhighfs=False
autotune_tmc set stepper_x1 vhighchm=False
autotune_tmc set stepper_x1 multistep_filt=True
autotune_tmc set stepper_y pwm_freq=2
autotune_tmc stepper_y ncycles=219 pfdcycles=73
autotune_tmc set stepper_y tpfd=1
autotune_tmc set stepper_y tbl=1
autotune_tmc set stepper_y toff=1
autotune_tmc seting hysteresis based on 48.0 V
dcoilblank = 0.160000, dcoilsd = 0.015156
hysteresis = 42, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_y hstrt=7
autotune_tmc set stepper_y hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_y pwm_autoscale=True
autotune_tmc set stepper_y pwm_autograd=True
autotune_tmc set stepper_y pwm_grad=4
autotune_tmc set stepper_y pwm_ofs=10
autotune_tmc set stepper_y pwm_reg=15
autotune_tmc set stepper_y pwm_lim=4
autotune_tmc set stepper_y tpwmthrs=1048575
autotune_tmc set stepper_y en_pwm_mode=False
autotune_tmc set stepper_y tcoolthrs=391(24.0)
autotune_tmc set stepper_y sgt=1
autotune_tmc set stepper_y small_hysteresis=False
autotune_tmc set stepper_y semin=2
autotune_tmc set stepper_y semax=2
autotune_tmc set stepper_y seup=3
autotune_tmc set stepper_y sedn=2
autotune_tmc set stepper_y seimin=0
autotune_tmc set stepper_y sfilt=0
autotune_tmc set stepper_y iholddelay=12
autotune_tmc set stepper_y vhighfs=False
autotune_tmc set stepper_y vhighchm=False
autotune_tmc set stepper_y multistep_filt=True
autotune_tmc set stepper_y1 pwm_freq=2
autotune_tmc stepper_y1 ncycles=219 pfdcycles=73
autotune_tmc set stepper_y1 tpfd=1
autotune_tmc set stepper_y1 tbl=1
autotune_tmc set stepper_y1 toff=1
autotune_tmc seting hysteresis based on 48.0 V
dcoilblank = 0.160000, dcoilsd = 0.015156
hysteresis = 42, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_y1 hstrt=7
autotune_tmc set stepper_y1 hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_y1 pwm_autoscale=True
autotune_tmc set stepper_y1 pwm_autograd=True
autotune_tmc set stepper_y1 pwm_grad=4
autotune_tmc set stepper_y1 pwm_ofs=10
autotune_tmc set stepper_y1 pwm_reg=15
autotune_tmc set stepper_y1 pwm_lim=4
autotune_tmc set stepper_y1 tpwmthrs=1048575
autotune_tmc set stepper_y1 en_pwm_mode=False
autotune_tmc set stepper_y1 tcoolthrs=391(24.0)
autotune_tmc set stepper_y1 sgt=1
autotune_tmc set stepper_y1 small_hysteresis=False
autotune_tmc set stepper_y1 semin=2
autotune_tmc set stepper_y1 semax=2
autotune_tmc set stepper_y1 seup=3
autotune_tmc set stepper_y1 sedn=2
autotune_tmc set stepper_y1 seimin=0
autotune_tmc set stepper_y1 sfilt=0
autotune_tmc set stepper_y1 iholddelay=12
autotune_tmc set stepper_y1 vhighfs=False
autotune_tmc set stepper_y1 vhighchm=False
autotune_tmc set stepper_y1 multistep_filt=True
autotune_tmc set stepper_z pwm_freq=2
autotune_tmc stepper_z ncycles=219 pfdcycles=73
autotune_tmc set stepper_z tbl=1
autotune_tmc set stepper_z toff=1
autotune_tmc seting hysteresis based on 24.0 V
dcoilblank = 0.080000, dcoilsd = 0.013495
hysteresis = 22, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_z hstrt=7
autotune_tmc set stepper_z hend=9
autotune_tmc set stepper_z sgthrs=40
autotune_tmc using max PWM speed 43.108253
autotune_tmc set stepper_z pwm_autoscale=True
autotune_tmc set stepper_z pwm_autograd=True
autotune_tmc set stepper_z pwm_grad=7
autotune_tmc set stepper_z pwm_ofs=18
autotune_tmc set stepper_z pwm_reg=15
autotune_tmc set stepper_z pwm_lim=4
autotune_tmc set stepper_z tpwmthrs=1048575
autotune_tmc set stepper_z en_spreadcycle=True
autotune_tmc set stepper_z tcoolthrs=391(2.4)
autotune_tmc set stepper_z semin=2
autotune_tmc set stepper_z semax=2
autotune_tmc set stepper_z seup=3
autotune_tmc set stepper_z sedn=2
autotune_tmc set stepper_z seimin=0
autotune_tmc set stepper_z iholddelay=12
autotune_tmc set stepper_z multistep_filt=True
autotune_tmc set stepper_z1 pwm_freq=2
autotune_tmc stepper_z1 ncycles=219 pfdcycles=73
autotune_tmc set stepper_z1 tbl=1
autotune_tmc set stepper_z1 toff=1
autotune_tmc seting hysteresis based on 24.0 V
dcoilblank = 0.080000, dcoilsd = 0.013495
hysteresis = 22, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_z1 hstrt=7
autotune_tmc set stepper_z1 hend=9
autotune_tmc set stepper_z1 sgthrs=40
autotune_tmc using max PWM speed 43.108253
autotune_tmc set stepper_z1 pwm_autoscale=True
autotune_tmc set stepper_z1 pwm_autograd=True
autotune_tmc set stepper_z1 pwm_grad=7
autotune_tmc set stepper_z1 pwm_ofs=18
autotune_tmc set stepper_z1 pwm_reg=15
autotune_tmc set stepper_z1 pwm_lim=4
autotune_tmc set stepper_z1 tpwmthrs=1048575
autotune_tmc set stepper_z1 en_spreadcycle=True
autotune_tmc set stepper_z1 tcoolthrs=391(2.4)
autotune_tmc set stepper_z1 semin=2
autotune_tmc set stepper_z1 semax=2
autotune_tmc set stepper_z1 seup=3
autotune_tmc set stepper_z1 sedn=2
autotune_tmc set stepper_z1 seimin=0
autotune_tmc set stepper_z1 iholddelay=12
autotune_tmc set stepper_z1 multistep_filt=True
autotune_tmc set stepper_z2 pwm_freq=2
autotune_tmc stepper_z2 ncycles=219 pfdcycles=73
autotune_tmc set stepper_z2 tbl=1
autotune_tmc set stepper_z2 toff=1
autotune_tmc seting hysteresis based on 24.0 V
dcoilblank = 0.080000, dcoilsd = 0.013495
hysteresis = 22, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_z2 hstrt=7
autotune_tmc set stepper_z2 hend=9
autotune_tmc set stepper_z2 sgthrs=40
autotune_tmc using max PWM speed 43.108253
autotune_tmc set stepper_z2 pwm_autoscale=True
autotune_tmc set stepper_z2 pwm_autograd=True
autotune_tmc set stepper_z2 pwm_grad=7
autotune_tmc set stepper_z2 pwm_ofs=18
autotune_tmc set stepper_z2 pwm_reg=15
autotune_tmc set stepper_z2 pwm_lim=4
autotune_tmc set stepper_z2 tpwmthrs=1048575
autotune_tmc set stepper_z2 en_spreadcycle=True
autotune_tmc set stepper_z2 tcoolthrs=391(2.4)
autotune_tmc set stepper_z2 semin=2
autotune_tmc set stepper_z2 semax=2
autotune_tmc set stepper_z2 seup=3
autotune_tmc set stepper_z2 sedn=2
autotune_tmc set stepper_z2 seimin=0
autotune_tmc set stepper_z2 iholddelay=12
autotune_tmc set stepper_z2 multistep_filt=True
Stats 1750.9: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=9370 bytes_read=12440 bytes_retransmit=9 bytes_invalid=0 send_seq=647 receive_seq=647 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400026042 rpi: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=831 bytes_read=4596 bytes_retransmit=0 bytes_invalid=0 send_seq=113 receive_seq=113 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000419 adj=49990058 Octopus_Max: temp=38.2 Pi: temp=36.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.43 cputime=6.544 memavail=7501620 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
webhooks: registering remote method 'shutdown_machine' for connection id: 4123702368
webhooks: registering remote method 'reboot_machine' for connection id: 4123702368
webhooks: registering remote method 'pause_job_queue' for connection id: 4123702368
webhooks: registering remote method 'start_job_queue' for connection id: 4123702368
webhooks: registering remote method 'set_device_power' for connection id: 4123702368
Stats 1751.9: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000008 mcu_task_stddev=0.000060 bytes_write=9376 bytes_read=12736 bytes_retransmit=9 bytes_invalid=0 send_seq=648 receive_seq=648 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400027756 rpi: mcu_awake=0.003 mcu_task_avg=0.000020 mcu_task_stddev=0.000011 bytes_write=837 bytes_read=4626 bytes_retransmit=0 bytes_invalid=0 send_seq=114 receive_seq=114 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000160 adj=50001045 Octopus_Max: temp=38.2 Pi: temp=38.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-110.0 sysload=0.39 cputime=6.584 memavail=7501384 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1752.9: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000008 mcu_task_stddev=0.000060 bytes_write=9382 bytes_read=13018 bytes_retransmit=9 bytes_invalid=0 send_seq=649 receive_seq=649 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028352 rpi: mcu_awake=0.003 mcu_task_avg=0.000020 mcu_task_stddev=0.000011 bytes_write=843 bytes_read=4642 bytes_retransmit=0 bytes_invalid=0 send_seq=115 receive_seq=115 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999724 adj=49999199 Octopus_Max: temp=38.1 Pi: temp=37.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-103.8 sysload=0.39 cputime=6.596 memavail=7501384 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Error evaluating 'gcode_macro STATE_NOTIFY_EXAMPLE:gcode': jinja2.exceptions.UndefinedError: 'extras.gcode_macro.GetStatusWrapper object' has no attribute 'state_notify'
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/extras/gcode_macro.py", line 61, in render
    return str(self.template.render(context))
  File "/home/pi/klippy-env/lib/python3.9/site-packages/jinja2/environment.py", line 1090, in render
    self.environment.handle_exception()
  File "/home/pi/klippy-env/lib/python3.9/site-packages/jinja2/environment.py", line 832, in handle_exception
    reraise(*rewrite_traceback_stack(source=source))
  File "/home/pi/klippy-env/lib/python3.9/site-packages/jinja2/_compat.py", line 28, in reraise
    raise value.with_traceback(tb)
  File "<template>", line 3, in top-level template code
  File "/home/pi/klippy-env/lib/python3.9/site-packages/jinja2/environment.py", line 471, in getattr
    return getattr(obj, attribute)
jinja2.exceptions.UndefinedError: 'extras.gcode_macro.GetStatusWrapper object' has no attribute 'state_notify'
Error evaluating 'gcode_macro STATE_NOTIFY_EXAMPLE:gcode': jinja2.exceptions.UndefinedError: 'extras.gcode_macro.GetStatusWrapper object' has no attribute 'state_notify'

Stats 1753.9: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000008 mcu_task_stddev=0.000060 bytes_write=9388 bytes_read=13329 bytes_retransmit=9 bytes_invalid=0 send_seq=650 receive_seq=650 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028607 rpi: mcu_awake=0.003 mcu_task_avg=0.000020 mcu_task_stddev=0.000011 bytes_write=849 bytes_read=4658 bytes_retransmit=0 bytes_invalid=0 send_seq=116 receive_seq=116 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999656 adj=49997522 Octopus_Max: temp=38.1 Pi: temp=38.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.39 cputime=6.613 memavail=7501440 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1754.9: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000008 mcu_task_stddev=0.000060 bytes_write=9394 bytes_read=13612 bytes_retransmit=9 bytes_invalid=0 send_seq=651 receive_seq=651 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028301 rpi: mcu_awake=0.003 mcu_task_avg=0.000020 mcu_task_stddev=0.000011 bytes_write=855 bytes_read=4674 bytes_retransmit=0 bytes_invalid=0 send_seq=117 receive_seq=117 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999731 adj=49996954 Octopus_Max: temp=38.3 Pi: temp=37.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.39 cputime=6.625 memavail=7501440 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1755.9: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000008 mcu_task_stddev=0.000060 bytes_write=9400 bytes_read=13894 bytes_retransmit=9 bytes_invalid=0 send_seq=652 receive_seq=652 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028739 rpi: mcu_awake=0.003 mcu_task_avg=0.000020 mcu_task_stddev=0.000011 bytes_write=861 bytes_read=4690 bytes_retransmit=0 bytes_invalid=0 send_seq=118 receive_seq=118 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999792 adj=49997025 Octopus_Max: temp=38.3 Pi: temp=36.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.39 cputime=6.644 memavail=7501440 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1756.9: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9406 bytes_read=14208 bytes_retransmit=9 bytes_invalid=0 send_seq=653 receive_seq=653 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029215 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000015 bytes_write=873 bytes_read=4735 bytes_retransmit=0 bytes_invalid=0 send_seq=120 receive_seq=120 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000238 adj=49996828 Octopus_Max: temp=38.2 Pi: temp=36.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.36 cputime=6.675 memavail=7501440 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1757.9: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9412 bytes_read=14488 bytes_retransmit=9 bytes_invalid=0 send_seq=654 receive_seq=654 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029308 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000015 bytes_write=879 bytes_read=4751 bytes_retransmit=0 bytes_invalid=0 send_seq=121 receive_seq=121 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000251 adj=49997816 Octopus_Max: temp=38.3 Pi: temp=37.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.36 cputime=6.704 memavail=7501472 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1758.9: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9418 bytes_read=14770 bytes_retransmit=9 bytes_invalid=0 send_seq=655 receive_seq=655 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029300 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000015 bytes_write=885 bytes_read=4767 bytes_retransmit=0 bytes_invalid=0 send_seq=122 receive_seq=122 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000421 adj=49997511 Octopus_Max: temp=38.0 Pi: temp=37.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-110.0 sysload=0.36 cputime=6.733 memavail=7501472 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1759.9: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9424 bytes_read=15081 bytes_retransmit=9 bytes_invalid=0 send_seq=656 receive_seq=656 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029265 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000015 bytes_write=891 bytes_read=4783 bytes_retransmit=0 bytes_invalid=0 send_seq=123 receive_seq=123 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000417 adj=49997865 Octopus_Max: temp=38.2 Pi: temp=36.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.36 cputime=6.761 memavail=7501476 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1761.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9430 bytes_read=15364 bytes_retransmit=9 bytes_invalid=0 send_seq=657 receive_seq=657 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029239 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000015 bytes_write=897 bytes_read=4799 bytes_retransmit=0 bytes_invalid=0 send_seq=124 receive_seq=124 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000434 adj=49997591 Octopus_Max: temp=38.3 Pi: temp=37.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.36 cputime=6.789 memavail=7501476 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1762.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9436 bytes_read=15660 bytes_retransmit=9 bytes_invalid=0 send_seq=658 receive_seq=658 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028913 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000020 bytes_write=903 bytes_read=4828 bytes_retransmit=0 bytes_invalid=0 send_seq=125 receive_seq=125 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000358 adj=49997459 Octopus_Max: temp=38.3 Pi: temp=37.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.33 cputime=6.805 memavail=7503596 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 1763.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9442 bytes_read=15971 bytes_retransmit=9 bytes_invalid=0 send_seq=659 receive_seq=659 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028649 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000020 bytes_write=909 bytes_read=4844 bytes_retransmit=0 bytes_invalid=0 send_seq=126 receive_seq=126 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000312 adj=49997153 Octopus_Max: temp=38.2 Pi: temp=36.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.33 cputime=6.817 memavail=7503596 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1764.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9448 bytes_read=16254 bytes_retransmit=9 bytes_invalid=0 send_seq=660 receive_seq=660 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028475 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000020 bytes_write=915 bytes_read=4860 bytes_retransmit=0 bytes_invalid=0 send_seq=127 receive_seq=127 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000250 adj=49996997 Octopus_Max: temp=38.2 Pi: temp=37.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.33 cputime=6.829 memavail=7503596 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 1765.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9454 bytes_read=16536 bytes_retransmit=9 bytes_invalid=0 send_seq=661 receive_seq=661 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028414 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000020 bytes_write=921 bytes_read=4876 bytes_retransmit=0 bytes_invalid=0 send_seq=128 receive_seq=128 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000211 adj=49996755 Octopus_Max: temp=38.3 Pi: temp=37.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.33 cputime=6.841 memavail=7503596 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1766.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9460 bytes_read=16847 bytes_retransmit=9 bytes_invalid=0 send_seq=662 receive_seq=662 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028322 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000020 bytes_write=927 bytes_read=4892 bytes_retransmit=0 bytes_invalid=0 send_seq=129 receive_seq=129 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000165 adj=49996590 Octopus_Max: temp=38.3 Pi: temp=36.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.33 cputime=6.852 memavail=7503596 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1767.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9466 bytes_read=17144 bytes_retransmit=9 bytes_invalid=0 send_seq=663 receive_seq=663 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028438 rpi: mcu_awake=0.000 mcu_task_avg=0.000008 mcu_task_stddev=0.000009 bytes_write=933 bytes_read=4921 bytes_retransmit=0 bytes_invalid=0 send_seq=130 receive_seq=130 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000186 adj=49996442 Octopus_Max: temp=38.3 Pi: temp=37.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.9 bed_core: temp=26.8 barrow: temp=-100.0 sysload=0.30 cputime=6.881 memavail=7503596 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1768.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9472 bytes_read=17413 bytes_retransmit=9 bytes_invalid=0 send_seq=664 receive_seq=664 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028773 rpi: mcu_awake=0.000 mcu_task_avg=0.000008 mcu_task_stddev=0.000009 bytes_write=939 bytes_read=4937 bytes_retransmit=0 bytes_invalid=0 send_seq=131 receive_seq=131 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000206 adj=49996517 Octopus_Max: temp=38.4 Pi: temp=37.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.30 cputime=6.909 memavail=7503608 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1769.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9478 bytes_read=17724 bytes_retransmit=9 bytes_invalid=0 send_seq=665 receive_seq=665 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028751 rpi: mcu_awake=0.000 mcu_task_avg=0.000008 mcu_task_stddev=0.000009 bytes_write=945 bytes_read=4953 bytes_retransmit=0 bytes_invalid=0 send_seq=132 receive_seq=132 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000213 adj=49996426 Octopus_Max: temp=38.4 Pi: temp=36.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.30 cputime=6.940 memavail=7503608 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1770.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9484 bytes_read=18007 bytes_retransmit=9 bytes_invalid=0 send_seq=666 receive_seq=666 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028709 rpi: mcu_awake=0.000 mcu_task_avg=0.000008 mcu_task_stddev=0.000009 bytes_write=951 bytes_read=4969 bytes_retransmit=0 bytes_invalid=0 send_seq=133 receive_seq=133 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000210 adj=49996527 Octopus_Max: temp=38.3 Pi: temp=36.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.9 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.30 cputime=6.967 memavail=7503608 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1771.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9490 bytes_read=18289 bytes_retransmit=9 bytes_invalid=0 send_seq=667 receive_seq=667 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028675 rpi: mcu_awake=0.000 mcu_task_avg=0.000008 mcu_task_stddev=0.000009 bytes_write=957 bytes_read=4985 bytes_retransmit=0 bytes_invalid=0 send_seq=134 receive_seq=134 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000211 adj=49996566 Octopus_Max: temp=38.4 Pi: temp=37.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-110.0 sysload=0.30 cputime=6.996 memavail=7503608 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1772.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9496 bytes_read=18614 bytes_retransmit=9 bytes_invalid=0 send_seq=668 receive_seq=668 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028630 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=963 bytes_read=5014 bytes_retransmit=0 bytes_invalid=0 send_seq=135 receive_seq=135 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000209 adj=49996606 Octopus_Max: temp=38.3 Pi: temp=36.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.8 barrow: temp=-110.0 sysload=0.28 cputime=7.025 memavail=7503608 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1773.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9502 bytes_read=18897 bytes_retransmit=9 bytes_invalid=0 send_seq=669 receive_seq=669 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028590 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=969 bytes_read=5030 bytes_retransmit=0 bytes_invalid=0 send_seq=136 receive_seq=136 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000201 adj=49996635 Octopus_Max: temp=38.4 Pi: temp=37.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-110.0 sysload=0.28 cputime=7.054 memavail=7503608 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1774.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9508 bytes_read=19179 bytes_retransmit=9 bytes_invalid=0 send_seq=670 receive_seq=670 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028558 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=975 bytes_read=5046 bytes_retransmit=0 bytes_invalid=0 send_seq=137 receive_seq=137 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000198 adj=49996620 Octopus_Max: temp=38.4 Pi: temp=37.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.9 bed_core: temp=26.6 barrow: temp=-100.0 sysload=0.28 cputime=7.082 memavail=7503608 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1775.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9514 bytes_read=19490 bytes_retransmit=9 bytes_invalid=0 send_seq=671 receive_seq=671 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028537 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=981 bytes_read=5062 bytes_retransmit=0 bytes_invalid=0 send_seq=138 receive_seq=138 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000193 adj=49996630 Octopus_Max: temp=38.4 Pi: temp=36.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-110.0 sysload=0.28 cputime=7.111 memavail=7503608 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1776.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9520 bytes_read=19773 bytes_retransmit=9 bytes_invalid=0 send_seq=672 receive_seq=672 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028509 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=987 bytes_read=5078 bytes_retransmit=0 bytes_invalid=0 send_seq=139 receive_seq=139 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000192 adj=49996614 Octopus_Max: temp=38.3 Pi: temp=36.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.9 bed_core: temp=26.7 barrow: temp=-110.0 sysload=0.28 cputime=7.140 memavail=7503608 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1777.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9526 bytes_read=20069 bytes_retransmit=9 bytes_invalid=0 send_seq=673 receive_seq=673 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028459 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000023 bytes_write=993 bytes_read=5107 bytes_retransmit=0 bytes_invalid=0 send_seq=140 receive_seq=140 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000199 adj=49996634 Octopus_Max: temp=38.5 Pi: temp=36.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.9 bed_core: temp=26.7 barrow: temp=-110.0 sysload=0.26 cputime=7.167 memavail=7503624 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1778.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9532 bytes_read=20377 bytes_retransmit=9 bytes_invalid=0 send_seq=674 receive_seq=674 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028447 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000023 bytes_write=999 bytes_read=5123 bytes_retransmit=0 bytes_invalid=0 send_seq=141 receive_seq=141 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000177 adj=49996722 Octopus_Max: temp=38.5 Pi: temp=36.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.9 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.26 cputime=7.187 memavail=7502496 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1779.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9538 bytes_read=20652 bytes_retransmit=9 bytes_invalid=0 send_seq=675 receive_seq=675 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028373 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000023 bytes_write=1005 bytes_read=5139 bytes_retransmit=0 bytes_invalid=0 send_seq=142 receive_seq=142 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000157 adj=49996558 Octopus_Max: temp=38.4 Pi: temp=36.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.26 cputime=7.199 memavail=7502496 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1780.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9544 bytes_read=20934 bytes_retransmit=9 bytes_invalid=0 send_seq=676 receive_seq=676 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028296 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000023 bytes_write=1011 bytes_read=5155 bytes_retransmit=0 bytes_invalid=0 send_seq=143 receive_seq=143 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000143 adj=49996497 Octopus_Max: temp=38.5 Pi: temp=37.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.9 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.26 cputime=7.211 memavail=7502496 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1781.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9550 bytes_read=21245 bytes_retransmit=9 bytes_invalid=0 send_seq=677 receive_seq=677 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028250 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000023 bytes_write=1017 bytes_read=5171 bytes_retransmit=0 bytes_invalid=0 send_seq=144 receive_seq=144 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000134 adj=49996494 Octopus_Max: temp=38.5 Pi: temp=36.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.9 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.26 cputime=7.223 memavail=7502496 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1782.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9556 bytes_read=21542 bytes_retransmit=9 bytes_invalid=0 send_seq=678 receive_seq=678 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028208 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000013 bytes_write=1023 bytes_read=5200 bytes_retransmit=0 bytes_invalid=0 send_seq=145 receive_seq=145 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000127 adj=49996499 Octopus_Max: temp=38.5 Pi: temp=36.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.24 cputime=7.235 memavail=7502496 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1783.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9562 bytes_read=21824 bytes_retransmit=9 bytes_invalid=0 send_seq=679 receive_seq=679 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028151 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000013 bytes_write=1029 bytes_read=5216 bytes_retransmit=0 bytes_invalid=0 send_seq=146 receive_seq=146 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000146 adj=49996512 Octopus_Max: temp=38.3 Pi: temp=37.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.24 cputime=7.255 memavail=7502496 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1784.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9568 bytes_read=22135 bytes_retransmit=9 bytes_invalid=0 send_seq=680 receive_seq=680 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028185 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000013 bytes_write=1035 bytes_read=5232 bytes_retransmit=0 bytes_invalid=0 send_seq=147 receive_seq=147 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000154 adj=49996738 Octopus_Max: temp=38.6 Pi: temp=37.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.24 cputime=7.284 memavail=7502496 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1785.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9574 bytes_read=22432 bytes_retransmit=9 bytes_invalid=0 send_seq=681 receive_seq=681 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028186 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000013 bytes_write=1041 bytes_read=5248 bytes_retransmit=0 bytes_invalid=0 send_seq=148 receive_seq=148 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000159 adj=49996747 Octopus_Max: temp=38.6 Pi: temp=36.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.24 cputime=7.312 memavail=7502496 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1786.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9580 bytes_read=22700 bytes_retransmit=9 bytes_invalid=0 send_seq=682 receive_seq=682 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028207 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000013 bytes_write=1047 bytes_read=5264 bytes_retransmit=0 bytes_invalid=0 send_seq=149 receive_seq=149 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000164 adj=49996754 Octopus_Max: temp=38.4 Pi: temp=37.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.24 cputime=7.341 memavail=7502496 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1787.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9586 bytes_read=23025 bytes_retransmit=9 bytes_invalid=0 send_seq=683 receive_seq=683 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028225 rpi: mcu_awake=0.001 mcu_task_avg=0.000018 mcu_task_stddev=0.000020 bytes_write=1053 bytes_read=5293 bytes_retransmit=0 bytes_invalid=0 send_seq=150 receive_seq=150 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000169 adj=49996745 Octopus_Max: temp=38.7 Pi: temp=36.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.22 cputime=7.370 memavail=7502496 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1788.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9592 bytes_read=23322 bytes_retransmit=9 bytes_invalid=0 send_seq=684 receive_seq=684 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028230 rpi: mcu_awake=0.001 mcu_task_avg=0.000018 mcu_task_stddev=0.000020 bytes_write=1059 bytes_read=5309 bytes_retransmit=0 bytes_invalid=0 send_seq=151 receive_seq=151 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000171 adj=49996739 Octopus_Max: temp=38.7 Pi: temp=37.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.22 cputime=7.398 memavail=7502504 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1789.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9598 bytes_read=23584 bytes_retransmit=9 bytes_invalid=0 send_seq=685 receive_seq=685 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028238 rpi: mcu_awake=0.001 mcu_task_avg=0.000018 mcu_task_stddev=0.000020 bytes_write=1065 bytes_read=5325 bytes_retransmit=0 bytes_invalid=0 send_seq=152 receive_seq=152 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000173 adj=49996731 Octopus_Max: temp=38.4 Pi: temp=36.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.22 cputime=7.425 memavail=7502504 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1790.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9610 bytes_read=23903 bytes_retransmit=9 bytes_invalid=0 send_seq=687 receive_seq=687 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028308 rpi: mcu_awake=0.001 mcu_task_avg=0.000018 mcu_task_stddev=0.000020 bytes_write=1071 bytes_read=5341 bytes_retransmit=0 bytes_invalid=0 send_seq=153 receive_seq=153 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000177 adj=49996717 Octopus_Max: temp=38.5 Pi: temp=37.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-103.8 sysload=0.22 cputime=7.454 memavail=7502504 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1791.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9616 bytes_read=24200 bytes_retransmit=9 bytes_invalid=0 send_seq=688 receive_seq=688 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028288 rpi: mcu_awake=0.001 mcu_task_avg=0.000018 mcu_task_stddev=0.000020 bytes_write=1077 bytes_read=5357 bytes_retransmit=0 bytes_invalid=0 send_seq=154 receive_seq=154 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000185 adj=49996650 Octopus_Max: temp=38.7 Pi: temp=37.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.9 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.22 cputime=7.481 memavail=7502504 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1792.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9622 bytes_read=24482 bytes_retransmit=9 bytes_invalid=0 send_seq=689 receive_seq=689 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028294 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000023 bytes_write=1083 bytes_read=5386 bytes_retransmit=0 bytes_invalid=0 send_seq=155 receive_seq=155 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000182 adj=49996750 Octopus_Max: temp=38.7 Pi: temp=37.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.8 barrow: temp=-110.0 sysload=0.20 cputime=7.509 memavail=7502504 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1793.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9628 bytes_read=24793 bytes_retransmit=9 bytes_invalid=0 send_seq=690 receive_seq=690 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028270 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000023 bytes_write=1089 bytes_read=5402 bytes_retransmit=0 bytes_invalid=0 send_seq=156 receive_seq=156 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000193 adj=49996690 Octopus_Max: temp=38.6 Pi: temp=37.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.20 cputime=7.537 memavail=7502524 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1794.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9634 bytes_read=25090 bytes_retransmit=9 bytes_invalid=0 send_seq=691 receive_seq=691 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028229 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000023 bytes_write=1095 bytes_read=5418 bytes_retransmit=0 bytes_invalid=0 send_seq=157 receive_seq=157 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000202 adj=49996811 Octopus_Max: temp=38.6 Pi: temp=38.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.9 bed_core: temp=26.8 barrow: temp=-110.0 sysload=0.20 cputime=7.560 memavail=7498512 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1795.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9640 bytes_read=25358 bytes_retransmit=9 bytes_invalid=0 send_seq=692 receive_seq=692 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028191 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000023 bytes_write=1101 bytes_read=5434 bytes_retransmit=0 bytes_invalid=0 send_seq=158 receive_seq=158 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000188 adj=49996910 Octopus_Max: temp=38.8 Pi: temp=37.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.20 cputime=7.572 memavail=7504400 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1796.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9646 bytes_read=25669 bytes_retransmit=9 bytes_invalid=0 send_seq=693 receive_seq=693 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028152 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000023 bytes_write=1107 bytes_read=5450 bytes_retransmit=0 bytes_invalid=0 send_seq=159 receive_seq=159 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000174 adj=49996757 Octopus_Max: temp=38.6 Pi: temp=37.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.20 cputime=7.585 memavail=7504388 print_time=50.352 buffer_time=0.417 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Attempting MCU 'mcu' reset command
Attempting MCU 'rpi' config_reset command
b'Got EOF when reading from device'
webhooks client 4123702368: Disconnected
Restarting printer
Start printer at Sat Apr 20 22:42:12 2024 (1713649332.0 1797.5)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999

[state_notify]

[gcode_macro STATE_NOTIFY_EXAMPLE]
description = Display the state_notify state
gcode = 
	{% set st = printer.state_notify %}
	{action_respond_info("state_notify: state=%s, timeout=%" % (st.state, st.timeout))}
=======================
Extruder max_extrude_ratio=2.078758
Config error
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 175, in _connect
    self._read_config()
  File "/home/pi/klipper/klippy/klippy.py", line 145, in _read_config
    pconfig.check_unused_options(config)
  File "/home/pi/klipper/klippy/configfile.py", line 303, in check_unused_options
    raise error("Section '%s' is not a valid config section"
configparser.Error: Section 'state_notify' is not a valid config section
webhooks client 4123837272: New connection
webhooks client 4123837272: Client info {'program': 'Moonraker', 'version': 'v0.8.0-325-g99b97af'}
Attempting MCU 'mcu' reset
Unable to issue reset command on MCU 'rpi'
webhooks client 4123837272: Disconnected
Restarting printer
Start printer at Sat Apr 20 22:42:32 2024 (1713649352.0 1817.5)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999

[gcode_macro STATE_NOTIFY_EXAMPLE]
description = Display the state_notify state
gcode = 
	{% set st = printer.state_notify %}
	{action_respond_info("state_notify: state=%s, timeout=%" % (st.state, st.timeout))}
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
webhooks client 4122802256: New connection
webhooks client 4122802256: Client info {'program': 'Moonraker', 'version': 'v0.8.0-325-g99b97af'}
Loaded MCU 'mcu' 112 commands (v0.12.0-169-g28faf814 / gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.34-4+rpi1+14) 2.34)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1_PB6_PB7=PB6,PB7 BUS_PINS_i2c1_PB8_PB9=PB8,PB9 BUS_PINS_i2c2_PB10_PB11=PB10,PB11 BUS_PINS_i2c3_PA8_PC9=PA8,PC9 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi2a=PC2,PC3,PB10 BUS_PINS_spi3a=PC11,PC12,PC10 BUS_PINS_spi4=PE13,PE14,PE12 BUS_PINS_spi5=PF8,PF9,PF7 BUS_PINS_spi5a=PH7,PF11,PH6 BUS_PINS_spi6=PG12,PG14,PG13 CLOCK_FREQ=400000000 MCU=stm32h723xx PWM_MAX=255 RESERVE_PINS_USB=PA11,PA12 RESERVE_PINS_crystal=PH0,PH1 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
mcu 'rpi': Starting connect
Loaded MCU 'rpi' 118 commands (v0.12.0-169-g28faf814 / gcc: (Raspbian 10.2.1-6+rpi1) 10.2.1 20210110 binutils: (GNU Binutils for Raspbian) 2.35.2)
MCU 'rpi' config: ADC_MAX=4095 CLOCK_FREQ=50000000 MCU=linux PCA9685_MAX=4096 PWM_MAX=32768 STATS_SUMSQ_BASE=256
mcu_temperature 'mcu' nominal base=-273.952569 slope=1618.577075
Sending MCU 'mcu' printer configuration...
Configured MCU 'mcu' (1024 moves)
Sending MCU 'rpi' printer configuration...
Configured MCU 'rpi' (1024 moves)
Starting heater checks for heater_bed
bed_mesh: generated points
Index |  Tool Adjusted  |   Probe
  0   | (40.0, 23.0)    | (10.0, 8.4)
  1   | (57.8, 23.0)    | (27.8, 8.4)
  2   | (75.5, 23.0)    | (45.5, 8.4)
  3   | (93.3, 23.0)    | (63.3, 8.4)
  4   | (111.1, 23.0)   | (81.1, 8.4)
  5   | (128.8, 23.0)   | (98.8, 8.4)
  6   | (146.6, 23.0)   | (116.6, 8.4)
  7   | (164.4, 23.0)   | (134.4, 8.4)
  8   | (182.2, 23.0)   | (152.2, 8.4)
  9   | (199.9, 23.0)   | (169.9, 8.4)
  10  | (199.9, 42.7)   | (169.9, 28.1)
  11  | (182.2, 42.7)   | (152.2, 28.1)
  12  | (164.4, 42.7)   | (134.4, 28.1)
  13  | (146.6, 42.7)   | (116.6, 28.1)
  14  | (128.9, 42.7)   | (98.9, 28.1)
  15  | (111.1, 42.7)   | (81.1, 28.1)
  16  | (93.3, 42.7)    | (63.3, 28.1)
  17  | (75.5, 42.7)    | (45.5, 28.1)
  18  | (57.8, 42.7)    | (27.8, 28.1)
  19  | (40.0, 42.7)    | (10.0, 28.1)
  20  | (40.0, 62.3)    | (10.0, 47.8)
  21  | (57.8, 62.3)    | (27.8, 47.8)
  22  | (75.5, 62.3)    | (45.5, 47.8)
  23  | (93.3, 62.3)    | (63.3, 47.8)
  24  | (111.1, 62.3)   | (81.1, 47.8)
  25  | (128.8, 62.3)   | (98.8, 47.8)
  26  | (146.6, 62.3)   | (116.6, 47.8)
  27  | (164.4, 62.3)   | (134.4, 47.8)
  28  | (182.2, 62.3)   | (152.2, 47.8)
  29  | (199.9, 62.3)   | (169.9, 47.8)
  30  | (199.9, 82.0)   | (169.9, 67.4)
  31  | (182.2, 82.0)   | (152.2, 67.4)
  32  | (164.4, 82.0)   | (134.4, 67.4)
  33  | (146.6, 82.0)   | (116.6, 67.4)
  34  | (128.9, 82.0)   | (98.9, 67.4)
  35  | (111.1, 82.0)   | (81.1, 67.4)
  36  | (93.3, 82.0)    | (63.3, 67.4)
  37  | (75.5, 82.0)    | (45.5, 67.4)
  38  | (57.8, 82.0)    | (27.8, 67.4)
  39  | (40.0, 82.0)    | (10.0, 67.4)
  40  | (40.0, 101.6)   | (10.0, 87.1)
  41  | (57.8, 101.6)   | (27.8, 87.1)
  42  | (75.5, 101.6)   | (45.5, 87.1)
  43  | (93.3, 101.6)   | (63.3, 87.1)
  44  | (111.1, 101.6)  | (81.1, 87.1)
  45  | (128.8, 101.6)  | (98.8, 87.1)
  46  | (146.6, 101.6)  | (116.6, 87.1)
  47  | (164.4, 101.6)  | (134.4, 87.1)
  48  | (182.2, 101.6)  | (152.2, 87.1)
  49  | (199.9, 101.6)  | (169.9, 87.1)
  50  | (199.9, 121.3)  | (169.9, 106.7)
  51  | (182.2, 121.3)  | (152.2, 106.7)
  52  | (164.4, 121.3)  | (134.4, 106.7)
  53  | (146.6, 121.3)  | (116.6, 106.7)
  54  | (128.9, 121.3)  | (98.9, 106.7)
  55  | (111.1, 121.3)  | (81.1, 106.7)
  56  | (93.3, 121.3)   | (63.3, 106.7)
  57  | (75.5, 121.3)   | (45.5, 106.7)
  58  | (57.8, 121.3)   | (27.8, 106.7)
  59  | (40.0, 121.3)   | (10.0, 106.7)
  60  | (40.0, 141.0)   | (10.0, 126.4)
  61  | (57.8, 141.0)   | (27.8, 126.4)
  62  | (75.5, 141.0)   | (45.5, 126.4)
  63  | (93.3, 141.0)   | (63.3, 126.4)
  64  | (111.1, 141.0)  | (81.1, 126.4)
  65  | (128.8, 141.0)  | (98.8, 126.4)
  66  | (146.6, 141.0)  | (116.6, 126.4)
  67  | (164.4, 141.0)  | (134.4, 126.4)
  68  | (182.2, 141.0)  | (152.2, 126.4)
  69  | (199.9, 141.0)  | (169.9, 126.4)
  70  | (199.9, 160.6)  | (169.9, 146.1)
  71  | (182.2, 160.6)  | (152.2, 146.1)
  72  | (164.4, 160.6)  | (134.4, 146.1)
  73  | (146.6, 160.6)  | (116.6, 146.1)
  74  | (128.9, 160.6)  | (98.9, 146.1)
  75  | (111.1, 160.6)  | (81.1, 146.1)
  76  | (93.3, 160.6)   | (63.3, 146.1)
  77  | (75.5, 160.6)   | (45.5, 146.1)
  78  | (57.8, 160.6)   | (27.8, 146.1)
  79  | (40.0, 160.6)   | (10.0, 146.1)
  80  | (40.0, 180.3)   | (10.0, 165.7)
  81  | (57.8, 180.3)   | (27.8, 165.7)
  82  | (75.5, 180.3)   | (45.5, 165.7)
  83  | (93.3, 180.3)   | (63.3, 165.7)
  84  | (111.1, 180.3)  | (81.1, 165.7)
  85  | (128.8, 180.3)  | (98.8, 165.7)
  86  | (146.6, 180.3)  | (116.6, 165.7)
  87  | (164.4, 180.3)  | (134.4, 165.7)
  88  | (182.2, 180.3)  | (152.2, 165.7)
  89  | (199.9, 180.3)  | (169.9, 165.7)
  90  | (199.9, 199.9)  | (169.9, 185.4)
  91  | (182.2, 199.9)  | (152.2, 185.4)
  92  | (164.4, 199.9)  | (134.4, 185.4)
  93  | (146.6, 199.9)  | (116.6, 185.4)
  94  | (128.9, 199.9)  | (98.9, 185.4)
  95  | (111.1, 199.9)  | (81.1, 185.4)
  96  | (93.3, 199.9)   | (63.3, 185.4)
  97  | (75.5, 199.9)   | (45.5, 185.4)
  98  | (57.8, 199.9)   | (27.8, 185.4)
  99  | (40.0, 199.9)   | (10.0, 185.4)

Printer is not ready
The klippy host software is attempting to connect.  Please
retry in a few moments.

Script running error
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/extras/gcode_button.py", line 41, in button_callback
    self.gcode.run_script(template.render())
  File "/home/pi/klipper/klippy/gcode.py", line 229, in run_script
    self._process_commands(script.split('\n'), need_ack=False)
  File "/home/pi/klipper/klippy/gcode.py", line 211, in _process_commands
    handler(gcmd)
  File "/home/pi/klipper/klippy/gcode.py", line 285, in cmd_default
    raise gcmd.error(self.printer.get_state_message()[0])
gcode.CommandError: 
Printer is not ready
The klippy host software is attempting to connect.  Please
retry in a few moments.


Printer is not ready
The klippy host software is attempting to connect.  Please
retry in a few moments.

Script running error
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/extras/gcode_button.py", line 41, in button_callback
    self.gcode.run_script(template.render())
  File "/home/pi/klipper/klippy/gcode.py", line 229, in run_script
    self._process_commands(script.split('\n'), need_ack=False)
  File "/home/pi/klipper/klippy/gcode.py", line 211, in _process_commands
    handler(gcmd)
  File "/home/pi/klipper/klippy/gcode.py", line 285, in cmd_default
    raise gcmd.error(self.printer.get_state_message()[0])
gcode.CommandError: 
Printer is not ready
The klippy host software is attempting to connect.  Please
retry in a few moments.

Starting heater checks for extruder
autotune_tmc set stepper_x pwm_freq=2
autotune_tmc stepper_x ncycles=219 pfdcycles=73
autotune_tmc set stepper_x tpfd=1
autotune_tmc set stepper_x tbl=1
autotune_tmc set stepper_x toff=1
autotune_tmc seting hysteresis based on 48.0 V
dcoilblank = 0.160000, dcoilsd = 0.015156
hysteresis = 42, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_x hstrt=7
autotune_tmc set stepper_x hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_x pwm_autoscale=True
autotune_tmc set stepper_x pwm_autograd=True
autotune_tmc set stepper_x pwm_grad=4
autotune_tmc set stepper_x pwm_ofs=10
autotune_tmc set stepper_x pwm_reg=15
autotune_tmc set stepper_x pwm_lim=4
autotune_tmc set stepper_x tpwmthrs=1048575
autotune_tmc set stepper_x en_pwm_mode=False
autotune_tmc set stepper_x tcoolthrs=391(24.0)
autotune_tmc set stepper_x sgt=1
autotune_tmc set stepper_x small_hysteresis=False
autotune_tmc set stepper_x semin=2
autotune_tmc set stepper_x semax=2
autotune_tmc set stepper_x seup=3
autotune_tmc set stepper_x sedn=2
autotune_tmc set stepper_x seimin=0
autotune_tmc set stepper_x sfilt=0
autotune_tmc set stepper_x iholddelay=12
autotune_tmc set stepper_x vhighfs=False
autotune_tmc set stepper_x vhighchm=False
autotune_tmc set stepper_x multistep_filt=True
autotune_tmc set stepper_x1 pwm_freq=2
autotune_tmc stepper_x1 ncycles=219 pfdcycles=73
autotune_tmc set stepper_x1 tpfd=1
autotune_tmc set stepper_x1 tbl=1
autotune_tmc set stepper_x1 toff=1
autotune_tmc seting hysteresis based on 48.0 V
dcoilblank = 0.160000, dcoilsd = 0.015156
hysteresis = 42, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_x1 hstrt=7
autotune_tmc set stepper_x1 hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_x1 pwm_autoscale=True
autotune_tmc set stepper_x1 pwm_autograd=True
autotune_tmc set stepper_x1 pwm_grad=4
autotune_tmc set stepper_x1 pwm_ofs=10
autotune_tmc set stepper_x1 pwm_reg=15
autotune_tmc set stepper_x1 pwm_lim=4
autotune_tmc set stepper_x1 tpwmthrs=1048575
autotune_tmc set stepper_x1 en_pwm_mode=False
autotune_tmc set stepper_x1 tcoolthrs=391(24.0)
autotune_tmc set stepper_x1 sgt=1
autotune_tmc set stepper_x1 small_hysteresis=False
autotune_tmc set stepper_x1 semin=2
autotune_tmc set stepper_x1 semax=2
autotune_tmc set stepper_x1 seup=3
autotune_tmc set stepper_x1 sedn=2
autotune_tmc set stepper_x1 seimin=0
autotune_tmc set stepper_x1 sfilt=0
autotune_tmc set stepper_x1 iholddelay=12
autotune_tmc set stepper_x1 vhighfs=False
autotune_tmc set stepper_x1 vhighchm=False
autotune_tmc set stepper_x1 multistep_filt=True
autotune_tmc set stepper_y pwm_freq=2
autotune_tmc stepper_y ncycles=219 pfdcycles=73
autotune_tmc set stepper_y tpfd=1
autotune_tmc set stepper_y tbl=1
autotune_tmc set stepper_y toff=1
autotune_tmc seting hysteresis based on 48.0 V
dcoilblank = 0.160000, dcoilsd = 0.015156
hysteresis = 42, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_y hstrt=7
autotune_tmc set stepper_y hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_y pwm_autoscale=True
autotune_tmc set stepper_y pwm_autograd=True
autotune_tmc set stepper_y pwm_grad=4
autotune_tmc set stepper_y pwm_ofs=10
autotune_tmc set stepper_y pwm_reg=15
autotune_tmc set stepper_y pwm_lim=4
autotune_tmc set stepper_y tpwmthrs=1048575
autotune_tmc set stepper_y en_pwm_mode=False
autotune_tmc set stepper_y tcoolthrs=391(24.0)
autotune_tmc set stepper_y sgt=1
autotune_tmc set stepper_y small_hysteresis=False
autotune_tmc set stepper_y semin=2
autotune_tmc set stepper_y semax=2
autotune_tmc set stepper_y seup=3
autotune_tmc set stepper_y sedn=2
autotune_tmc set stepper_y seimin=0
autotune_tmc set stepper_y sfilt=0
autotune_tmc set stepper_y iholddelay=12
autotune_tmc set stepper_y vhighfs=False
autotune_tmc set stepper_y vhighchm=False
autotune_tmc set stepper_y multistep_filt=True
autotune_tmc set stepper_y1 pwm_freq=2
autotune_tmc stepper_y1 ncycles=219 pfdcycles=73
autotune_tmc set stepper_y1 tpfd=1
autotune_tmc set stepper_y1 tbl=1
autotune_tmc set stepper_y1 toff=1
autotune_tmc seting hysteresis based on 48.0 V
dcoilblank = 0.160000, dcoilsd = 0.015156
hysteresis = 42, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_y1 hstrt=7
autotune_tmc set stepper_y1 hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_y1 pwm_autoscale=True
autotune_tmc set stepper_y1 pwm_autograd=True
autotune_tmc set stepper_y1 pwm_grad=4
autotune_tmc set stepper_y1 pwm_ofs=10
autotune_tmc set stepper_y1 pwm_reg=15
autotune_tmc set stepper_y1 pwm_lim=4
autotune_tmc set stepper_y1 tpwmthrs=1048575
autotune_tmc set stepper_y1 en_pwm_mode=False
autotune_tmc set stepper_y1 tcoolthrs=391(24.0)
autotune_tmc set stepper_y1 sgt=1
autotune_tmc set stepper_y1 small_hysteresis=False
autotune_tmc set stepper_y1 semin=2
autotune_tmc set stepper_y1 semax=2
autotune_tmc set stepper_y1 seup=3
autotune_tmc set stepper_y1 sedn=2
autotune_tmc set stepper_y1 seimin=0
autotune_tmc set stepper_y1 sfilt=0
autotune_tmc set stepper_y1 iholddelay=12
autotune_tmc set stepper_y1 vhighfs=False
autotune_tmc set stepper_y1 vhighchm=False
autotune_tmc set stepper_y1 multistep_filt=True
autotune_tmc set stepper_z pwm_freq=2
autotune_tmc stepper_z ncycles=219 pfdcycles=73
autotune_tmc set stepper_z tbl=1
autotune_tmc set stepper_z toff=1
autotune_tmc seting hysteresis based on 24.0 V
dcoilblank = 0.080000, dcoilsd = 0.013495
hysteresis = 22, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_z hstrt=7
autotune_tmc set stepper_z hend=9
autotune_tmc set stepper_z sgthrs=40
autotune_tmc using max PWM speed 43.108253
autotune_tmc set stepper_z pwm_autoscale=True
autotune_tmc set stepper_z pwm_autograd=True
autotune_tmc set stepper_z pwm_grad=7
autotune_tmc set stepper_z pwm_ofs=18
autotune_tmc set stepper_z pwm_reg=15
autotune_tmc set stepper_z pwm_lim=4
autotune_tmc set stepper_z tpwmthrs=1048575
autotune_tmc set stepper_z en_spreadcycle=True
autotune_tmc set stepper_z tcoolthrs=391(2.4)
autotune_tmc set stepper_z semin=2
autotune_tmc set stepper_z semax=2
autotune_tmc set stepper_z seup=3
autotune_tmc set stepper_z sedn=2
autotune_tmc set stepper_z seimin=0
autotune_tmc set stepper_z iholddelay=12
autotune_tmc set stepper_z multistep_filt=True
autotune_tmc set stepper_z1 pwm_freq=2
autotune_tmc stepper_z1 ncycles=219 pfdcycles=73
autotune_tmc set stepper_z1 tbl=1
autotune_tmc set stepper_z1 toff=1
autotune_tmc seting hysteresis based on 24.0 V
dcoilblank = 0.080000, dcoilsd = 0.013495
hysteresis = 22, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_z1 hstrt=7
autotune_tmc set stepper_z1 hend=9
autotune_tmc set stepper_z1 sgthrs=40
autotune_tmc using max PWM speed 43.108253
autotune_tmc set stepper_z1 pwm_autoscale=True
autotune_tmc set stepper_z1 pwm_autograd=True
autotune_tmc set stepper_z1 pwm_grad=7
autotune_tmc set stepper_z1 pwm_ofs=18
autotune_tmc set stepper_z1 pwm_reg=15
autotune_tmc set stepper_z1 pwm_lim=4
autotune_tmc set stepper_z1 tpwmthrs=1048575
autotune_tmc set stepper_z1 en_spreadcycle=True
autotune_tmc set stepper_z1 tcoolthrs=391(2.4)
autotune_tmc set stepper_z1 semin=2
autotune_tmc set stepper_z1 semax=2
autotune_tmc set stepper_z1 seup=3
autotune_tmc set stepper_z1 sedn=2
autotune_tmc set stepper_z1 seimin=0
autotune_tmc set stepper_z1 iholddelay=12
autotune_tmc set stepper_z1 multistep_filt=True
autotune_tmc set stepper_z2 pwm_freq=2
autotune_tmc stepper_z2 ncycles=219 pfdcycles=73
autotune_tmc set stepper_z2 tbl=1
autotune_tmc set stepper_z2 toff=1
autotune_tmc seting hysteresis based on 24.0 V
dcoilblank = 0.080000, dcoilsd = 0.013495
hysteresis = 22, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_z2 hstrt=7
autotune_tmc set stepper_z2 hend=9
autotune_tmc set stepper_z2 sgthrs=40
autotune_tmc using max PWM speed 43.108253
autotune_tmc set stepper_z2 pwm_autoscale=True
autotune_tmc set stepper_z2 pwm_autograd=True
autotune_tmc set stepper_z2 pwm_grad=7
autotune_tmc set stepper_z2 pwm_ofs=18
autotune_tmc set stepper_z2 pwm_reg=15
autotune_tmc set stepper_z2 pwm_lim=4
autotune_tmc set stepper_z2 tpwmthrs=1048575
autotune_tmc set stepper_z2 en_spreadcycle=True
autotune_tmc set stepper_z2 tcoolthrs=391(2.4)
autotune_tmc set stepper_z2 semin=2
autotune_tmc set stepper_z2 semax=2
autotune_tmc set stepper_z2 seup=3
autotune_tmc set stepper_z2 sedn=2
autotune_tmc set stepper_z2 seimin=0
autotune_tmc set stepper_z2 iholddelay=12
autotune_tmc set stepper_z2 multistep_filt=True
Stats 1821.6: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=8855 bytes_read=11925 bytes_retransmit=9 bytes_invalid=0 send_seq=544 receive_seq=544 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400025737 rpi: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=831 bytes_read=4658 bytes_retransmit=0 bytes_invalid=0 send_seq=113 receive_seq=113 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49997628 adj=49989371 Octopus_Max: temp=38.8 Pi: temp=36.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.8 barrow: temp=-103.8 sysload=0.20 cputime=10.347 memavail=7503388 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
webhooks: registering remote method 'shutdown_machine' for connection id: 4122802256
webhooks: registering remote method 'reboot_machine' for connection id: 4122802256
webhooks: registering remote method 'pause_job_queue' for connection id: 4122802256
webhooks: registering remote method 'start_job_queue' for connection id: 4122802256
webhooks: registering remote method 'set_device_power' for connection id: 4122802256
Stats 1822.6: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000009 mcu_task_stddev=0.000065 bytes_write=8861 bytes_read=12235 bytes_retransmit=9 bytes_invalid=0 send_seq=545 receive_seq=545 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400027663 rpi: mcu_awake=0.003 mcu_task_avg=0.000020 mcu_task_stddev=0.000011 bytes_write=837 bytes_read=4688 bytes_retransmit=0 bytes_invalid=0 send_seq=114 receive_seq=114 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49998936 adj=49997139 Octopus_Max: temp=38.8 Pi: temp=37.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.20 cputime=10.392 memavail=7496748 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1823.6: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000009 mcu_task_stddev=0.000065 bytes_write=8867 bytes_read=12503 bytes_retransmit=9 bytes_invalid=0 send_seq=546 receive_seq=546 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029733 rpi: mcu_awake=0.003 mcu_task_avg=0.000020 mcu_task_stddev=0.000011 bytes_write=843 bytes_read=4704 bytes_retransmit=0 bytes_invalid=0 send_seq=115 receive_seq=115 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999627 adj=49998345 Octopus_Max: temp=39.0 Pi: temp=37.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.8 barrow: temp=-110.0 sysload=0.20 cputime=10.419 memavail=7496752 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1824.6: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000009 mcu_task_stddev=0.000065 bytes_write=8873 bytes_read=12814 bytes_retransmit=9 bytes_invalid=0 send_seq=547 receive_seq=547 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400030169 rpi: mcu_awake=0.003 mcu_task_avg=0.000020 mcu_task_stddev=0.000011 bytes_write=849 bytes_read=4720 bytes_retransmit=0 bytes_invalid=0 send_seq=116 receive_seq=116 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000104 adj=49998482 Octopus_Max: temp=38.8 Pi: temp=37.5  heater_bed: target=0 temp=26.4 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-110.0 sysload=0.20 cputime=10.447 memavail=7496752 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1825.6: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000009 mcu_task_stddev=0.000065 bytes_write=8879 bytes_read=13111 bytes_retransmit=9 bytes_invalid=0 send_seq=548 receive_seq=548 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400030221 rpi: mcu_awake=0.003 mcu_task_avg=0.000020 mcu_task_stddev=0.000011 bytes_write=855 bytes_read=4736 bytes_retransmit=0 bytes_invalid=0 send_seq=117 receive_seq=117 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000221 adj=49998795 Octopus_Max: temp=38.9 Pi: temp=37.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.9 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.20 cputime=10.475 memavail=7496752 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 1826.6: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000009 mcu_task_stddev=0.000065 bytes_write=8885 bytes_read=13379 bytes_retransmit=9 bytes_invalid=0 send_seq=549 receive_seq=549 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029711 rpi: mcu_awake=0.003 mcu_task_avg=0.000020 mcu_task_stddev=0.000011 bytes_write=861 bytes_read=4752 bytes_retransmit=0 bytes_invalid=0 send_seq=118 receive_seq=118 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000291 adj=49998456 Octopus_Max: temp=38.9 Pi: temp=37.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.8 barrow: temp=-110.0 sysload=0.18 cputime=10.498 memavail=7497368 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1827.6: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=8891 bytes_read=13704 bytes_retransmit=9 bytes_invalid=0 send_seq=550 receive_seq=550 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029167 rpi: mcu_awake=0.001 mcu_task_avg=0.000015 mcu_task_stddev=0.000016 bytes_write=867 bytes_read=4781 bytes_retransmit=0 bytes_invalid=0 send_seq=119 receive_seq=119 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000135 adj=49998328 Octopus_Max: temp=39.1 Pi: temp=37.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.18 cputime=10.510 memavail=7496740 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1828.6: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=8897 bytes_read=13997 bytes_retransmit=9 bytes_invalid=0 send_seq=551 receive_seq=551 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028780 rpi: mcu_awake=0.001 mcu_task_avg=0.000015 mcu_task_stddev=0.000016 bytes_write=873 bytes_read=4797 bytes_retransmit=0 bytes_invalid=0 send_seq=120 receive_seq=120 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000041 adj=49997632 Octopus_Max: temp=39.0 Pi: temp=37.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.9 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.18 cputime=10.522 memavail=7496740 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1829.6: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=8903 bytes_read=14256 bytes_retransmit=9 bytes_invalid=0 send_seq=552 receive_seq=552 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028655 rpi: mcu_awake=0.001 mcu_task_avg=0.000015 mcu_task_stddev=0.000016 bytes_write=885 bytes_read=4829 bytes_retransmit=0 bytes_invalid=0 send_seq=122 receive_seq=122 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000051 adj=49997203 Octopus_Max: temp=38.8 Pi: temp=37.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-110.0 sysload=0.18 cputime=10.535 memavail=7496740 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1830.6: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=8909 bytes_read=14567 bytes_retransmit=9 bytes_invalid=0 send_seq=553 receive_seq=553 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028479 rpi: mcu_awake=0.001 mcu_task_avg=0.000015 mcu_task_stddev=0.000016 bytes_write=891 bytes_read=4845 bytes_retransmit=0 bytes_invalid=0 send_seq=123 receive_seq=123 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000039 adj=49997105 Octopus_Max: temp=38.8 Pi: temp=38.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.9 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.18 cputime=10.547 memavail=7496740 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1831.6: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=8915 bytes_read=14864 bytes_retransmit=9 bytes_invalid=0 send_seq=554 receive_seq=554 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028378 rpi: mcu_awake=0.001 mcu_task_avg=0.000015 mcu_task_stddev=0.000016 bytes_write=897 bytes_read=4861 bytes_retransmit=0 bytes_invalid=0 send_seq=124 receive_seq=124 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000100 adj=49996986 Octopus_Max: temp=39.0 Pi: temp=37.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.17 cputime=10.567 memavail=7496740 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1832.6: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=8921 bytes_read=15146 bytes_retransmit=9 bytes_invalid=0 send_seq=555 receive_seq=555 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028534 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000012 bytes_write=903 bytes_read=4890 bytes_retransmit=0 bytes_invalid=0 send_seq=125 receive_seq=125 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000159 adj=49997143 Octopus_Max: temp=38.9 Pi: temp=37.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.9 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.17 cputime=10.595 memavail=7496516 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1833.6: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=8927 bytes_read=15457 bytes_retransmit=9 bytes_invalid=0 send_seq=556 receive_seq=556 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028695 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000012 bytes_write=909 bytes_read=4906 bytes_retransmit=0 bytes_invalid=0 send_seq=126 receive_seq=126 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000199 adj=49997153 Octopus_Max: temp=39.0 Pi: temp=37.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.17 cputime=10.623 memavail=7496516 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1834.6: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=8933 bytes_read=15754 bytes_retransmit=9 bytes_invalid=0 send_seq=557 receive_seq=557 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028747 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000012 bytes_write=915 bytes_read=4922 bytes_retransmit=0 bytes_invalid=0 send_seq=127 receive_seq=127 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000258 adj=49997096 Octopus_Max: temp=39.0 Pi: temp=36.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.9 barrow: temp=-119.3 sysload=0.17 cputime=10.652 memavail=7496516 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1835.6: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=8939 bytes_read=16022 bytes_retransmit=9 bytes_invalid=0 send_seq=558 receive_seq=558 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028934 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000012 bytes_write=921 bytes_read=4938 bytes_retransmit=0 bytes_invalid=0 send_seq=128 receive_seq=128 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000303 adj=49997208 Octopus_Max: temp=38.9 Pi: temp=36.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.17 cputime=10.679 memavail=7496516 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1836.6: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=8945 bytes_read=16333 bytes_retransmit=9 bytes_invalid=0 send_seq=559 receive_seq=559 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028885 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000012 bytes_write=927 bytes_read=4954 bytes_retransmit=0 bytes_invalid=0 send_seq=129 receive_seq=129 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000304 adj=49997171 Octopus_Max: temp=38.9 Pi: temp=37.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-103.8 sysload=0.16 cputime=10.707 memavail=7496516 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 1837.6: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=8951 bytes_read=16644 bytes_retransmit=9 bytes_invalid=0 send_seq=560 receive_seq=560 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028860 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000022 bytes_write=933 bytes_read=4983 bytes_retransmit=0 bytes_invalid=0 send_seq=130 receive_seq=130 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000293 adj=49997086 Octopus_Max: temp=39.0 Pi: temp=37.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-103.8 sysload=0.16 cputime=10.735 memavail=7496272 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1838.6: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=8957 bytes_read=16912 bytes_retransmit=9 bytes_invalid=0 send_seq=561 receive_seq=561 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028787 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000022 bytes_write=939 bytes_read=4999 bytes_retransmit=0 bytes_invalid=0 send_seq=131 receive_seq=131 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000284 adj=49996950 Octopus_Max: temp=38.9 Pi: temp=37.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.9 bed_core: temp=26.8 barrow: temp=-110.0 sysload=0.16 cputime=10.762 memavail=7496032 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1839.6: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=8963 bytes_read=17215 bytes_retransmit=9 bytes_invalid=0 send_seq=562 receive_seq=562 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028706 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000022 bytes_write=945 bytes_read=5015 bytes_retransmit=0 bytes_invalid=0 send_seq=132 receive_seq=132 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000299 adj=49996884 Octopus_Max: temp=39.0 Pi: temp=37.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.9 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.16 cputime=10.792 memavail=7496032 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1840.6: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=8969 bytes_read=17506 bytes_retransmit=9 bytes_invalid=0 send_seq=563 receive_seq=563 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028656 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000022 bytes_write=951 bytes_read=5031 bytes_retransmit=0 bytes_invalid=0 send_seq=133 receive_seq=133 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000286 adj=49996972 Octopus_Max: temp=39.0 Pi: temp=37.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.9 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.16 cputime=10.821 memavail=7496032 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1841.6: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=8975 bytes_read=17788 bytes_retransmit=9 bytes_invalid=0 send_seq=564 receive_seq=564 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028597 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000022 bytes_write=957 bytes_read=5047 bytes_retransmit=0 bytes_invalid=0 send_seq=134 receive_seq=134 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000284 adj=49996872 Octopus_Max: temp=39.0 Pi: temp=37.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.14 cputime=10.849 memavail=7495780 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1842.6: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=8981 bytes_read=18114 bytes_retransmit=9 bytes_invalid=0 send_seq=565 receive_seq=565 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028550 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=963 bytes_read=5076 bytes_retransmit=0 bytes_invalid=0 send_seq=135 receive_seq=135 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000253 adj=49996863 Octopus_Max: temp=38.9 Pi: temp=36.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.9 bed_core: temp=26.8 barrow: temp=-110.0 sysload=0.14 cputime=10.875 memavail=7488728 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 1843.6: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=8987 bytes_read=18396 bytes_retransmit=9 bytes_invalid=0 send_seq=566 receive_seq=566 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028424 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=969 bytes_read=5092 bytes_retransmit=0 bytes_invalid=0 send_seq=136 receive_seq=136 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000216 adj=49996670 Octopus_Max: temp=39.1 Pi: temp=37.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.14 cputime=10.887 memavail=7494628 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1844.6: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=8993 bytes_read=18678 bytes_retransmit=9 bytes_invalid=0 send_seq=567 receive_seq=567 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028323 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=975 bytes_read=5108 bytes_retransmit=0 bytes_invalid=0 send_seq=137 receive_seq=137 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000185 adj=49996547 Octopus_Max: temp=39.1 Pi: temp=37.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.14 cputime=10.899 memavail=7494628 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1845.6: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=8999 bytes_read=18990 bytes_retransmit=9 bytes_invalid=0 send_seq=568 receive_seq=568 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028240 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=981 bytes_read=5124 bytes_retransmit=0 bytes_invalid=0 send_seq=138 receive_seq=138 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000162 adj=49996457 Octopus_Max: temp=39.1 Pi: temp=37.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.9 barrow: temp=-119.3 sysload=0.14 cputime=10.911 memavail=7494628 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1846.6: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9005 bytes_read=19272 bytes_retransmit=9 bytes_invalid=0 send_seq=569 receive_seq=569 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028164 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=987 bytes_read=5140 bytes_retransmit=0 bytes_invalid=0 send_seq=139 receive_seq=139 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000140 adj=49996421 Octopus_Max: temp=39.1 Pi: temp=37.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.9 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.13 cputime=10.922 memavail=7494628 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1847.6: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9011 bytes_read=19568 bytes_retransmit=9 bytes_invalid=0 send_seq=570 receive_seq=570 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028111 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000012 bytes_write=993 bytes_read=5169 bytes_retransmit=0 bytes_invalid=0 send_seq=140 receive_seq=140 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000125 adj=49996393 Octopus_Max: temp=39.1 Pi: temp=37.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.13 cputime=10.938 memavail=7494628 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1848.6: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9017 bytes_read=19880 bytes_retransmit=9 bytes_invalid=0 send_seq=571 receive_seq=571 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028139 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000012 bytes_write=999 bytes_read=5185 bytes_retransmit=0 bytes_invalid=0 send_seq=141 receive_seq=141 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000145 adj=49996393 Octopus_Max: temp=39.2 Pi: temp=37.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-110.0 sysload=0.13 cputime=10.967 memavail=7494176 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1849.6: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9023 bytes_read=20162 bytes_retransmit=9 bytes_invalid=0 send_seq=572 receive_seq=572 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028164 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000012 bytes_write=1005 bytes_read=5201 bytes_retransmit=0 bytes_invalid=0 send_seq=142 receive_seq=142 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000158 adj=49996566 Octopus_Max: temp=39.1 Pi: temp=37.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.13 cputime=10.996 memavail=7494216 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1850.6: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9029 bytes_read=20433 bytes_retransmit=9 bytes_invalid=0 send_seq=573 receive_seq=573 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028194 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000012 bytes_write=1011 bytes_read=5217 bytes_retransmit=0 bytes_invalid=0 send_seq=143 receive_seq=143 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000169 adj=49996653 Octopus_Max: temp=39.1 Pi: temp=36.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.13 cputime=11.025 memavail=7494216 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1851.6: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9035 bytes_read=20742 bytes_retransmit=9 bytes_invalid=0 send_seq=574 receive_seq=574 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028724 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000012 bytes_write=1017 bytes_read=5233 bytes_retransmit=0 bytes_invalid=0 send_seq=144 receive_seq=144 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000176 adj=49996700 Octopus_Max: temp=39.0 Pi: temp=36.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.9 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.12 cputime=11.054 memavail=7494216 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.4 pwm=0.000
Stats 1852.6: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9041 bytes_read=21038 bytes_retransmit=9 bytes_invalid=0 send_seq=575 receive_seq=575 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028656 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000021 bytes_write=1023 bytes_read=5262 bytes_retransmit=0 bytes_invalid=0 send_seq=145 receive_seq=145 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000182 adj=49996230 Octopus_Max: temp=39.1 Pi: temp=37.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.12 cputime=11.081 memavail=7494216 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1853.6: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9047 bytes_read=21320 bytes_retransmit=9 bytes_invalid=0 send_seq=576 receive_seq=576 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028607 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000021 bytes_write=1029 bytes_read=5278 bytes_retransmit=0 bytes_invalid=0 send_seq=146 receive_seq=146 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000186 adj=49996428 Octopus_Max: temp=39.0 Pi: temp=37.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.9 bed_core: temp=26.8 barrow: temp=-110.0 sysload=0.12 cputime=11.109 memavail=7494216 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1854.6: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9053 bytes_read=21632 bytes_retransmit=9 bytes_invalid=0 send_seq=577 receive_seq=577 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028553 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000021 bytes_write=1035 bytes_read=5294 bytes_retransmit=0 bytes_invalid=0 send_seq=147 receive_seq=147 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000192 adj=49996558 Octopus_Max: temp=39.0 Pi: temp=36.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.9 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.12 cputime=11.137 memavail=7494216 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1855.6: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9059 bytes_read=21914 bytes_retransmit=9 bytes_invalid=0 send_seq=578 receive_seq=578 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028515 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000021 bytes_write=1041 bytes_read=5310 bytes_retransmit=0 bytes_invalid=0 send_seq=148 receive_seq=148 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000192 adj=49996670 Octopus_Max: temp=39.2 Pi: temp=37.0  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.12 cputime=11.165 memavail=7494228 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 1856.6: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9065 bytes_read=22196 bytes_retransmit=9 bytes_invalid=0 send_seq=579 receive_seq=579 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028568 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000021 bytes_write=1047 bytes_read=5326 bytes_retransmit=0 bytes_invalid=0 send_seq=149 receive_seq=149 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000190 adj=49996697 Octopus_Max: temp=39.0 Pi: temp=37.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.9 bed_core: temp=26.7 barrow: temp=-110.0 sysload=0.11 cputime=11.193 memavail=7494228 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Starting Klippy...
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/printer_data/config/printer.cfg', '-l', '/home/pi/printer_data/logs/klippy.log', '-I', '/home/pi/printer_data/comms/klippy.serial', '-a', '/home/pi/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-169-g28faf814-dirty'
Untracked files: klippy/extras/autotune_tmc.py, klippy/extras/beacon.py, klippy/extras/gcode_shell_command.py, klippy/extras/led_interpolate.py, klippy/extras/linear_movement_vibrations.py, klippy/extras/loop_macro.py, klippy/extras/motor_constants.py, klippy/extras/ratos_homing.py, klippy/extras/settling_probe.py, klippy/extras/state_notify.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Mar 12 2021, 04:06:34) \n[GCC 10.2.1 20210110]'
Start printer at Sat Apr 20 22:48:13 2024 (1713649693.1 2158.6)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999

[gcode_macro STATE_NOTIFY_EXAMPLE]
description = Display the state_notify state
gcode = 
	{% set st = printer.state_notify %}
	{action_respond_info("state_notify: state=%s, timeout=%" % (st.state, st.timeout))}
=======================
Extruder max_extrude_ratio=2.078758
Config error
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 175, in _connect
    self._read_config()
  File "/home/pi/klipper/klippy/klippy.py", line 145, in _read_config
    pconfig.check_unused_options(config)
  File "/home/pi/klipper/klippy/configfile.py", line 303, in check_unused_options
    raise error("Section '%s' is not a valid config section"
configparser.Error: Section 'gcode_shell_command generate_shaper_graph_x' is not a valid config section
webhooks client 4130110768: New connection
webhooks client 4130110768: Client info {'program': 'Moonraker', 'version': 'v0.8.0-325-g99b97af'}
Attempting MCU 'mcu' reset
Unable to issue reset command on MCU 'rpi'
webhooks client 4130110768: Disconnected
Restarting printer
Start printer at Sat Apr 20 22:49:26 2024 (1713649766.0 2231.5)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999

[gcode_macro STATE_NOTIFY_EXAMPLE]
description = Display the state_notify state
gcode = 
	{% set st = printer.state_notify %}
	{action_respond_info("state_notify: state=%s, timeout=%" % (st.state, st.timeout))}
=======================
Extruder max_extrude_ratio=2.078758
Config error
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 175, in _connect
    self._read_config()
  File "/home/pi/klipper/klippy/klippy.py", line 145, in _read_config
    pconfig.check_unused_options(config)
  File "/home/pi/klipper/klippy/configfile.py", line 303, in check_unused_options
    raise error("Section '%s' is not a valid config section"
configparser.Error: Section 'gcode_shell_command generate_shaper_graph_x' is not a valid config section
webhooks client 4124079392: New connection
webhooks client 4124079392: Client info {'program': 'Moonraker', 'version': 'v0.8.0-325-g99b97af'}
Starting Klippy...
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/printer_data/config/printer.cfg', '-l', '/home/pi/printer_data/logs/klippy.log', '-I', '/home/pi/printer_data/comms/klippy.serial', '-a', '/home/pi/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-169-g28faf814-dirty'
Untracked files: klippy/extras/autotune_tmc.py, klippy/extras/beacon.py, klippy/extras/gcode_shell_command.py, klippy/extras/led_interpolate.py, klippy/extras/linear_movement_vibrations.py, klippy/extras/loop_macro.py, klippy/extras/motor_constants.py, klippy/extras/ratos_homing.py, klippy/extras/settling_probe.py, klippy/extras/state_notify.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Mar 12 2021, 04:06:34) \n[GCC 10.2.1 20210110]'
Start printer at Sat Apr 20 22:50:12 2024 (1713649812.2 2277.7)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999

[gcode_macro STATE_NOTIFY_EXAMPLE]
description = Display the state_notify state
gcode = 
	{% set st = printer.state_notify %}
	{action_respond_info("state_notify: state=%s, timeout=%" % (st.state, st.timeout))}
=======================
Extruder max_extrude_ratio=2.078758
Config error
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 175, in _connect
    self._read_config()
  File "/home/pi/klipper/klippy/klippy.py", line 145, in _read_config
    pconfig.check_unused_options(config)
  File "/home/pi/klipper/klippy/configfile.py", line 303, in check_unused_options
    raise error("Section '%s' is not a valid config section"
configparser.Error: Section 'gcode_shell_command generate_shaper_graph_x' is not a valid config section
webhooks client 4133420336: New connection
webhooks client 4133420336: Client info {'program': 'Moonraker', 'version': 'v0.8.0-325-g99b97af'}
Starting Klippy...
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/printer_data/config/printer.cfg', '-l', '/home/pi/printer_data/logs/klippy.log', '-I', '/home/pi/printer_data/comms/klippy.serial', '-a', '/home/pi/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-169-g28faf814-dirty'
Untracked files: klippy/extras/autotune_tmc.py, klippy/extras/beacon.py, klippy/extras/linear_movement_vibrations.py, klippy/extras/motor_constants.py, klippy/extras/ratos_homing.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Mar 12 2021, 04:06:34) \n[GCC 10.2.1 20210110]'
Start printer at Sat Apr 20 22:50:37 2024 (1713649837.8 2303.3)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999

[gcode_macro STATE_NOTIFY_EXAMPLE]
description = Display the state_notify state
gcode = 
	{% set st = printer.state_notify %}
	{action_respond_info("state_notify: state=%s, timeout=%" % (st.state, st.timeout))}
=======================
Extruder max_extrude_ratio=2.078758
Config error
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 175, in _connect
    self._read_config()
  File "/home/pi/klipper/klippy/klippy.py", line 145, in _read_config
    pconfig.check_unused_options(config)
  File "/home/pi/klipper/klippy/configfile.py", line 303, in check_unused_options
    raise error("Section '%s' is not a valid config section"
configparser.Error: Section 'gcode_shell_command generate_shaper_graph_x' is not a valid config section
webhooks client 4127223088: New connection
webhooks client 4127223088: Client info {'program': 'Moonraker', 'version': 'v0.8.0-325-g99b97af'}
Attempting MCU 'mcu' reset
Unable to issue reset command on MCU 'rpi'
webhooks client 4127223088: Disconnected
Restarting printer
Start printer at Sat Apr 20 22:50:56 2024 (1713649856.3 2321.8)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999

[gcode_macro STATE_NOTIFY_EXAMPLE]
description = Display the state_notify state
gcode = 
	{% set st = printer.state_notify %}
	{action_respond_info("state_notify: state=%s, timeout=%" % (st.state, st.timeout))}
=======================
Extruder max_extrude_ratio=2.078758
Config error
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 175, in _connect
    self._read_config()
  File "/home/pi/klipper/klippy/klippy.py", line 145, in _read_config
    pconfig.check_unused_options(config)
  File "/home/pi/klipper/klippy/configfile.py", line 303, in check_unused_options
    raise error("Section '%s' is not a valid config section"
configparser.Error: Section 'gcode_shell_command generate_shaper_graph_x' is not a valid config section
webhooks client 4121338184: New connection
webhooks client 4121338184: Client info {'program': 'Moonraker', 'version': 'v0.8.0-325-g99b97af'}
webhooks client 4121338184: Disconnected
Starting Klippy...
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/printer_data/config/printer.cfg', '-l', '/home/pi/printer_data/logs/klippy.log', '-I', '/home/pi/printer_data/comms/klippy.serial', '-a', '/home/pi/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-169-g28faf814-dirty'
Untracked files: klippy/extras/autotune_tmc.py, klippy/extras/beacon.py, klippy/extras/linear_movement_vibrations.py, klippy/extras/motor_constants.py, klippy/extras/ratos_homing.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Mar 12 2021, 04:06:34) \n[GCC 10.2.1 20210110]'
Start printer at Sat Apr 20 22:51:52 2024 (1713649912.9 22.5)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999

[gcode_macro STATE_NOTIFY_EXAMPLE]
description = Display the state_notify state
gcode = 
	{% set st = printer.state_notify %}
	{action_respond_info("state_notify: state=%s, timeout=%" % (st.state, st.timeout))}
=======================
Extruder max_extrude_ratio=2.078758
Config error
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 175, in _connect
    self._read_config()
  File "/home/pi/klipper/klippy/klippy.py", line 145, in _read_config
    pconfig.check_unused_options(config)
  File "/home/pi/klipper/klippy/configfile.py", line 303, in check_unused_options
    raise error("Section '%s' is not a valid config section"
configparser.Error: Section 'gcode_shell_command generate_shaper_graph_x' is not a valid config section
webhooks client 4130549496: New connection
webhooks client 4130549496: Client info {'program': 'Moonraker', 'version': 'v0.8.0-325-g99b97af'}
Attempting MCU 'mcu' reset
Unable to issue reset command on MCU 'rpi'
webhooks client 4130549496: Disconnected
Restarting printer
Start printer at Sat Apr 20 22:52:06 2024 (1713649926.3 35.9)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999

[gcode_macro STATE_NOTIFY_EXAMPLE]
description = Display the state_notify state
gcode = 
	{% set st = printer.state_notify %}
	{action_respond_info("state_notify: state=%s, timeout=%" % (st.state, st.timeout))}
=======================
Extruder max_extrude_ratio=2.078758
Config error
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 175, in _connect
    self._read_config()
  File "/home/pi/klipper/klippy/klippy.py", line 145, in _read_config
    pconfig.check_unused_options(config)
  File "/home/pi/klipper/klippy/configfile.py", line 303, in check_unused_options
    raise error("Section '%s' is not a valid config section"
configparser.Error: Section 'gcode_shell_command generate_shaper_graph_x' is not a valid config section
webhooks client 4124502576: New connection
webhooks client 4124502576: Client info {'program': 'Moonraker', 'version': 'v0.8.0-325-g99b97af'}
Attempting MCU 'mcu' reset
Unable to issue reset command on MCU 'rpi'
webhooks client 4124502576: Disconnected
Restarting printer
Start printer at Sat Apr 20 22:54:25 2024 (1713650065.7 162.9)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999

[gcode_macro STATE_NOTIFY_EXAMPLE]
description = Display the state_notify state
gcode = 
	{% set st = printer.state_notify %}
	{action_respond_info("state_notify: state=%s, timeout=%" % (st.state, st.timeout))}
=======================
Extruder max_extrude_ratio=2.078758
Config error
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 175, in _connect
    self._read_config()
  File "/home/pi/klipper/klippy/klippy.py", line 145, in _read_config
    pconfig.check_unused_options(config)
  File "/home/pi/klipper/klippy/configfile.py", line 303, in check_unused_options
    raise error("Section '%s' is not a valid config section"
configparser.Error: Section 'gcode_shell_command generate_shaper_graph_x' is not a valid config section
webhooks client 4125273728: New connection
webhooks client 4125273728: Client info {'program': 'Moonraker', 'version': 'v0.8.0-325-g99b97af'}
webhooks client 4125273728: Disconnected
Starting Klippy...
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/printer_data/config/printer.cfg', '-l', '/home/pi/printer_data/logs/klippy.log', '-I', '/home/pi/printer_data/comms/klippy.serial', '-a', '/home/pi/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-169-g28faf814-dirty'
Untracked files: klippy/extras/autotune_tmc.py, klippy/extras/beacon.py, klippy/extras/linear_movement_vibrations.py, klippy/extras/motor_constants.py, klippy/extras/ratos_homing.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Mar 12 2021, 04:06:34) \n[GCC 10.2.1 20210110]'
Start printer at Sat Apr 20 22:54:54 2024 (1713650094.2 23.8)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999

[gcode_macro STATE_NOTIFY_EXAMPLE]
description = Display the state_notify state
gcode = 
	{% set st = printer.state_notify %}
	{action_respond_info("state_notify: state=%s, timeout=%" % (st.state, st.timeout))}
=======================
Extruder max_extrude_ratio=2.078758
Config error
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 175, in _connect
    self._read_config()
  File "/home/pi/klipper/klippy/klippy.py", line 145, in _read_config
    pconfig.check_unused_options(config)
  File "/home/pi/klipper/klippy/configfile.py", line 303, in check_unused_options
    raise error("Section '%s' is not a valid config section"
configparser.Error: Section 'gcode_shell_command generate_shaper_graph_x' is not a valid config section
webhooks client 4127158200: New connection
webhooks client 4127158200: Client info {'program': 'Moonraker', 'version': 'v0.8.0-325-g99b97af'}
Attempting MCU 'mcu' reset
Unable to issue reset command on MCU 'rpi'
webhooks client 4127158200: Disconnected
Restarting printer
Start printer at Sat Apr 20 22:55:04 2024 (1713650104.2 33.8)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999

[gcode_macro STATE_NOTIFY_EXAMPLE]
description = Display the state_notify state
gcode = 
	{% set st = printer.state_notify %}
	{action_respond_info("state_notify: state=%s, timeout=%" % (st.state, st.timeout))}
=======================
Extruder max_extrude_ratio=2.078758
Config error
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 175, in _connect
    self._read_config()
  File "/home/pi/klipper/klippy/klippy.py", line 145, in _read_config
    pconfig.check_unused_options(config)
  File "/home/pi/klipper/klippy/configfile.py", line 303, in check_unused_options
    raise error("Section '%s' is not a valid config section"
configparser.Error: Section 'gcode_shell_command generate_shaper_graph_x' is not a valid config section
webhooks client 4128163104: New connection
webhooks client 4128163104: Client info {'program': 'Moonraker', 'version': 'v0.8.0-325-g99b97af'}
webhooks client 4128163104: Disconnected
Starting Klippy...
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/printer_data/config/printer.cfg', '-l', '/home/pi/printer_data/logs/klippy.log', '-I', '/home/pi/printer_data/comms/klippy.serial', '-a', '/home/pi/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-169-g28faf814-dirty'
Untracked files: klippy/extras/autotune_tmc.py, klippy/extras/beacon.py, klippy/extras/gcode_shell_command.py, klippy/extras/linear_movement_vibrations.py, klippy/extras/motor_constants.py, klippy/extras/ratos_homing.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Mar 12 2021, 04:06:34) \n[GCC 10.2.1 20210110]'
Start printer at Sat Apr 20 22:56:27 2024 (1713650187.8 24.3)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999

[gcode_macro STATE_NOTIFY_EXAMPLE]
description = Display the state_notify state
gcode = 
	{% set st = printer.state_notify %}
	{action_respond_info("state_notify: state=%s, timeout=%" % (st.state, st.timeout))}
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
webhooks client 4128153576: New connection
webhooks client 4128153576: Client info {'program': 'Moonraker', 'version': 'v0.8.0-325-g99b97af'}
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
Loaded MCU 'mcu' 112 commands (v0.12.0-169-g28faf814 / gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.34-4+rpi1+14) 2.34)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1_PB6_PB7=PB6,PB7 BUS_PINS_i2c1_PB8_PB9=PB8,PB9 BUS_PINS_i2c2_PB10_PB11=PB10,PB11 BUS_PINS_i2c3_PA8_PC9=PA8,PC9 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi2a=PC2,PC3,PB10 BUS_PINS_spi3a=PC11,PC12,PC10 BUS_PINS_spi4=PE13,PE14,PE12 BUS_PINS_spi5=PF8,PF9,PF7 BUS_PINS_spi5a=PH7,PF11,PH6 BUS_PINS_spi6=PG12,PG14,PG13 CLOCK_FREQ=400000000 MCU=stm32h723xx PWM_MAX=255 RESERVE_PINS_USB=PA11,PA12 RESERVE_PINS_crystal=PH0,PH1 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
mcu 'rpi': Starting connect
Loaded MCU 'rpi' 118 commands (v0.12.0-169-g28faf814 / gcc: (Raspbian 10.2.1-6+rpi1) 10.2.1 20210110 binutils: (GNU Binutils for Raspbian) 2.35.2)
MCU 'rpi' config: ADC_MAX=4095 CLOCK_FREQ=50000000 MCU=linux PCA9685_MAX=4096 PWM_MAX=32768 STATS_SUMSQ_BASE=256
mcu_temperature 'mcu' nominal base=-273.952569 slope=1618.577075
Sending MCU 'mcu' printer configuration...
Configured MCU 'mcu' (1024 moves)
Sending MCU 'rpi' printer configuration...
Configured MCU 'rpi' (1024 moves)
Starting heater checks for heater_bed
bed_mesh: generated points
Index |  Tool Adjusted  |   Probe
  0   | (40.0, 23.0)    | (10.0, 8.4)
  1   | (57.8, 23.0)    | (27.8, 8.4)
  2   | (75.5, 23.0)    | (45.5, 8.4)
  3   | (93.3, 23.0)    | (63.3, 8.4)
  4   | (111.1, 23.0)   | (81.1, 8.4)
  5   | (128.8, 23.0)   | (98.8, 8.4)
  6   | (146.6, 23.0)   | (116.6, 8.4)
  7   | (164.4, 23.0)   | (134.4, 8.4)
  8   | (182.2, 23.0)   | (152.2, 8.4)
  9   | (199.9, 23.0)   | (169.9, 8.4)
  10  | (199.9, 42.7)   | (169.9, 28.1)
  11  | (182.2, 42.7)   | (152.2, 28.1)
  12  | (164.4, 42.7)   | (134.4, 28.1)
  13  | (146.6, 42.7)   | (116.6, 28.1)
  14  | (128.9, 42.7)   | (98.9, 28.1)
  15  | (111.1, 42.7)   | (81.1, 28.1)
  16  | (93.3, 42.7)    | (63.3, 28.1)
  17  | (75.5, 42.7)    | (45.5, 28.1)
  18  | (57.8, 42.7)    | (27.8, 28.1)
  19  | (40.0, 42.7)    | (10.0, 28.1)
  20  | (40.0, 62.3)    | (10.0, 47.8)
  21  | (57.8, 62.3)    | (27.8, 47.8)
  22  | (75.5, 62.3)    | (45.5, 47.8)
  23  | (93.3, 62.3)    | (63.3, 47.8)
  24  | (111.1, 62.3)   | (81.1, 47.8)
  25  | (128.8, 62.3)   | (98.8, 47.8)
  26  | (146.6, 62.3)   | (116.6, 47.8)
  27  | (164.4, 62.3)   | (134.4, 47.8)
  28  | (182.2, 62.3)   | (152.2, 47.8)
  29  | (199.9, 62.3)   | (169.9, 47.8)
  30  | (199.9, 82.0)   | (169.9, 67.4)
  31  | (182.2, 82.0)   | (152.2, 67.4)
  32  | (164.4, 82.0)   | (134.4, 67.4)
  33  | (146.6, 82.0)   | (116.6, 67.4)
  34  | (128.9, 82.0)   | (98.9, 67.4)
  35  | (111.1, 82.0)   | (81.1, 67.4)
  36  | (93.3, 82.0)    | (63.3, 67.4)
  37  | (75.5, 82.0)    | (45.5, 67.4)
  38  | (57.8, 82.0)    | (27.8, 67.4)
  39  | (40.0, 82.0)    | (10.0, 67.4)
  40  | (40.0, 101.6)   | (10.0, 87.1)
  41  | (57.8, 101.6)   | (27.8, 87.1)
  42  | (75.5, 101.6)   | (45.5, 87.1)
  43  | (93.3, 101.6)   | (63.3, 87.1)
  44  | (111.1, 101.6)  | (81.1, 87.1)
  45  | (128.8, 101.6)  | (98.8, 87.1)
  46  | (146.6, 101.6)  | (116.6, 87.1)
  47  | (164.4, 101.6)  | (134.4, 87.1)
  48  | (182.2, 101.6)  | (152.2, 87.1)
  49  | (199.9, 101.6)  | (169.9, 87.1)
  50  | (199.9, 121.3)  | (169.9, 106.7)
  51  | (182.2, 121.3)  | (152.2, 106.7)
  52  | (164.4, 121.3)  | (134.4, 106.7)
  53  | (146.6, 121.3)  | (116.6, 106.7)
  54  | (128.9, 121.3)  | (98.9, 106.7)
  55  | (111.1, 121.3)  | (81.1, 106.7)
  56  | (93.3, 121.3)   | (63.3, 106.7)
  57  | (75.5, 121.3)   | (45.5, 106.7)
  58  | (57.8, 121.3)   | (27.8, 106.7)
  59  | (40.0, 121.3)   | (10.0, 106.7)
  60  | (40.0, 141.0)   | (10.0, 126.4)
  61  | (57.8, 141.0)   | (27.8, 126.4)
  62  | (75.5, 141.0)   | (45.5, 126.4)
  63  | (93.3, 141.0)   | (63.3, 126.4)
  64  | (111.1, 141.0)  | (81.1, 126.4)
  65  | (128.8, 141.0)  | (98.8, 126.4)
  66  | (146.6, 141.0)  | (116.6, 126.4)
  67  | (164.4, 141.0)  | (134.4, 126.4)
  68  | (182.2, 141.0)  | (152.2, 126.4)
  69  | (199.9, 141.0)  | (169.9, 126.4)
  70  | (199.9, 160.6)  | (169.9, 146.1)
  71  | (182.2, 160.6)  | (152.2, 146.1)
  72  | (164.4, 160.6)  | (134.4, 146.1)
  73  | (146.6, 160.6)  | (116.6, 146.1)
  74  | (128.9, 160.6)  | (98.9, 146.1)
  75  | (111.1, 160.6)  | (81.1, 146.1)
  76  | (93.3, 160.6)   | (63.3, 146.1)
  77  | (75.5, 160.6)   | (45.5, 146.1)
  78  | (57.8, 160.6)   | (27.8, 146.1)
  79  | (40.0, 160.6)   | (10.0, 146.1)
  80  | (40.0, 180.3)   | (10.0, 165.7)
  81  | (57.8, 180.3)   | (27.8, 165.7)
  82  | (75.5, 180.3)   | (45.5, 165.7)
  83  | (93.3, 180.3)   | (63.3, 165.7)
  84  | (111.1, 180.3)  | (81.1, 165.7)
  85  | (128.8, 180.3)  | (98.8, 165.7)
  86  | (146.6, 180.3)  | (116.6, 165.7)
  87  | (164.4, 180.3)  | (134.4, 165.7)
  88  | (182.2, 180.3)  | (152.2, 165.7)
  89  | (199.9, 180.3)  | (169.9, 165.7)
  90  | (199.9, 199.9)  | (169.9, 185.4)
  91  | (182.2, 199.9)  | (152.2, 185.4)
  92  | (164.4, 199.9)  | (134.4, 185.4)
  93  | (146.6, 199.9)  | (116.6, 185.4)
  94  | (128.9, 199.9)  | (98.9, 185.4)
  95  | (111.1, 199.9)  | (81.1, 185.4)
  96  | (93.3, 199.9)   | (63.3, 185.4)
  97  | (75.5, 199.9)   | (45.5, 185.4)
  98  | (57.8, 199.9)   | (27.8, 185.4)
  99  | (40.0, 199.9)   | (10.0, 185.4)

Printer is not ready
The klippy host software is attempting to connect.  Please
retry in a few moments.

Script running error
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/extras/gcode_button.py", line 41, in button_callback
    self.gcode.run_script(template.render())
  File "/home/pi/klipper/klippy/gcode.py", line 229, in run_script
    self._process_commands(script.split('\n'), need_ack=False)
  File "/home/pi/klipper/klippy/gcode.py", line 211, in _process_commands
    handler(gcmd)
  File "/home/pi/klipper/klippy/gcode.py", line 285, in cmd_default
    raise gcmd.error(self.printer.get_state_message()[0])
gcode.CommandError: 
Printer is not ready
The klippy host software is attempting to connect.  Please
retry in a few moments.


Printer is not ready
The klippy host software is attempting to connect.  Please
retry in a few moments.

Script running error
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/extras/gcode_button.py", line 41, in button_callback
    self.gcode.run_script(template.render())
  File "/home/pi/klipper/klippy/gcode.py", line 229, in run_script
    self._process_commands(script.split('\n'), need_ack=False)
  File "/home/pi/klipper/klippy/gcode.py", line 211, in _process_commands
    handler(gcmd)
  File "/home/pi/klipper/klippy/gcode.py", line 285, in cmd_default
    raise gcmd.error(self.printer.get_state_message()[0])
gcode.CommandError: 
Printer is not ready
The klippy host software is attempting to connect.  Please
retry in a few moments.

Starting heater checks for extruder
autotune_tmc set stepper_x pwm_freq=2
autotune_tmc stepper_x ncycles=219 pfdcycles=73
autotune_tmc set stepper_x tpfd=1
autotune_tmc set stepper_x tbl=1
autotune_tmc set stepper_x toff=1
autotune_tmc seting hysteresis based on 48.0 V
dcoilblank = 0.160000, dcoilsd = 0.015156
hysteresis = 42, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_x hstrt=7
autotune_tmc set stepper_x hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_x pwm_autoscale=True
autotune_tmc set stepper_x pwm_autograd=True
autotune_tmc set stepper_x pwm_grad=4
autotune_tmc set stepper_x pwm_ofs=10
autotune_tmc set stepper_x pwm_reg=15
autotune_tmc set stepper_x pwm_lim=4
autotune_tmc set stepper_x tpwmthrs=1048575
autotune_tmc set stepper_x en_pwm_mode=False
autotune_tmc set stepper_x tcoolthrs=391(24.0)
autotune_tmc set stepper_x sgt=1
autotune_tmc set stepper_x small_hysteresis=False
autotune_tmc set stepper_x semin=2
autotune_tmc set stepper_x semax=2
autotune_tmc set stepper_x seup=3
autotune_tmc set stepper_x sedn=2
autotune_tmc set stepper_x seimin=0
autotune_tmc set stepper_x sfilt=0
autotune_tmc set stepper_x iholddelay=12
autotune_tmc set stepper_x vhighfs=False
autotune_tmc set stepper_x vhighchm=False
autotune_tmc set stepper_x multistep_filt=True
autotune_tmc set stepper_x1 pwm_freq=2
autotune_tmc stepper_x1 ncycles=219 pfdcycles=73
autotune_tmc set stepper_x1 tpfd=1
autotune_tmc set stepper_x1 tbl=1
autotune_tmc set stepper_x1 toff=1
autotune_tmc seting hysteresis based on 48.0 V
dcoilblank = 0.160000, dcoilsd = 0.015156
hysteresis = 42, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_x1 hstrt=7
autotune_tmc set stepper_x1 hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_x1 pwm_autoscale=True
autotune_tmc set stepper_x1 pwm_autograd=True
autotune_tmc set stepper_x1 pwm_grad=4
autotune_tmc set stepper_x1 pwm_ofs=10
autotune_tmc set stepper_x1 pwm_reg=15
autotune_tmc set stepper_x1 pwm_lim=4
autotune_tmc set stepper_x1 tpwmthrs=1048575
autotune_tmc set stepper_x1 en_pwm_mode=False
autotune_tmc set stepper_x1 tcoolthrs=391(24.0)
autotune_tmc set stepper_x1 sgt=1
autotune_tmc set stepper_x1 small_hysteresis=False
autotune_tmc set stepper_x1 semin=2
autotune_tmc set stepper_x1 semax=2
autotune_tmc set stepper_x1 seup=3
autotune_tmc set stepper_x1 sedn=2
autotune_tmc set stepper_x1 seimin=0
autotune_tmc set stepper_x1 sfilt=0
autotune_tmc set stepper_x1 iholddelay=12
autotune_tmc set stepper_x1 vhighfs=False
autotune_tmc set stepper_x1 vhighchm=False
autotune_tmc set stepper_x1 multistep_filt=True
autotune_tmc set stepper_y pwm_freq=2
autotune_tmc stepper_y ncycles=219 pfdcycles=73
autotune_tmc set stepper_y tpfd=1
autotune_tmc set stepper_y tbl=1
autotune_tmc set stepper_y toff=1
autotune_tmc seting hysteresis based on 48.0 V
dcoilblank = 0.160000, dcoilsd = 0.015156
hysteresis = 42, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_y hstrt=7
autotune_tmc set stepper_y hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_y pwm_autoscale=True
autotune_tmc set stepper_y pwm_autograd=True
autotune_tmc set stepper_y pwm_grad=4
autotune_tmc set stepper_y pwm_ofs=10
autotune_tmc set stepper_y pwm_reg=15
autotune_tmc set stepper_y pwm_lim=4
autotune_tmc set stepper_y tpwmthrs=1048575
autotune_tmc set stepper_y en_pwm_mode=False
autotune_tmc set stepper_y tcoolthrs=391(24.0)
autotune_tmc set stepper_y sgt=1
autotune_tmc set stepper_y small_hysteresis=False
autotune_tmc set stepper_y semin=2
autotune_tmc set stepper_y semax=2
autotune_tmc set stepper_y seup=3
autotune_tmc set stepper_y sedn=2
autotune_tmc set stepper_y seimin=0
autotune_tmc set stepper_y sfilt=0
autotune_tmc set stepper_y iholddelay=12
autotune_tmc set stepper_y vhighfs=False
autotune_tmc set stepper_y vhighchm=False
autotune_tmc set stepper_y multistep_filt=True
autotune_tmc set stepper_y1 pwm_freq=2
autotune_tmc stepper_y1 ncycles=219 pfdcycles=73
autotune_tmc set stepper_y1 tpfd=1
autotune_tmc set stepper_y1 tbl=1
autotune_tmc set stepper_y1 toff=1
autotune_tmc seting hysteresis based on 48.0 V
dcoilblank = 0.160000, dcoilsd = 0.015156
hysteresis = 42, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_y1 hstrt=7
autotune_tmc set stepper_y1 hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_y1 pwm_autoscale=True
autotune_tmc set stepper_y1 pwm_autograd=True
autotune_tmc set stepper_y1 pwm_grad=4
autotune_tmc set stepper_y1 pwm_ofs=10
autotune_tmc set stepper_y1 pwm_reg=15
autotune_tmc set stepper_y1 pwm_lim=4
autotune_tmc set stepper_y1 tpwmthrs=1048575
autotune_tmc set stepper_y1 en_pwm_mode=False
autotune_tmc set stepper_y1 tcoolthrs=391(24.0)
autotune_tmc set stepper_y1 sgt=1
autotune_tmc set stepper_y1 small_hysteresis=False
autotune_tmc set stepper_y1 semin=2
autotune_tmc set stepper_y1 semax=2
autotune_tmc set stepper_y1 seup=3
autotune_tmc set stepper_y1 sedn=2
autotune_tmc set stepper_y1 seimin=0
autotune_tmc set stepper_y1 sfilt=0
autotune_tmc set stepper_y1 iholddelay=12
autotune_tmc set stepper_y1 vhighfs=False
autotune_tmc set stepper_y1 vhighchm=False
autotune_tmc set stepper_y1 multistep_filt=True
autotune_tmc set stepper_z pwm_freq=2
autotune_tmc stepper_z ncycles=219 pfdcycles=73
autotune_tmc set stepper_z tbl=1
autotune_tmc set stepper_z toff=1
autotune_tmc seting hysteresis based on 24.0 V
dcoilblank = 0.080000, dcoilsd = 0.013495
hysteresis = 22, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_z hstrt=7
autotune_tmc set stepper_z hend=9
autotune_tmc set stepper_z sgthrs=40
autotune_tmc using max PWM speed 43.108253
autotune_tmc set stepper_z pwm_autoscale=True
autotune_tmc set stepper_z pwm_autograd=True
autotune_tmc set stepper_z pwm_grad=7
autotune_tmc set stepper_z pwm_ofs=18
autotune_tmc set stepper_z pwm_reg=15
autotune_tmc set stepper_z pwm_lim=4
autotune_tmc set stepper_z tpwmthrs=1048575
autotune_tmc set stepper_z en_spreadcycle=True
autotune_tmc set stepper_z tcoolthrs=391(2.4)
autotune_tmc set stepper_z semin=2
autotune_tmc set stepper_z semax=2
autotune_tmc set stepper_z seup=3
autotune_tmc set stepper_z sedn=2
autotune_tmc set stepper_z seimin=0
autotune_tmc set stepper_z iholddelay=12
autotune_tmc set stepper_z multistep_filt=True
autotune_tmc set stepper_z1 pwm_freq=2
autotune_tmc stepper_z1 ncycles=219 pfdcycles=73
autotune_tmc set stepper_z1 tbl=1
autotune_tmc set stepper_z1 toff=1
autotune_tmc seting hysteresis based on 24.0 V
dcoilblank = 0.080000, dcoilsd = 0.013495
hysteresis = 22, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_z1 hstrt=7
autotune_tmc set stepper_z1 hend=9
autotune_tmc set stepper_z1 sgthrs=40
autotune_tmc using max PWM speed 43.108253
autotune_tmc set stepper_z1 pwm_autoscale=True
autotune_tmc set stepper_z1 pwm_autograd=True
autotune_tmc set stepper_z1 pwm_grad=7
autotune_tmc set stepper_z1 pwm_ofs=18
autotune_tmc set stepper_z1 pwm_reg=15
autotune_tmc set stepper_z1 pwm_lim=4
autotune_tmc set stepper_z1 tpwmthrs=1048575
autotune_tmc set stepper_z1 en_spreadcycle=True
autotune_tmc set stepper_z1 tcoolthrs=391(2.4)
autotune_tmc set stepper_z1 semin=2
autotune_tmc set stepper_z1 semax=2
autotune_tmc set stepper_z1 seup=3
autotune_tmc set stepper_z1 sedn=2
autotune_tmc set stepper_z1 seimin=0
autotune_tmc set stepper_z1 iholddelay=12
autotune_tmc set stepper_z1 multistep_filt=True
autotune_tmc set stepper_z2 pwm_freq=2
autotune_tmc stepper_z2 ncycles=219 pfdcycles=73
autotune_tmc set stepper_z2 tbl=1
autotune_tmc set stepper_z2 toff=1
autotune_tmc seting hysteresis based on 24.0 V
dcoilblank = 0.080000, dcoilsd = 0.013495
hysteresis = 22, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_z2 hstrt=7
autotune_tmc set stepper_z2 hend=9
autotune_tmc set stepper_z2 sgthrs=40
autotune_tmc using max PWM speed 43.108253
autotune_tmc set stepper_z2 pwm_autoscale=True
autotune_tmc set stepper_z2 pwm_autograd=True
autotune_tmc set stepper_z2 pwm_grad=7
autotune_tmc set stepper_z2 pwm_ofs=18
autotune_tmc set stepper_z2 pwm_reg=15
autotune_tmc set stepper_z2 pwm_lim=4
autotune_tmc set stepper_z2 tpwmthrs=1048575
autotune_tmc set stepper_z2 en_spreadcycle=True
autotune_tmc set stepper_z2 tcoolthrs=391(2.4)
autotune_tmc set stepper_z2 semin=2
autotune_tmc set stepper_z2 semax=2
autotune_tmc set stepper_z2 seup=3
autotune_tmc set stepper_z2 sedn=2
autotune_tmc set stepper_z2 seimin=0
autotune_tmc set stepper_z2 iholddelay=12
autotune_tmc set stepper_z2 multistep_filt=True
Stats 39.3: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9365 bytes_read=12500 bytes_retransmit=9 bytes_invalid=0 send_seq=646 receive_seq=646 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028174 rpi: mcu_awake=0.003 mcu_task_avg=0.000022 mcu_task_stddev=0.000012 bytes_write=831 bytes_read=4685 bytes_retransmit=0 bytes_invalid=0 send_seq=113 receive_seq=113 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999313 adj=49990440 Octopus_Max: temp=39.4 Pi: temp=39.9  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.9 bed_core: temp=26.9 barrow: temp=-119.3 sysload=0.43 cputime=2.587 memavail=7489416 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
webhooks: registering remote method 'shutdown_machine' for connection id: 4128153576
webhooks: registering remote method 'reboot_machine' for connection id: 4128153576
webhooks: registering remote method 'pause_job_queue' for connection id: 4128153576
webhooks: registering remote method 'start_job_queue' for connection id: 4128153576
webhooks: registering remote method 'set_device_power' for connection id: 4128153576
Stats 40.3: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9371 bytes_read=12782 bytes_retransmit=9 bytes_invalid=0 send_seq=647 receive_seq=647 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400026990 rpi: mcu_awake=0.003 mcu_task_avg=0.000022 mcu_task_stddev=0.000012 bytes_write=837 bytes_read=4701 bytes_retransmit=0 bytes_invalid=0 send_seq=114 receive_seq=114 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999538 adj=49998795 Octopus_Max: temp=39.5 Pi: temp=39.9  heater_bed: target=0 temp=26.4 pwm=0.000 bed_mat: temp=26.0 bed_core: temp=26.9 barrow: temp=-119.3 sysload=0.40 cputime=2.629 memavail=7487504 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 41.3: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9377 bytes_read=13093 bytes_retransmit=9 bytes_invalid=0 send_seq=648 receive_seq=648 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400027638 rpi: mcu_awake=0.003 mcu_task_avg=0.000022 mcu_task_stddev=0.000012 bytes_write=843 bytes_read=4717 bytes_retransmit=0 bytes_invalid=0 send_seq=115 receive_seq=115 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999518 adj=49998730 Octopus_Max: temp=39.5 Pi: temp=39.4  heater_bed: target=0 temp=26.4 pwm=0.000 bed_mat: temp=26.0 bed_core: temp=26.9 barrow: temp=-119.3 sysload=0.40 cputime=2.641 memavail=7487508 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 42.3: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000009 mcu_task_stddev=0.000063 bytes_write=9383 bytes_read=13389 bytes_retransmit=9 bytes_invalid=0 send_seq=649 receive_seq=649 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028447 rpi: mcu_awake=0.003 mcu_task_avg=0.000022 mcu_task_stddev=0.000012 bytes_write=849 bytes_read=4733 bytes_retransmit=0 bytes_invalid=0 send_seq=116 receive_seq=116 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000047 adj=49997885 Octopus_Max: temp=39.5 Pi: temp=38.9  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.0 bed_core: temp=26.9 barrow: temp=-110.0 sysload=0.40 cputime=2.667 memavail=7487516 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 43.3: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000009 mcu_task_stddev=0.000063 bytes_write=9389 bytes_read=13656 bytes_retransmit=9 bytes_invalid=0 send_seq=650 receive_seq=650 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028223 rpi: mcu_awake=0.003 mcu_task_avg=0.000022 mcu_task_stddev=0.000012 bytes_write=855 bytes_read=4749 bytes_retransmit=0 bytes_invalid=0 send_seq=117 receive_seq=117 retransmit_seq=0 srtt=0.000 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000735 adj=49998392 Octopus_Max: temp=39.6 Pi: temp=38.9  heater_bed: target=0 temp=26.4 pwm=0.000 bed_mat: temp=26.0 bed_core: temp=26.8 barrow: temp=-110.0 sysload=0.40 cputime=2.688 memavail=7484832 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 44.3: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000009 mcu_task_stddev=0.000063 bytes_write=9395 bytes_read=13967 bytes_retransmit=9 bytes_invalid=0 send_seq=651 receive_seq=651 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028125 rpi: mcu_awake=0.003 mcu_task_avg=0.000022 mcu_task_stddev=0.000012 bytes_write=861 bytes_read=4765 bytes_retransmit=0 bytes_invalid=0 send_seq=118 receive_seq=118 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000404 adj=49999718 Octopus_Max: temp=39.7 Pi: temp=38.9  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=26.0 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.40 cputime=2.700 memavail=7484832 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 45.3: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000009 mcu_task_stddev=0.000063 bytes_write=9401 bytes_read=14250 bytes_retransmit=9 bytes_invalid=0 send_seq=652 receive_seq=652 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400027888 rpi: mcu_awake=0.001 mcu_task_avg=0.000012 mcu_task_stddev=0.000016 bytes_write=867 bytes_read=4794 bytes_retransmit=0 bytes_invalid=0 send_seq=119 receive_seq=119 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000230 adj=49998215 Octopus_Max: temp=39.6 Pi: temp=38.5  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=25.9 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.37 cputime=2.712 memavail=7484832 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 46.3: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000009 mcu_task_stddev=0.000063 bytes_write=9407 bytes_read=14532 bytes_retransmit=9 bytes_invalid=0 send_seq=653 receive_seq=653 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400027916 rpi: mcu_awake=0.001 mcu_task_avg=0.000012 mcu_task_stddev=0.000016 bytes_write=873 bytes_read=4810 bytes_retransmit=0 bytes_invalid=0 send_seq=120 receive_seq=120 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000098 adj=49997458 Octopus_Max: temp=39.7 Pi: temp=39.9  heater_bed: target=0 temp=26.4 pwm=0.000 bed_mat: temp=25.9 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.37 cputime=2.726 memavail=7481668 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 47.3: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9413 bytes_read=14857 bytes_retransmit=9 bytes_invalid=0 send_seq=654 receive_seq=654 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400027780 rpi: mcu_awake=0.001 mcu_task_avg=0.000012 mcu_task_stddev=0.000016 bytes_write=885 bytes_read=4842 bytes_retransmit=0 bytes_invalid=0 send_seq=122 receive_seq=122 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000005 adj=49996844 Octopus_Max: temp=39.8 Pi: temp=38.5  heater_bed: target=0 temp=26.4 pwm=0.000 bed_mat: temp=26.0 bed_core: temp=26.9 barrow: temp=-110.0 sysload=0.37 cputime=2.740 memavail=7481408 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 48.3: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9419 bytes_read=15140 bytes_retransmit=9 bytes_invalid=0 send_seq=655 receive_seq=655 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028057 rpi: mcu_awake=0.001 mcu_task_avg=0.000012 mcu_task_stddev=0.000016 bytes_write=891 bytes_read=4858 bytes_retransmit=0 bytes_invalid=0 send_seq=123 receive_seq=123 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000088 adj=49996528 Octopus_Max: temp=39.7 Pi: temp=39.4  heater_bed: target=0 temp=26.4 pwm=0.000 bed_mat: temp=26.0 bed_core: temp=26.9 barrow: temp=-119.3 sysload=0.37 cputime=2.764 memavail=7481408 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 49.3: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9425 bytes_read=15422 bytes_retransmit=9 bytes_invalid=0 send_seq=656 receive_seq=656 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028306 rpi: mcu_awake=0.001 mcu_task_avg=0.000012 mcu_task_stddev=0.000016 bytes_write=897 bytes_read=4874 bytes_retransmit=0 bytes_invalid=0 send_seq=124 receive_seq=124 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000090 adj=49996699 Octopus_Max: temp=39.9 Pi: temp=39.4  heater_bed: target=0 temp=26.4 pwm=0.000 bed_mat: temp=26.0 bed_core: temp=26.9 barrow: temp=-119.3 sysload=0.37 cputime=2.784 memavail=7478044 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 50.3: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9431 bytes_read=15733 bytes_retransmit=9 bytes_invalid=0 send_seq=657 receive_seq=657 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028145 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000012 bytes_write=903 bytes_read=4903 bytes_retransmit=0 bytes_invalid=0 send_seq=125 receive_seq=125 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000039 adj=49996555 Octopus_Max: temp=39.9 Pi: temp=38.5  heater_bed: target=0 temp=26.4 pwm=0.000 bed_mat: temp=26.0 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.34 cputime=2.797 memavail=7478444 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 51.3: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9437 bytes_read=16016 bytes_retransmit=9 bytes_invalid=0 send_seq=658 receive_seq=658 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028042 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000012 bytes_write=909 bytes_read=4919 bytes_retransmit=0 bytes_invalid=0 send_seq=126 receive_seq=126 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000004 adj=49996434 Octopus_Max: temp=39.8 Pi: temp=38.9  heater_bed: target=0 temp=26.4 pwm=0.000 bed_mat: temp=26.0 bed_core: temp=26.9 barrow: temp=-119.3 sysload=0.34 cputime=2.808 memavail=7478444 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 52.3: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9443 bytes_read=16312 bytes_retransmit=9 bytes_invalid=0 send_seq=659 receive_seq=659 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400027953 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000012 bytes_write=915 bytes_read=4935 bytes_retransmit=0 bytes_invalid=0 send_seq=127 receive_seq=127 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999978 adj=49996361 Octopus_Max: temp=39.8 Pi: temp=38.9  heater_bed: target=0 temp=26.4 pwm=0.000 bed_mat: temp=26.0 bed_core: temp=26.8 barrow: temp=-119.3 sysload=0.34 cputime=2.820 memavail=7478444 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 53.3: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9449 bytes_read=16623 bytes_retransmit=9 bytes_invalid=0 send_seq=660 receive_seq=660 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400027890 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000012 bytes_write=921 bytes_read=4951 bytes_retransmit=0 bytes_invalid=0 send_seq=128 receive_seq=128 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999962 adj=49996329 Octopus_Max: temp=39.8 Pi: temp=38.9  heater_bed: target=0 temp=26.4 pwm=0.000 bed_mat: temp=26.0 bed_core: temp=26.8 barrow: temp=-110.0 sysload=0.34 cputime=2.833 memavail=7478452 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 54.3: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9455 bytes_read=16894 bytes_retransmit=9 bytes_invalid=0 send_seq=661 receive_seq=661 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028089 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000012 bytes_write=927 bytes_read=4967 bytes_retransmit=0 bytes_invalid=0 send_seq=129 receive_seq=129 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999958 adj=49996331 Octopus_Max: temp=40.0 Pi: temp=38.0  heater_bed: target=0 temp=26.4 pwm=0.000 bed_mat: temp=26.0 bed_core: temp=26.9 barrow: temp=-119.3 sysload=0.34 cputime=2.850 memavail=7479484 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 55.3: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9461 bytes_read=17176 bytes_retransmit=9 bytes_invalid=0 send_seq=662 receive_seq=662 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028331 rpi: mcu_awake=0.000 mcu_task_avg=0.000008 mcu_task_stddev=0.000008 bytes_write=933 bytes_read=4996 bytes_retransmit=0 bytes_invalid=0 send_seq=130 receive_seq=130 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000019 adj=49996223 Octopus_Max: temp=40.0 Pi: temp=38.5  heater_bed: target=0 temp=26.4 pwm=0.000 bed_mat: temp=26.0 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.39 cputime=2.867 memavail=7480368 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 56.3: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9467 bytes_read=17487 bytes_retransmit=9 bytes_invalid=0 send_seq=663 receive_seq=663 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028223 rpi: mcu_awake=0.000 mcu_task_avg=0.000008 mcu_task_stddev=0.000008 bytes_write=939 bytes_read=5012 bytes_retransmit=0 bytes_invalid=0 send_seq=131 receive_seq=131 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000045 adj=49996434 Octopus_Max: temp=39.9 Pi: temp=38.5  heater_bed: target=0 temp=26.4 pwm=0.000 bed_mat: temp=26.0 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.39 cputime=2.881 memavail=7482496 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 57.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9473 bytes_read=17784 bytes_retransmit=9 bytes_invalid=0 send_seq=664 receive_seq=664 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028149 rpi: mcu_awake=0.000 mcu_task_avg=0.000008 mcu_task_stddev=0.000008 bytes_write=945 bytes_read=5028 bytes_retransmit=0 bytes_invalid=0 send_seq=132 receive_seq=132 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000025 adj=49996657 Octopus_Max: temp=40.1 Pi: temp=39.9  heater_bed: target=0 temp=26.4 pwm=0.000 bed_mat: temp=25.9 bed_core: temp=26.9 barrow: temp=-119.3 sysload=0.39 cputime=2.893 memavail=7482496 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 58.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9479 bytes_read=18066 bytes_retransmit=9 bytes_invalid=0 send_seq=665 receive_seq=665 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028133 rpi: mcu_awake=0.000 mcu_task_avg=0.000008 mcu_task_stddev=0.000008 bytes_write=951 bytes_read=5044 bytes_retransmit=0 bytes_invalid=0 send_seq=133 receive_seq=133 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000014 adj=49996562 Octopus_Max: temp=40.1 Pi: temp=38.5  heater_bed: target=0 temp=26.4 pwm=0.000 bed_mat: temp=25.9 bed_core: temp=26.9 barrow: temp=-119.3 sysload=0.39 cputime=2.904 memavail=7482500 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 59.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9485 bytes_read=18377 bytes_retransmit=9 bytes_invalid=0 send_seq=666 receive_seq=666 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028067 rpi: mcu_awake=0.000 mcu_task_avg=0.000008 mcu_task_stddev=0.000008 bytes_write=957 bytes_read=5060 bytes_retransmit=0 bytes_invalid=0 send_seq=134 receive_seq=134 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000033 adj=49996499 Octopus_Max: temp=40.0 Pi: temp=39.4  heater_bed: target=0 temp=26.4 pwm=0.000 bed_mat: temp=26.0 bed_core: temp=26.9 barrow: temp=-110.0 sysload=0.39 cputime=2.924 memavail=7482500 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 60.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9491 bytes_read=18674 bytes_retransmit=9 bytes_invalid=0 send_seq=667 receive_seq=667 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028169 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000012 bytes_write=963 bytes_read=5089 bytes_retransmit=0 bytes_invalid=0 send_seq=135 receive_seq=135 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000039 adj=49996660 Octopus_Max: temp=40.1 Pi: temp=38.5  heater_bed: target=0 temp=26.4 pwm=0.000 bed_mat: temp=25.9 bed_core: temp=26.9 barrow: temp=-110.0 sysload=0.36 cputime=2.952 memavail=7482500 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 61.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9497 bytes_read=18942 bytes_retransmit=9 bytes_invalid=0 send_seq=668 receive_seq=668 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028260 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000012 bytes_write=969 bytes_read=5105 bytes_retransmit=0 bytes_invalid=0 send_seq=136 receive_seq=136 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000049 adj=49996586 Octopus_Max: temp=40.0 Pi: temp=38.0  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.0 bed_core: temp=26.9 barrow: temp=-119.3 sysload=0.36 cputime=2.977 memavail=7479864 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 62.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9503 bytes_read=19267 bytes_retransmit=9 bytes_invalid=0 send_seq=669 receive_seq=669 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028196 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000012 bytes_write=975 bytes_read=5121 bytes_retransmit=0 bytes_invalid=0 send_seq=137 receive_seq=137 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000031 adj=49996560 Octopus_Max: temp=39.9 Pi: temp=38.9  heater_bed: target=0 temp=26.3 pwm=0.000 bed_mat: temp=26.0 bed_core: temp=26.9 barrow: temp=-110.0 sysload=0.36 cputime=2.990 memavail=7479380 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 63.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9509 bytes_read=19564 bytes_retransmit=9 bytes_invalid=0 send_seq=670 receive_seq=670 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028134 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000012 bytes_write=981 bytes_read=5137 bytes_retransmit=0 bytes_invalid=0 send_seq=138 receive_seq=138 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000021 adj=49996481 Octopus_Max: temp=40.0 Pi: temp=38.5  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.0 bed_core: temp=26.9 barrow: temp=-110.0 sysload=0.36 cputime=3.003 memavail=7479380 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
webhooks client 4128153576: Disconnected
Starting Klippy...
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/printer_data/config/printer.cfg', '-l', '/home/pi/printer_data/logs/klippy.log', '-I', '/home/pi/printer_data/comms/klippy.serial', '-a', '/home/pi/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-169-g28faf814-dirty'
Untracked files: klippy/extras/autotune_tmc.py, klippy/extras/beacon.py, klippy/extras/gcode_shell_command.py, klippy/extras/linear_movement_vibrations.py, klippy/extras/motor_constants.py, klippy/extras/ratos_homing.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Mar 12 2021, 04:06:34) \n[GCC 10.2.1 20210110]'
Start printer at Sat Apr 20 22:57:44 2024 (1713650264.9 23.5)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999

[gcode_macro STATE_NOTIFY_EXAMPLE]
description = Display the state_notify state
gcode = 
	{% set st = printer.state_notify %}
	{action_respond_info("state_notify: state=%s, timeout=%" % (st.state, st.timeout))}
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
webhooks client 4122423744: New connection
webhooks client 4122423744: Client info {'program': 'Moonraker', 'version': 'v0.8.0-325-g99b97af'}
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
MCU error during connect
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/mcu.py", line 791, in _mcu_identify
    self._serial.connect_uart(self._serialport, self._baud, rts)
  File "/home/pi/klipper/klippy/serialhdl.py", line 182, in connect_uart
    self._error("Unable to connect")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Unable to connect

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 176, in _connect
    self.send_event("klippy:mcu_identify")
  File "/home/pi/klipper/klippy/klippy.py", line 263, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/klippy.py", line 263, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/mcu.py", line 796, in _mcu_identify
    raise error(str(e))
mcu.error: mcu 'mcu': Unable to connect
Build file /home/pi/klipper/klippy/../.config(914): Sat Apr 20 22:38:30 2024
========= Last MCU build config =========
# CONFIG_LOW_LEVEL_OPTIONS is not set
# CONFIG_MACH_AVR is not set
# CONFIG_MACH_ATSAM is not set
# CONFIG_MACH_ATSAMD is not set
# CONFIG_MACH_LPC176X is not set
# CONFIG_MACH_STM32 is not set
# CONFIG_MACH_HC32F460 is not set
# CONFIG_MACH_RP2040 is not set
# CONFIG_MACH_PRU is not set
# CONFIG_MACH_AR100 is not set
CONFIG_MACH_LINUX=y
# CONFIG_MACH_SIMU is not set
CONFIG_BOARD_DIRECTORY="linux"
CONFIG_CLOCK_FREQ=50000000
CONFIG_LINUX_SELECT=y
CONFIG_USB_VENDOR_ID=0x1d50
CONFIG_USB_DEVICE_ID=0x614e
CONFIG_USB_SERIAL_NUMBER="12345"
CONFIG_WANT_GPIO_BITBANGING=y
CONFIG_WANT_DISPLAYS=y
CONFIG_WANT_SENSORS=y
CONFIG_WANT_LIS2DW=y
CONFIG_WANT_LDC1612=y
CONFIG_WANT_SOFTWARE_I2C=y
CONFIG_WANT_SOFTWARE_SPI=y
CONFIG_NEED_SENSOR_BULK=y
CONFIG_CANBUS_FREQUENCY=1000000
CONFIG_HAVE_GPIO=y
CONFIG_HAVE_GPIO_ADC=y
CONFIG_HAVE_GPIO_SPI=y
CONFIG_HAVE_GPIO_I2C=y
CONFIG_HAVE_GPIO_HARD_PWM=y
CONFIG_INLINE_STEPPER_HACK=y
=======================
Build file /home/pi/klipper/klippy/../out/klipper.dict(9535): Sat Apr 20 22:38:48 2024
Last MCU build version: v0.12.0-169-g28faf814
Last MCU build tools: gcc: (Raspbian 10.2.1-6+rpi1) 10.2.1 20210110 binutils: (GNU Binutils for Raspbian) 2.35.2
Last MCU build config: ADC_MAX=4095 CLOCK_FREQ=50000000 MCU=linux PCA9685_MAX=4096 PWM_MAX=32768 STATS_SUMSQ_BASE=256
Build file /home/pi/klipper/klippy/../out/klipper.elf(712672): Sat Apr 20 22:38:52 2024
webhooks client 4122423744: Disconnected
webhooks client 4122716840: New connection
webhooks client 4122716840: Client info {'program': 'Moonraker', 'version': 'v0.8.0-325-g99b97af'}
Attempting MCU 'mcu' reset
Unhandled exception during post run
Traceback (most recent call last):
  File "/home/pi/klippy-env/lib/python3.9/site-packages/serial/serialposix.py", line 265, in open
    self.fd = os.open(self.portstr, os.O_RDWR | os.O_NOCTTY | os.O_NONBLOCK)
FileNotFoundError: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 234, in run
    self.send_event("klippy:firmware_restart")
  File "/home/pi/klipper/klippy/klippy.py", line 263, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/klippy.py", line 263, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/mcu.py", line 953, in _firmware_restart
    self._restart_arduino()
  File "/home/pi/klipper/klippy/mcu.py", line 913, in _restart_arduino
    serialhdl.arduino_reset(self._serialport, self._reactor)
  File "/home/pi/klipper/klippy/serialhdl.py", line 379, in arduino_reset
    ser = serial.Serial(serialport, 2400, timeout=0, exclusive=True)
  File "/home/pi/klippy-env/lib/python3.9/site-packages/serial/serialutil.py", line 240, in __init__
    self.open()
  File "/home/pi/klippy-env/lib/python3.9/site-packages/serial/serialposix.py", line 268, in open
    raise SerialException(msg.errno, "could not open port {}: {}".format(self._port, msg))
serial.serialutil.SerialException: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
Restarting printer
Start printer at Sat Apr 20 23:01:45 2024 (1713650505.2 251.1)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
webhooks client 4121415368: New connection
webhooks client 4121415368: Client info {'program': 'Moonraker', 'version': 'v0.8.0-325-g99b97af'}
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
Starting Klippy...
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/printer_data/config/printer.cfg', '-l', '/home/pi/printer_data/logs/klippy.log', '-I', '/home/pi/printer_data/comms/klippy.serial', '-a', '/home/pi/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-169-g28faf814-dirty'
Untracked files: klippy/extras/autotune_tmc.py, klippy/extras/beacon.py, klippy/extras/gcode_shell_command.py, klippy/extras/linear_movement_vibrations.py, klippy/extras/motor_constants.py, klippy/extras/ratos_homing.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Mar 12 2021, 04:06:34) \n[GCC 10.2.1 20210110]'
Start printer at Sat Apr 20 23:02:43 2024 (1713650563.3 309.2)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
webhooks client 4124297320: New connection
webhooks client 4124297320: Client info {'program': 'Moonraker', 'version': 'v0.8.0-325-g99b97af'}
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
MCU error during connect
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/mcu.py", line 791, in _mcu_identify
    self._serial.connect_uart(self._serialport, self._baud, rts)
  File "/home/pi/klipper/klippy/serialhdl.py", line 182, in connect_uart
    self._error("Unable to connect")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Unable to connect

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 176, in _connect
    self.send_event("klippy:mcu_identify")
  File "/home/pi/klipper/klippy/klippy.py", line 263, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/klippy.py", line 263, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/mcu.py", line 796, in _mcu_identify
    raise error(str(e))
mcu.error: mcu 'mcu': Unable to connect
Build file /home/pi/klipper/klippy/../.config(914): Sat Apr 20 22:38:30 2024
========= Last MCU build config =========
# CONFIG_LOW_LEVEL_OPTIONS is not set
# CONFIG_MACH_AVR is not set
# CONFIG_MACH_ATSAM is not set
# CONFIG_MACH_ATSAMD is not set
# CONFIG_MACH_LPC176X is not set
# CONFIG_MACH_STM32 is not set
# CONFIG_MACH_HC32F460 is not set
# CONFIG_MACH_RP2040 is not set
# CONFIG_MACH_PRU is not set
# CONFIG_MACH_AR100 is not set
CONFIG_MACH_LINUX=y
# CONFIG_MACH_SIMU is not set
CONFIG_BOARD_DIRECTORY="linux"
CONFIG_CLOCK_FREQ=50000000
CONFIG_LINUX_SELECT=y
CONFIG_USB_VENDOR_ID=0x1d50
CONFIG_USB_DEVICE_ID=0x614e
CONFIG_USB_SERIAL_NUMBER="12345"
CONFIG_WANT_GPIO_BITBANGING=y
CONFIG_WANT_DISPLAYS=y
CONFIG_WANT_SENSORS=y
CONFIG_WANT_LIS2DW=y
CONFIG_WANT_LDC1612=y
CONFIG_WANT_SOFTWARE_I2C=y
CONFIG_WANT_SOFTWARE_SPI=y
CONFIG_NEED_SENSOR_BULK=y
CONFIG_CANBUS_FREQUENCY=1000000
CONFIG_HAVE_GPIO=y
CONFIG_HAVE_GPIO_ADC=y
CONFIG_HAVE_GPIO_SPI=y
CONFIG_HAVE_GPIO_I2C=y
CONFIG_HAVE_GPIO_HARD_PWM=y
CONFIG_INLINE_STEPPER_HACK=y
=======================
Build file /home/pi/klipper/klippy/../out/klipper.dict(9535): Sat Apr 20 22:38:48 2024
Last MCU build version: v0.12.0-169-g28faf814
Last MCU build tools: gcc: (Raspbian 10.2.1-6+rpi1) 10.2.1 20210110 binutils: (GNU Binutils for Raspbian) 2.35.2
Last MCU build config: ADC_MAX=4095 CLOCK_FREQ=50000000 MCU=linux PCA9685_MAX=4096 PWM_MAX=32768 STATS_SUMSQ_BASE=256
Build file /home/pi/klipper/klippy/../out/klipper.elf(712672): Sat Apr 20 22:38:52 2024
Starting Klippy...
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/printer_data/config/printer.cfg', '-l', '/home/pi/printer_data/logs/klippy.log', '-I', '/home/pi/printer_data/comms/klippy.serial', '-a', '/home/pi/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-169-g28faf814-dirty'
Untracked files: klippy/extras/autotune_tmc.py, klippy/extras/beacon.py, klippy/extras/gcode_shell_command.py, klippy/extras/linear_movement_vibrations.py, klippy/extras/motor_constants.py, klippy/extras/ratos_homing.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Mar 12 2021, 04:06:34) \n[GCC 10.2.1 20210110]'
Start printer at Sat Apr 20 23:04:24 2024 (1713650664.5 410.4)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
webhooks client 4123791664: New connection
webhooks client 4123791664: Client info {'program': 'Moonraker', 'version': 'v0.8.0-325-g99b97af'}
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
MCU error during connect
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/mcu.py", line 791, in _mcu_identify
    self._serial.connect_uart(self._serialport, self._baud, rts)
  File "/home/pi/klipper/klippy/serialhdl.py", line 182, in connect_uart
    self._error("Unable to connect")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Unable to connect

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 176, in _connect
    self.send_event("klippy:mcu_identify")
  File "/home/pi/klipper/klippy/klippy.py", line 263, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/klippy.py", line 263, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/mcu.py", line 796, in _mcu_identify
    raise error(str(e))
mcu.error: mcu 'mcu': Unable to connect
Build file /home/pi/klipper/klippy/../.config(914): Sat Apr 20 22:38:30 2024
========= Last MCU build config =========
# CONFIG_LOW_LEVEL_OPTIONS is not set
# CONFIG_MACH_AVR is not set
# CONFIG_MACH_ATSAM is not set
# CONFIG_MACH_ATSAMD is not set
# CONFIG_MACH_LPC176X is not set
# CONFIG_MACH_STM32 is not set
# CONFIG_MACH_HC32F460 is not set
# CONFIG_MACH_RP2040 is not set
# CONFIG_MACH_PRU is not set
# CONFIG_MACH_AR100 is not set
CONFIG_MACH_LINUX=y
# CONFIG_MACH_SIMU is not set
CONFIG_BOARD_DIRECTORY="linux"
CONFIG_CLOCK_FREQ=50000000
CONFIG_LINUX_SELECT=y
CONFIG_USB_VENDOR_ID=0x1d50
CONFIG_USB_DEVICE_ID=0x614e
CONFIG_USB_SERIAL_NUMBER="12345"
CONFIG_WANT_GPIO_BITBANGING=y
CONFIG_WANT_DISPLAYS=y
CONFIG_WANT_SENSORS=y
CONFIG_WANT_LIS2DW=y
CONFIG_WANT_LDC1612=y
CONFIG_WANT_SOFTWARE_I2C=y
CONFIG_WANT_SOFTWARE_SPI=y
CONFIG_NEED_SENSOR_BULK=y
CONFIG_CANBUS_FREQUENCY=1000000
CONFIG_HAVE_GPIO=y
CONFIG_HAVE_GPIO_ADC=y
CONFIG_HAVE_GPIO_SPI=y
CONFIG_HAVE_GPIO_I2C=y
CONFIG_HAVE_GPIO_HARD_PWM=y
CONFIG_INLINE_STEPPER_HACK=y
=======================
Build file /home/pi/klipper/klippy/../out/klipper.dict(9535): Sat Apr 20 22:38:48 2024
Last MCU build version: v0.12.0-169-g28faf814
Last MCU build tools: gcc: (Raspbian 10.2.1-6+rpi1) 10.2.1 20210110 binutils: (GNU Binutils for Raspbian) 2.35.2
Last MCU build config: ADC_MAX=4095 CLOCK_FREQ=50000000 MCU=linux PCA9685_MAX=4096 PWM_MAX=32768 STATS_SUMSQ_BASE=256
Build file /home/pi/klipper/klippy/../out/klipper.elf(712672): Sat Apr 20 22:38:52 2024
Attempting MCU 'mcu' reset
Unhandled exception during post run
Traceback (most recent call last):
  File "/home/pi/klippy-env/lib/python3.9/site-packages/serial/serialposix.py", line 265, in open
    self.fd = os.open(self.portstr, os.O_RDWR | os.O_NOCTTY | os.O_NONBLOCK)
FileNotFoundError: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 234, in run
    self.send_event("klippy:firmware_restart")
  File "/home/pi/klipper/klippy/klippy.py", line 263, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/klippy.py", line 263, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/mcu.py", line 953, in _firmware_restart
    self._restart_arduino()
  File "/home/pi/klipper/klippy/mcu.py", line 913, in _restart_arduino
    serialhdl.arduino_reset(self._serialport, self._reactor)
  File "/home/pi/klipper/klippy/serialhdl.py", line 379, in arduino_reset
    ser = serial.Serial(serialport, 2400, timeout=0, exclusive=True)
  File "/home/pi/klippy-env/lib/python3.9/site-packages/serial/serialutil.py", line 240, in __init__
    self.open()
  File "/home/pi/klippy-env/lib/python3.9/site-packages/serial/serialposix.py", line 268, in open
    raise SerialException(msg.errno, "could not open port {}: {}".format(self._port, msg))
serial.serialutil.SerialException: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
Restarting printer
Start printer at Sat Apr 20 23:09:22 2024 (1713650962.4 708.3)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
webhooks client 4123141312: New connection
webhooks client 4123141312: Client info {'program': 'Moonraker', 'version': 'v0.8.0-325-g99b97af'}
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
MCU error during connect
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/mcu.py", line 791, in _mcu_identify
    self._serial.connect_uart(self._serialport, self._baud, rts)
  File "/home/pi/klipper/klippy/serialhdl.py", line 182, in connect_uart
    self._error("Unable to connect")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Unable to connect

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 176, in _connect
    self.send_event("klippy:mcu_identify")
  File "/home/pi/klipper/klippy/klippy.py", line 263, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/klippy.py", line 263, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/mcu.py", line 796, in _mcu_identify
    raise error(str(e))
mcu.error: mcu 'mcu': Unable to connect
Build file /home/pi/klipper/klippy/../.config(914): Sat Apr 20 22:38:30 2024
========= Last MCU build config =========
# CONFIG_LOW_LEVEL_OPTIONS is not set
# CONFIG_MACH_AVR is not set
# CONFIG_MACH_ATSAM is not set
# CONFIG_MACH_ATSAMD is not set
# CONFIG_MACH_LPC176X is not set
# CONFIG_MACH_STM32 is not set
# CONFIG_MACH_HC32F460 is not set
# CONFIG_MACH_RP2040 is not set
# CONFIG_MACH_PRU is not set
# CONFIG_MACH_AR100 is not set
CONFIG_MACH_LINUX=y
# CONFIG_MACH_SIMU is not set
CONFIG_BOARD_DIRECTORY="linux"
CONFIG_CLOCK_FREQ=50000000
CONFIG_LINUX_SELECT=y
CONFIG_USB_VENDOR_ID=0x1d50
CONFIG_USB_DEVICE_ID=0x614e
CONFIG_USB_SERIAL_NUMBER="12345"
CONFIG_WANT_GPIO_BITBANGING=y
CONFIG_WANT_DISPLAYS=y
CONFIG_WANT_SENSORS=y
CONFIG_WANT_LIS2DW=y
CONFIG_WANT_LDC1612=y
CONFIG_WANT_SOFTWARE_I2C=y
CONFIG_WANT_SOFTWARE_SPI=y
CONFIG_NEED_SENSOR_BULK=y
CONFIG_CANBUS_FREQUENCY=1000000
CONFIG_HAVE_GPIO=y
CONFIG_HAVE_GPIO_ADC=y
CONFIG_HAVE_GPIO_SPI=y
CONFIG_HAVE_GPIO_I2C=y
CONFIG_HAVE_GPIO_HARD_PWM=y
CONFIG_INLINE_STEPPER_HACK=y
=======================
Build file /home/pi/klipper/klippy/../out/klipper.dict(9535): Sat Apr 20 22:38:48 2024
Last MCU build version: v0.12.0-169-g28faf814
Last MCU build tools: gcc: (Raspbian 10.2.1-6+rpi1) 10.2.1 20210110 binutils: (GNU Binutils for Raspbian) 2.35.2
Last MCU build config: ADC_MAX=4095 CLOCK_FREQ=50000000 MCU=linux PCA9685_MAX=4096 PWM_MAX=32768 STATS_SUMSQ_BASE=256
Build file /home/pi/klipper/klippy/../out/klipper.elf(712672): Sat Apr 20 22:38:52 2024
webhooks client 4123141312: Disconnected
Starting Klippy...
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/printer_data/config/printer.cfg', '-l', '/home/pi/printer_data/logs/klippy.log', '-I', '/home/pi/printer_data/comms/klippy.serial', '-a', '/home/pi/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-169-g28faf814-dirty'
Untracked files: klippy/extras/autotune_tmc.py, klippy/extras/beacon.py, klippy/extras/gcode_shell_command.py, klippy/extras/linear_movement_vibrations.py, klippy/extras/motor_constants.py, klippy/extras/ratos_homing.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Mar 12 2021, 04:06:34) \n[GCC 10.2.1 20210110]'
Start printer at Sat Apr 20 23:15:05 2024 (1713651305.2 23.8)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
webhooks client 4130283136: New connection
webhooks client 4130283136: Client info {'program': 'Moonraker', 'version': 'v0.8.0-325-g99b97af'}
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
webhooks client 4130283136: Disconnected
webhooks client 4130283160: New connection
webhooks client 4130283160: Client info {'program': 'Moonraker', 'version': 'v0.8.0-325-g99b97af'}
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
MCU error during connect
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/mcu.py", line 791, in _mcu_identify
    self._serial.connect_uart(self._serialport, self._baud, rts)
  File "/home/pi/klipper/klippy/serialhdl.py", line 182, in connect_uart
    self._error("Unable to connect")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Unable to connect

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 176, in _connect
    self.send_event("klippy:mcu_identify")
  File "/home/pi/klipper/klippy/klippy.py", line 263, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/klippy.py", line 263, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/mcu.py", line 796, in _mcu_identify
    raise error(str(e))
mcu.error: mcu 'mcu': Unable to connect
Build file /home/pi/klipper/klippy/../.config(914): Sat Apr 20 22:38:30 2024
========= Last MCU build config =========
# CONFIG_LOW_LEVEL_OPTIONS is not set
# CONFIG_MACH_AVR is not set
# CONFIG_MACH_ATSAM is not set
# CONFIG_MACH_ATSAMD is not set
# CONFIG_MACH_LPC176X is not set
# CONFIG_MACH_STM32 is not set
# CONFIG_MACH_HC32F460 is not set
# CONFIG_MACH_RP2040 is not set
# CONFIG_MACH_PRU is not set
# CONFIG_MACH_AR100 is not set
CONFIG_MACH_LINUX=y
# CONFIG_MACH_SIMU is not set
CONFIG_BOARD_DIRECTORY="linux"
CONFIG_CLOCK_FREQ=50000000
CONFIG_LINUX_SELECT=y
CONFIG_USB_VENDOR_ID=0x1d50
CONFIG_USB_DEVICE_ID=0x614e
CONFIG_USB_SERIAL_NUMBER="12345"
CONFIG_WANT_GPIO_BITBANGING=y
CONFIG_WANT_DISPLAYS=y
CONFIG_WANT_SENSORS=y
CONFIG_WANT_LIS2DW=y
CONFIG_WANT_LDC1612=y
CONFIG_WANT_SOFTWARE_I2C=y
CONFIG_WANT_SOFTWARE_SPI=y
CONFIG_NEED_SENSOR_BULK=y
CONFIG_CANBUS_FREQUENCY=1000000
CONFIG_HAVE_GPIO=y
CONFIG_HAVE_GPIO_ADC=y
CONFIG_HAVE_GPIO_SPI=y
CONFIG_HAVE_GPIO_I2C=y
CONFIG_HAVE_GPIO_HARD_PWM=y
CONFIG_INLINE_STEPPER_HACK=y
=======================
Build file /home/pi/klipper/klippy/../out/klipper.dict(9535): Sat Apr 20 22:38:48 2024
Last MCU build version: v0.12.0-169-g28faf814
Last MCU build tools: gcc: (Raspbian 10.2.1-6+rpi1) 10.2.1 20210110 binutils: (GNU Binutils for Raspbian) 2.35.2
Last MCU build config: ADC_MAX=4095 CLOCK_FREQ=50000000 MCU=linux PCA9685_MAX=4096 PWM_MAX=32768 STATS_SUMSQ_BASE=256
Build file /home/pi/klipper/klippy/../out/klipper.elf(712672): Sat Apr 20 22:38:52 2024
webhooks client 4130283160: Disconnected
Starting Klippy...
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/printer_data/config/printer.cfg', '-l', '/home/pi/printer_data/logs/klippy.log', '-I', '/home/pi/printer_data/comms/klippy.serial', '-a', '/home/pi/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-169-g28faf814-dirty'
Untracked files: klippy/extras/autotune_tmc.py, klippy/extras/beacon.py, klippy/extras/gcode_shell_command.py, klippy/extras/linear_movement_vibrations.py, klippy/extras/motor_constants.py, klippy/extras/ratos_homing.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Mar 12 2021, 04:06:34) \n[GCC 10.2.1 20210110]'
Start printer at Sat Apr 20 23:17:17 2024 (1713651437.7 23.2)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
webhooks client 4130320000: New connection
webhooks client 4130320000: Client info {'program': 'Moonraker', 'version': 'v0.8.0-325-g99b97af'}
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
Starting Klippy...
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/printer_data/config/printer.cfg', '-l', '/home/pi/printer_data/logs/klippy.log', '-I', '/home/pi/printer_data/comms/klippy.serial', '-a', '/home/pi/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-169-g28faf814-dirty'
Untracked files: klippy/extras/autotune_tmc.py, klippy/extras/beacon.py, klippy/extras/gcode_shell_command.py, klippy/extras/linear_movement_vibrations.py, klippy/extras/motor_constants.py, klippy/extras/ratos_homing.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Mar 12 2021, 04:06:34) \n[GCC 10.2.1 20210110]'
Start printer at Sat Apr 20 23:17:31 2024 (1713651451.7 37.3)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
webhooks client 4120314136: New connection
webhooks client 4120314136: Client info {'program': 'Moonraker', 'version': 'v0.8.0-325-g99b97af'}
webhooks client 4120314136: Disconnected
webhooks client 4120681152: New connection
webhooks client 4120681152: Client info {'program': 'Moonraker', 'version': 'v0.8.0-327-g9447494'}
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
Loaded MCU 'mcu' 112 commands (v0.12.0-169-g28faf814 / gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.34-4+rpi1+14) 2.34)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1_PB6_PB7=PB6,PB7 BUS_PINS_i2c1_PB8_PB9=PB8,PB9 BUS_PINS_i2c2_PB10_PB11=PB10,PB11 BUS_PINS_i2c3_PA8_PC9=PA8,PC9 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi2a=PC2,PC3,PB10 BUS_PINS_spi3a=PC11,PC12,PC10 BUS_PINS_spi4=PE13,PE14,PE12 BUS_PINS_spi5=PF8,PF9,PF7 BUS_PINS_spi5a=PH7,PF11,PH6 BUS_PINS_spi6=PG12,PG14,PG13 CLOCK_FREQ=400000000 MCU=stm32h723xx PWM_MAX=255 RESERVE_PINS_USB=PA11,PA12 RESERVE_PINS_crystal=PH0,PH1 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
mcu 'rpi': Starting connect
Loaded MCU 'rpi' 118 commands (v0.12.0-169-g28faf814 / gcc: (Raspbian 10.2.1-6+rpi1) 10.2.1 20210110 binutils: (GNU Binutils for Raspbian) 2.35.2)
MCU 'rpi' config: ADC_MAX=4095 CLOCK_FREQ=50000000 MCU=linux PCA9685_MAX=4096 PWM_MAX=32768 STATS_SUMSQ_BASE=256
mcu_temperature 'mcu' nominal base=-273.952569 slope=1618.577075
Sending MCU 'mcu' printer configuration...
Configured MCU 'mcu' (1024 moves)
Sending MCU 'rpi' printer configuration...
Configured MCU 'rpi' (1024 moves)
Starting heater checks for heater_bed
bed_mesh: generated points
Index |  Tool Adjusted  |   Probe
  0   | (40.0, 23.0)    | (10.0, 8.4)
  1   | (57.8, 23.0)    | (27.8, 8.4)
  2   | (75.5, 23.0)    | (45.5, 8.4)
  3   | (93.3, 23.0)    | (63.3, 8.4)
  4   | (111.1, 23.0)   | (81.1, 8.4)
  5   | (128.8, 23.0)   | (98.8, 8.4)
  6   | (146.6, 23.0)   | (116.6, 8.4)
  7   | (164.4, 23.0)   | (134.4, 8.4)
  8   | (182.2, 23.0)   | (152.2, 8.4)
  9   | (199.9, 23.0)   | (169.9, 8.4)
  10  | (199.9, 42.7)   | (169.9, 28.1)
  11  | (182.2, 42.7)   | (152.2, 28.1)
  12  | (164.4, 42.7)   | (134.4, 28.1)
  13  | (146.6, 42.7)   | (116.6, 28.1)
  14  | (128.9, 42.7)   | (98.9, 28.1)
  15  | (111.1, 42.7)   | (81.1, 28.1)
  16  | (93.3, 42.7)    | (63.3, 28.1)
  17  | (75.5, 42.7)    | (45.5, 28.1)
  18  | (57.8, 42.7)    | (27.8, 28.1)
  19  | (40.0, 42.7)    | (10.0, 28.1)
  20  | (40.0, 62.3)    | (10.0, 47.8)
  21  | (57.8, 62.3)    | (27.8, 47.8)
  22  | (75.5, 62.3)    | (45.5, 47.8)
  23  | (93.3, 62.3)    | (63.3, 47.8)
  24  | (111.1, 62.3)   | (81.1, 47.8)
  25  | (128.8, 62.3)   | (98.8, 47.8)
  26  | (146.6, 62.3)   | (116.6, 47.8)
  27  | (164.4, 62.3)   | (134.4, 47.8)
  28  | (182.2, 62.3)   | (152.2, 47.8)
  29  | (199.9, 62.3)   | (169.9, 47.8)
  30  | (199.9, 82.0)   | (169.9, 67.4)
  31  | (182.2, 82.0)   | (152.2, 67.4)
  32  | (164.4, 82.0)   | (134.4, 67.4)
  33  | (146.6, 82.0)   | (116.6, 67.4)
  34  | (128.9, 82.0)   | (98.9, 67.4)
  35  | (111.1, 82.0)   | (81.1, 67.4)
  36  | (93.3, 82.0)    | (63.3, 67.4)
  37  | (75.5, 82.0)    | (45.5, 67.4)
  38  | (57.8, 82.0)    | (27.8, 67.4)
  39  | (40.0, 82.0)    | (10.0, 67.4)
  40  | (40.0, 101.6)   | (10.0, 87.1)
  41  | (57.8, 101.6)   | (27.8, 87.1)
  42  | (75.5, 101.6)   | (45.5, 87.1)
  43  | (93.3, 101.6)   | (63.3, 87.1)
  44  | (111.1, 101.6)  | (81.1, 87.1)
  45  | (128.8, 101.6)  | (98.8, 87.1)
  46  | (146.6, 101.6)  | (116.6, 87.1)
  47  | (164.4, 101.6)  | (134.4, 87.1)
  48  | (182.2, 101.6)  | (152.2, 87.1)
  49  | (199.9, 101.6)  | (169.9, 87.1)
  50  | (199.9, 121.3)  | (169.9, 106.7)
  51  | (182.2, 121.3)  | (152.2, 106.7)
  52  | (164.4, 121.3)  | (134.4, 106.7)
  53  | (146.6, 121.3)  | (116.6, 106.7)
  54  | (128.9, 121.3)  | (98.9, 106.7)
  55  | (111.1, 121.3)  | (81.1, 106.7)
  56  | (93.3, 121.3)   | (63.3, 106.7)
  57  | (75.5, 121.3)   | (45.5, 106.7)
  58  | (57.8, 121.3)   | (27.8, 106.7)
  59  | (40.0, 121.3)   | (10.0, 106.7)
  60  | (40.0, 141.0)   | (10.0, 126.4)
  61  | (57.8, 141.0)   | (27.8, 126.4)
  62  | (75.5, 141.0)   | (45.5, 126.4)
  63  | (93.3, 141.0)   | (63.3, 126.4)
  64  | (111.1, 141.0)  | (81.1, 126.4)
  65  | (128.8, 141.0)  | (98.8, 126.4)
  66  | (146.6, 141.0)  | (116.6, 126.4)
  67  | (164.4, 141.0)  | (134.4, 126.4)
  68  | (182.2, 141.0)  | (152.2, 126.4)
  69  | (199.9, 141.0)  | (169.9, 126.4)
  70  | (199.9, 160.6)  | (169.9, 146.1)
  71  | (182.2, 160.6)  | (152.2, 146.1)
  72  | (164.4, 160.6)  | (134.4, 146.1)
  73  | (146.6, 160.6)  | (116.6, 146.1)
  74  | (128.9, 160.6)  | (98.9, 146.1)
  75  | (111.1, 160.6)  | (81.1, 146.1)
  76  | (93.3, 160.6)   | (63.3, 146.1)
  77  | (75.5, 160.6)   | (45.5, 146.1)
  78  | (57.8, 160.6)   | (27.8, 146.1)
  79  | (40.0, 160.6)   | (10.0, 146.1)
  80  | (40.0, 180.3)   | (10.0, 165.7)
  81  | (57.8, 180.3)   | (27.8, 165.7)
  82  | (75.5, 180.3)   | (45.5, 165.7)
  83  | (93.3, 180.3)   | (63.3, 165.7)
  84  | (111.1, 180.3)  | (81.1, 165.7)
  85  | (128.8, 180.3)  | (98.8, 165.7)
  86  | (146.6, 180.3)  | (116.6, 165.7)
  87  | (164.4, 180.3)  | (134.4, 165.7)
  88  | (182.2, 180.3)  | (152.2, 165.7)
  89  | (199.9, 180.3)  | (169.9, 165.7)
  90  | (199.9, 199.9)  | (169.9, 185.4)
  91  | (182.2, 199.9)  | (152.2, 185.4)
  92  | (164.4, 199.9)  | (134.4, 185.4)
  93  | (146.6, 199.9)  | (116.6, 185.4)
  94  | (128.9, 199.9)  | (98.9, 185.4)
  95  | (111.1, 199.9)  | (81.1, 185.4)
  96  | (93.3, 199.9)   | (63.3, 185.4)
  97  | (75.5, 199.9)   | (45.5, 185.4)
  98  | (57.8, 199.9)   | (27.8, 185.4)
  99  | (40.0, 199.9)   | (10.0, 185.4)
Starting heater checks for extruder
autotune_tmc set stepper_x pwm_freq=2
autotune_tmc stepper_x ncycles=219 pfdcycles=73
autotune_tmc set stepper_x tpfd=1
autotune_tmc set stepper_x tbl=1
autotune_tmc set stepper_x toff=1
autotune_tmc seting hysteresis based on 48.0 V
dcoilblank = 0.160000, dcoilsd = 0.015156
hysteresis = 42, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_x hstrt=7
autotune_tmc set stepper_x hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_x pwm_autoscale=True
autotune_tmc set stepper_x pwm_autograd=True
autotune_tmc set stepper_x pwm_grad=4
autotune_tmc set stepper_x pwm_ofs=10
autotune_tmc set stepper_x pwm_reg=15
autotune_tmc set stepper_x pwm_lim=4
autotune_tmc set stepper_x tpwmthrs=1048575
autotune_tmc set stepper_x en_pwm_mode=False
autotune_tmc set stepper_x tcoolthrs=391(24.0)
autotune_tmc set stepper_x sgt=1
autotune_tmc set stepper_x small_hysteresis=False
autotune_tmc set stepper_x semin=2
autotune_tmc set stepper_x semax=2
autotune_tmc set stepper_x seup=3
autotune_tmc set stepper_x sedn=2
autotune_tmc set stepper_x seimin=0
autotune_tmc set stepper_x sfilt=0
autotune_tmc set stepper_x iholddelay=12
autotune_tmc set stepper_x vhighfs=False
autotune_tmc set stepper_x vhighchm=False
autotune_tmc set stepper_x multistep_filt=True
autotune_tmc set stepper_x1 pwm_freq=2
autotune_tmc stepper_x1 ncycles=219 pfdcycles=73
autotune_tmc set stepper_x1 tpfd=1
autotune_tmc set stepper_x1 tbl=1
autotune_tmc set stepper_x1 toff=1
autotune_tmc seting hysteresis based on 48.0 V
dcoilblank = 0.160000, dcoilsd = 0.015156
hysteresis = 42, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_x1 hstrt=7
autotune_tmc set stepper_x1 hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_x1 pwm_autoscale=True
autotune_tmc set stepper_x1 pwm_autograd=True
autotune_tmc set stepper_x1 pwm_grad=4
autotune_tmc set stepper_x1 pwm_ofs=10
autotune_tmc set stepper_x1 pwm_reg=15
autotune_tmc set stepper_x1 pwm_lim=4
autotune_tmc set stepper_x1 tpwmthrs=1048575
autotune_tmc set stepper_x1 en_pwm_mode=False
autotune_tmc set stepper_x1 tcoolthrs=391(24.0)
autotune_tmc set stepper_x1 sgt=1
autotune_tmc set stepper_x1 small_hysteresis=False
autotune_tmc set stepper_x1 semin=2
autotune_tmc set stepper_x1 semax=2
autotune_tmc set stepper_x1 seup=3
autotune_tmc set stepper_x1 sedn=2
autotune_tmc set stepper_x1 seimin=0
autotune_tmc set stepper_x1 sfilt=0
autotune_tmc set stepper_x1 iholddelay=12
autotune_tmc set stepper_x1 vhighfs=False
autotune_tmc set stepper_x1 vhighchm=False
autotune_tmc set stepper_x1 multistep_filt=True
autotune_tmc set stepper_y pwm_freq=2
autotune_tmc stepper_y ncycles=219 pfdcycles=73
autotune_tmc set stepper_y tpfd=1
autotune_tmc set stepper_y tbl=1
autotune_tmc set stepper_y toff=1
autotune_tmc seting hysteresis based on 48.0 V
dcoilblank = 0.160000, dcoilsd = 0.015156
hysteresis = 42, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_y hstrt=7
autotune_tmc set stepper_y hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_y pwm_autoscale=True
autotune_tmc set stepper_y pwm_autograd=True
autotune_tmc set stepper_y pwm_grad=4
autotune_tmc set stepper_y pwm_ofs=10
autotune_tmc set stepper_y pwm_reg=15
autotune_tmc set stepper_y pwm_lim=4
autotune_tmc set stepper_y tpwmthrs=1048575
autotune_tmc set stepper_y en_pwm_mode=False
autotune_tmc set stepper_y tcoolthrs=391(24.0)
autotune_tmc set stepper_y sgt=1
autotune_tmc set stepper_y small_hysteresis=False
autotune_tmc set stepper_y semin=2
autotune_tmc set stepper_y semax=2
autotune_tmc set stepper_y seup=3
autotune_tmc set stepper_y sedn=2
autotune_tmc set stepper_y seimin=0
autotune_tmc set stepper_y sfilt=0
autotune_tmc set stepper_y iholddelay=12
autotune_tmc set stepper_y vhighfs=False
autotune_tmc set stepper_y vhighchm=False
autotune_tmc set stepper_y multistep_filt=True
autotune_tmc set stepper_y1 pwm_freq=2
autotune_tmc stepper_y1 ncycles=219 pfdcycles=73
autotune_tmc set stepper_y1 tpfd=1
autotune_tmc set stepper_y1 tbl=1
autotune_tmc set stepper_y1 toff=1
autotune_tmc seting hysteresis based on 48.0 V
dcoilblank = 0.160000, dcoilsd = 0.015156
hysteresis = 42, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_y1 hstrt=7
autotune_tmc set stepper_y1 hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_y1 pwm_autoscale=True
autotune_tmc set stepper_y1 pwm_autograd=True
autotune_tmc set stepper_y1 pwm_grad=4
autotune_tmc set stepper_y1 pwm_ofs=10
autotune_tmc set stepper_y1 pwm_reg=15
autotune_tmc set stepper_y1 pwm_lim=4
autotune_tmc set stepper_y1 tpwmthrs=1048575
autotune_tmc set stepper_y1 en_pwm_mode=False
autotune_tmc set stepper_y1 tcoolthrs=391(24.0)
autotune_tmc set stepper_y1 sgt=1
autotune_tmc set stepper_y1 small_hysteresis=False
autotune_tmc set stepper_y1 semin=2
autotune_tmc set stepper_y1 semax=2
autotune_tmc set stepper_y1 seup=3
autotune_tmc set stepper_y1 sedn=2
autotune_tmc set stepper_y1 seimin=0
autotune_tmc set stepper_y1 sfilt=0
autotune_tmc set stepper_y1 iholddelay=12
autotune_tmc set stepper_y1 vhighfs=False
autotune_tmc set stepper_y1 vhighchm=False
autotune_tmc set stepper_y1 multistep_filt=True
autotune_tmc set stepper_z pwm_freq=2
autotune_tmc stepper_z ncycles=219 pfdcycles=73
autotune_tmc set stepper_z tbl=1
autotune_tmc set stepper_z toff=1
autotune_tmc seting hysteresis based on 24.0 V
dcoilblank = 0.080000, dcoilsd = 0.013495
hysteresis = 22, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_z hstrt=7
autotune_tmc set stepper_z hend=9
autotune_tmc set stepper_z sgthrs=40
autotune_tmc using max PWM speed 43.108253
autotune_tmc set stepper_z pwm_autoscale=True
autotune_tmc set stepper_z pwm_autograd=True
autotune_tmc set stepper_z pwm_grad=7
autotune_tmc set stepper_z pwm_ofs=18
autotune_tmc set stepper_z pwm_reg=15
autotune_tmc set stepper_z pwm_lim=4
autotune_tmc set stepper_z tpwmthrs=1048575
autotune_tmc set stepper_z en_spreadcycle=True
autotune_tmc set stepper_z tcoolthrs=391(2.4)
autotune_tmc set stepper_z semin=2
autotune_tmc set stepper_z semax=2
autotune_tmc set stepper_z seup=3
autotune_tmc set stepper_z sedn=2
autotune_tmc set stepper_z seimin=0
autotune_tmc set stepper_z iholddelay=12
autotune_tmc set stepper_z multistep_filt=True
autotune_tmc set stepper_z1 pwm_freq=2
autotune_tmc stepper_z1 ncycles=219 pfdcycles=73
autotune_tmc set stepper_z1 tbl=1
autotune_tmc set stepper_z1 toff=1
autotune_tmc seting hysteresis based on 24.0 V
dcoilblank = 0.080000, dcoilsd = 0.013495
hysteresis = 22, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_z1 hstrt=7
autotune_tmc set stepper_z1 hend=9
autotune_tmc set stepper_z1 sgthrs=40
autotune_tmc using max PWM speed 43.108253
autotune_tmc set stepper_z1 pwm_autoscale=True
autotune_tmc set stepper_z1 pwm_autograd=True
autotune_tmc set stepper_z1 pwm_grad=7
autotune_tmc set stepper_z1 pwm_ofs=18
autotune_tmc set stepper_z1 pwm_reg=15
autotune_tmc set stepper_z1 pwm_lim=4
autotune_tmc set stepper_z1 tpwmthrs=1048575
autotune_tmc set stepper_z1 en_spreadcycle=True
autotune_tmc set stepper_z1 tcoolthrs=391(2.4)
autotune_tmc set stepper_z1 semin=2
autotune_tmc set stepper_z1 semax=2
autotune_tmc set stepper_z1 seup=3
autotune_tmc set stepper_z1 sedn=2
autotune_tmc set stepper_z1 seimin=0
autotune_tmc set stepper_z1 iholddelay=12
autotune_tmc set stepper_z1 multistep_filt=True
autotune_tmc set stepper_z2 pwm_freq=2
autotune_tmc stepper_z2 ncycles=219 pfdcycles=73
autotune_tmc set stepper_z2 tbl=1
autotune_tmc set stepper_z2 toff=1
autotune_tmc seting hysteresis based on 24.0 V
dcoilblank = 0.080000, dcoilsd = 0.013495
hysteresis = 22, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_z2 hstrt=7
autotune_tmc set stepper_z2 hend=9
autotune_tmc set stepper_z2 sgthrs=40
autotune_tmc using max PWM speed 43.108253
autotune_tmc set stepper_z2 pwm_autoscale=True
autotune_tmc set stepper_z2 pwm_autograd=True
autotune_tmc set stepper_z2 pwm_grad=7
autotune_tmc set stepper_z2 pwm_ofs=18
autotune_tmc set stepper_z2 pwm_reg=15
autotune_tmc set stepper_z2 pwm_lim=4
autotune_tmc set stepper_z2 tpwmthrs=1048575
autotune_tmc set stepper_z2 en_spreadcycle=True
autotune_tmc set stepper_z2 tcoolthrs=391(2.4)
autotune_tmc set stepper_z2 semin=2
autotune_tmc set stepper_z2 semax=2
autotune_tmc set stepper_z2 seup=3
autotune_tmc set stepper_z2 sedn=2
autotune_tmc set stepper_z2 seimin=0
autotune_tmc set stepper_z2 iholddelay=12
autotune_tmc set stepper_z2 multistep_filt=True
webhooks: registering remote method 'shutdown_machine' for connection id: 4120681152
Stats 71.5: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=9370 bytes_read=12325 bytes_retransmit=9 bytes_invalid=0 send_seq=647 receive_seq=647 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400014707 rpi: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=831 bytes_read=4762 bytes_retransmit=0 bytes_invalid=0 send_seq=113 receive_seq=113 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000810 adj=49995345 Octopus_Max: temp=33.6 Pi: temp=38.5  heater_bed: target=0 temp=0.0 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.95 cputime=2.275 memavail=7494780 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
webhooks: registering remote method 'reboot_machine' for connection id: 4120681152
webhooks: registering remote method 'pause_job_queue' for connection id: 4120681152
webhooks: registering remote method 'start_job_queue' for connection id: 4120681152
webhooks: registering remote method 'set_device_power' for connection id: 4120681152
Stats 72.5: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000008 mcu_task_stddev=0.000060 bytes_write=9376 bytes_read=12635 bytes_retransmit=9 bytes_invalid=0 send_seq=648 receive_seq=648 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400019770 rpi: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=843 bytes_read=4794 bytes_retransmit=0 bytes_invalid=0 send_seq=115 receive_seq=115 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999318 adj=50000318 Octopus_Max: temp=33.8 Pi: temp=39.4  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.95 cputime=2.321 memavail=7497988 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 73.5: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000008 mcu_task_stddev=0.000060 bytes_write=9382 bytes_read=12932 bytes_retransmit=9 bytes_invalid=0 send_seq=649 receive_seq=649 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400022478 rpi: mcu_awake=0.003 mcu_task_avg=0.000020 mcu_task_stddev=0.000011 bytes_write=849 bytes_read=4824 bytes_retransmit=0 bytes_invalid=0 send_seq=116 receive_seq=116 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49998896 adj=49996047 Octopus_Max: temp=33.8 Pi: temp=40.4  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.95 cputime=2.332 memavail=7498492 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 74.5: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000008 mcu_task_stddev=0.000060 bytes_write=9388 bytes_read=13214 bytes_retransmit=9 bytes_invalid=0 send_seq=650 receive_seq=650 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400023587 rpi: mcu_awake=0.003 mcu_task_avg=0.000020 mcu_task_stddev=0.000011 bytes_write=855 bytes_read=4840 bytes_retransmit=0 bytes_invalid=0 send_seq=117 receive_seq=117 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49998734 adj=49994649 Octopus_Max: temp=33.7 Pi: temp=39.4  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=26.9 barrow: temp=-110.0 sysload=0.95 cputime=2.344 memavail=7498492 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 75.5: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000008 mcu_task_stddev=0.000060 bytes_write=9394 bytes_read=13525 bytes_retransmit=9 bytes_invalid=0 send_seq=651 receive_seq=651 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400024361 rpi: mcu_awake=0.003 mcu_task_avg=0.000020 mcu_task_stddev=0.000011 bytes_write=861 bytes_read=4856 bytes_retransmit=0 bytes_invalid=0 send_seq=118 receive_seq=118 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49998656 adj=49994303 Octopus_Max: temp=34.0 Pi: temp=38.9  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-119.3 sysload=0.87 cputime=2.356 memavail=7498492 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 76.5: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000008 mcu_task_stddev=0.000060 bytes_write=9400 bytes_read=13808 bytes_retransmit=9 bytes_invalid=0 send_seq=652 receive_seq=652 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400026184 rpi: mcu_awake=0.003 mcu_task_avg=0.000020 mcu_task_stddev=0.000011 bytes_write=867 bytes_read=4872 bytes_retransmit=0 bytes_invalid=0 send_seq=119 receive_seq=119 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49998849 adj=49994224 Octopus_Max: temp=34.1 Pi: temp=38.9  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-119.3 sysload=0.87 cputime=2.375 memavail=7498492 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 77.5: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9406 bytes_read=14101 bytes_retransmit=9 bytes_invalid=0 send_seq=653 receive_seq=653 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400026664 rpi: mcu_awake=0.003 mcu_task_avg=0.000020 mcu_task_stddev=0.000011 bytes_write=873 bytes_read=4888 bytes_retransmit=0 bytes_invalid=0 send_seq=120 receive_seq=120 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49998981 adj=49994450 Octopus_Max: temp=34.0 Pi: temp=38.5  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-119.3 sysload=0.87 cputime=2.402 memavail=7496236 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 78.5: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9412 bytes_read=14400 bytes_retransmit=9 bytes_invalid=0 send_seq=654 receive_seq=654 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400026707 rpi: mcu_awake=0.003 mcu_task_avg=0.000020 mcu_task_stddev=0.000011 bytes_write=879 bytes_read=4904 bytes_retransmit=0 bytes_invalid=0 send_seq=121 receive_seq=121 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49998876 adj=49994940 Octopus_Max: temp=34.1 Pi: temp=38.9  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.87 cputime=2.419 memavail=7499132 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.8 pwm=0.000
Stats 79.5: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9418 bytes_read=14683 bytes_retransmit=9 bytes_invalid=0 send_seq=655 receive_seq=655 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400026654 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000014 bytes_write=885 bytes_read=4933 bytes_retransmit=0 bytes_invalid=0 send_seq=122 receive_seq=122 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49998817 adj=49994762 Octopus_Max: temp=34.2 Pi: temp=38.9  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.0 bed_core: temp=27.1 barrow: temp=-119.3 sysload=0.87 cputime=2.429 memavail=7499132 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 80.5: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9424 bytes_read=14965 bytes_retransmit=9 bytes_invalid=0 send_seq=656 receive_seq=656 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400026691 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000014 bytes_write=891 bytes_read=4949 bytes_retransmit=0 bytes_invalid=0 send_seq=123 receive_seq=123 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49998783 adj=49994777 Octopus_Max: temp=34.3 Pi: temp=38.9  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-119.3 sysload=0.80 cputime=2.441 memavail=7499132 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 81.5: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9430 bytes_read=15276 bytes_retransmit=9 bytes_invalid=0 send_seq=657 receive_seq=657 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400027282 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000014 bytes_write=897 bytes_read=4965 bytes_retransmit=0 bytes_invalid=0 send_seq=124 receive_seq=124 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49998767 adj=49994813 Octopus_Max: temp=34.3 Pi: temp=39.4  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-119.3 sysload=0.80 cputime=2.453 memavail=7499132 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 82.5: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9436 bytes_read=15573 bytes_retransmit=9 bytes_invalid=0 send_seq=658 receive_seq=658 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400027249 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000014 bytes_write=903 bytes_read=4981 bytes_retransmit=0 bytes_invalid=0 send_seq=125 receive_seq=125 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49998769 adj=49994617 Octopus_Max: temp=34.3 Pi: temp=38.5  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-103.8 sysload=0.80 cputime=2.464 memavail=7499132 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 83.5: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9442 bytes_read=15855 bytes_retransmit=9 bytes_invalid=0 send_seq=659 receive_seq=659 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400027479 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000014 bytes_write=909 bytes_read=4997 bytes_retransmit=0 bytes_invalid=0 send_seq=126 receive_seq=126 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49998856 adj=49994825 Octopus_Max: temp=34.4 Pi: temp=39.4  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-110.0 sysload=0.80 cputime=2.490 memavail=7499904 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.8 pwm=0.000
Stats 84.5: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9448 bytes_read=16166 bytes_retransmit=9 bytes_invalid=0 send_seq=660 receive_seq=660 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400027664 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000012 bytes_write=915 bytes_read=5026 bytes_retransmit=0 bytes_invalid=0 send_seq=127 receive_seq=127 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49998927 adj=49995210 Octopus_Max: temp=34.4 Pi: temp=37.0  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.80 cputime=2.516 memavail=7499904 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 85.5: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9454 bytes_read=16449 bytes_retransmit=9 bytes_invalid=0 send_seq=661 receive_seq=661 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400027736 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000012 bytes_write=921 bytes_read=5042 bytes_retransmit=0 bytes_invalid=0 send_seq=128 receive_seq=128 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49998945 adj=49995476 Octopus_Max: temp=34.5 Pi: temp=38.5  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.74 cputime=2.541 memavail=7494612 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 86.5: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9460 bytes_read=16731 bytes_retransmit=9 bytes_invalid=0 send_seq=662 receive_seq=662 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028018 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000012 bytes_write=927 bytes_read=5058 bytes_retransmit=0 bytes_invalid=0 send_seq=129 receive_seq=129 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49998931 adj=49995513 Octopus_Max: temp=34.6 Pi: temp=38.5  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.74 cputime=2.554 memavail=7500432 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 87.5: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9466 bytes_read=17056 bytes_retransmit=9 bytes_invalid=0 send_seq=663 receive_seq=663 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400027957 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000012 bytes_write=933 bytes_read=5074 bytes_retransmit=0 bytes_invalid=0 send_seq=130 receive_seq=130 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49998922 adj=49995260 Octopus_Max: temp=34.6 Pi: temp=38.5  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.0 bed_core: temp=26.9 barrow: temp=-119.3 sysload=0.74 cputime=2.566 memavail=7500516 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 88.5: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9472 bytes_read=17330 bytes_retransmit=9 bytes_invalid=0 send_seq=664 receive_seq=664 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400027893 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000012 bytes_write=939 bytes_read=5090 bytes_retransmit=0 bytes_invalid=0 send_seq=131 receive_seq=131 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49998920 adj=49995294 Octopus_Max: temp=34.6 Pi: temp=38.0  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=26.9 barrow: temp=-119.3 sysload=0.74 cputime=2.577 memavail=7500516 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 89.5: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9478 bytes_read=17607 bytes_retransmit=9 bytes_invalid=0 send_seq=665 receive_seq=665 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400027855 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000013 bytes_write=945 bytes_read=5119 bytes_retransmit=0 bytes_invalid=0 send_seq=132 receive_seq=132 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49998923 adj=49995359 Octopus_Max: temp=34.7 Pi: temp=39.4  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.74 cputime=2.589 memavail=7500516 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.8 pwm=0.000
Stats 90.5: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9484 bytes_read=17918 bytes_retransmit=9 bytes_invalid=0 send_seq=666 receive_seq=666 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400027795 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000013 bytes_write=951 bytes_read=5135 bytes_retransmit=0 bytes_invalid=0 send_seq=133 receive_seq=133 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49998964 adj=49995424 Octopus_Max: temp=34.7 Pi: temp=39.4  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-110.0 sysload=0.68 cputime=2.604 memavail=7500516 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 91.5: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9490 bytes_read=18201 bytes_retransmit=9 bytes_invalid=0 send_seq=667 receive_seq=667 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028105 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000013 bytes_write=957 bytes_read=5151 bytes_retransmit=0 bytes_invalid=0 send_seq=134 receive_seq=134 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999025 adj=49995703 Octopus_Max: temp=34.8 Pi: temp=38.9  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-119.3 sysload=0.68 cputime=2.636 memavail=7500516 print_time=24.720 buffer_time=0.228 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Attempting MCU 'mcu' reset command
Attempting MCU 'rpi' config_reset command
b'Got EOF when reading from device'
webhooks client 4120681152: Disconnected
Restarting printer
Start printer at Sat Apr 20 23:18:39 2024 (1713651519.5 92.9)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999

[state_notify]

[gcode_macro STATE_NOTIFY_EXAMPLE]
description = Display the state_notify state
gcode = 
	{% set st = printer.state_notify %}
	{action_respond_info("state_notify: state=%s, timeout=%" % (st.state, st.timeout))}
=======================
Extruder max_extrude_ratio=2.078758
Config error
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 175, in _connect
    self._read_config()
  File "/home/pi/klipper/klippy/klippy.py", line 145, in _read_config
    pconfig.check_unused_options(config)
  File "/home/pi/klipper/klippy/configfile.py", line 303, in check_unused_options
    raise error("Section '%s' is not a valid config section"
configparser.Error: Section 'state_notify' is not a valid config section
webhooks client 4121424800: New connection
webhooks client 4121424800: Client info {'program': 'Moonraker', 'version': 'v0.8.0-327-g9447494'}
Attempting MCU 'mcu' reset
Unable to issue reset command on MCU 'rpi'
webhooks client 4121424800: Disconnected
Restarting printer
Start printer at Sat Apr 20 23:18:52 2024 (1713651532.4 105.8)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999

[gcode_macro STATE_NOTIFY_EXAMPLE]
description = Display the state_notify state
gcode = 
	{% set st = printer.state_notify %}
	{action_respond_info("state_notify: state=%s, timeout=%" % (st.state, st.timeout))}
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
webhooks client 4127198560: New connection
webhooks client 4127198560: Client info {'program': 'Moonraker', 'version': 'v0.8.0-327-g9447494'}
mcu 'mcu': got {'count': 325, 'sum': 252788, 'sumsq': 1201585, '#name': 'stats', '#sent_time': 107.115811769, '#receive_time': 107.125854232}
Loaded MCU 'mcu' 112 commands (v0.12.0-169-g28faf814 / gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.34-4+rpi1+14) 2.34)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1_PB6_PB7=PB6,PB7 BUS_PINS_i2c1_PB8_PB9=PB8,PB9 BUS_PINS_i2c2_PB10_PB11=PB10,PB11 BUS_PINS_i2c3_PA8_PC9=PA8,PC9 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi2a=PC2,PC3,PB10 BUS_PINS_spi3a=PC11,PC12,PC10 BUS_PINS_spi4=PE13,PE14,PE12 BUS_PINS_spi5=PF8,PF9,PF7 BUS_PINS_spi5a=PH7,PF11,PH6 BUS_PINS_spi6=PG12,PG14,PG13 CLOCK_FREQ=400000000 MCU=stm32h723xx PWM_MAX=255 RESERVE_PINS_USB=PA11,PA12 RESERVE_PINS_crystal=PH0,PH1 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
mcu 'rpi': Starting connect
Loaded MCU 'rpi' 118 commands (v0.12.0-169-g28faf814 / gcc: (Raspbian 10.2.1-6+rpi1) 10.2.1 20210110 binutils: (GNU Binutils for Raspbian) 2.35.2)
MCU 'rpi' config: ADC_MAX=4095 CLOCK_FREQ=50000000 MCU=linux PCA9685_MAX=4096 PWM_MAX=32768 STATS_SUMSQ_BASE=256
mcu_temperature 'mcu' nominal base=-273.952569 slope=1618.577075
Sending MCU 'mcu' printer configuration...
Configured MCU 'mcu' (1024 moves)
Sending MCU 'rpi' printer configuration...
Configured MCU 'rpi' (1024 moves)
Starting heater checks for heater_bed
bed_mesh: generated points
Index |  Tool Adjusted  |   Probe
  0   | (40.0, 23.0)    | (10.0, 8.4)
  1   | (57.8, 23.0)    | (27.8, 8.4)
  2   | (75.5, 23.0)    | (45.5, 8.4)
  3   | (93.3, 23.0)    | (63.3, 8.4)
  4   | (111.1, 23.0)   | (81.1, 8.4)
  5   | (128.8, 23.0)   | (98.8, 8.4)
  6   | (146.6, 23.0)   | (116.6, 8.4)
  7   | (164.4, 23.0)   | (134.4, 8.4)
  8   | (182.2, 23.0)   | (152.2, 8.4)
  9   | (199.9, 23.0)   | (169.9, 8.4)
  10  | (199.9, 42.7)   | (169.9, 28.1)
  11  | (182.2, 42.7)   | (152.2, 28.1)
  12  | (164.4, 42.7)   | (134.4, 28.1)
  13  | (146.6, 42.7)   | (116.6, 28.1)
  14  | (128.9, 42.7)   | (98.9, 28.1)
  15  | (111.1, 42.7)   | (81.1, 28.1)
  16  | (93.3, 42.7)    | (63.3, 28.1)
  17  | (75.5, 42.7)    | (45.5, 28.1)
  18  | (57.8, 42.7)    | (27.8, 28.1)
  19  | (40.0, 42.7)    | (10.0, 28.1)
  20  | (40.0, 62.3)    | (10.0, 47.8)
  21  | (57.8, 62.3)    | (27.8, 47.8)
  22  | (75.5, 62.3)    | (45.5, 47.8)
  23  | (93.3, 62.3)    | (63.3, 47.8)
  24  | (111.1, 62.3)   | (81.1, 47.8)
  25  | (128.8, 62.3)   | (98.8, 47.8)
  26  | (146.6, 62.3)   | (116.6, 47.8)
  27  | (164.4, 62.3)   | (134.4, 47.8)
  28  | (182.2, 62.3)   | (152.2, 47.8)
  29  | (199.9, 62.3)   | (169.9, 47.8)
  30  | (199.9, 82.0)   | (169.9, 67.4)
  31  | (182.2, 82.0)   | (152.2, 67.4)
  32  | (164.4, 82.0)   | (134.4, 67.4)
  33  | (146.6, 82.0)   | (116.6, 67.4)
  34  | (128.9, 82.0)   | (98.9, 67.4)
  35  | (111.1, 82.0)   | (81.1, 67.4)
  36  | (93.3, 82.0)    | (63.3, 67.4)
  37  | (75.5, 82.0)    | (45.5, 67.4)
  38  | (57.8, 82.0)    | (27.8, 67.4)
  39  | (40.0, 82.0)    | (10.0, 67.4)
  40  | (40.0, 101.6)   | (10.0, 87.1)
  41  | (57.8, 101.6)   | (27.8, 87.1)
  42  | (75.5, 101.6)   | (45.5, 87.1)
  43  | (93.3, 101.6)   | (63.3, 87.1)
  44  | (111.1, 101.6)  | (81.1, 87.1)
  45  | (128.8, 101.6)  | (98.8, 87.1)
  46  | (146.6, 101.6)  | (116.6, 87.1)
  47  | (164.4, 101.6)  | (134.4, 87.1)
  48  | (182.2, 101.6)  | (152.2, 87.1)
  49  | (199.9, 101.6)  | (169.9, 87.1)
  50  | (199.9, 121.3)  | (169.9, 106.7)
  51  | (182.2, 121.3)  | (152.2, 106.7)
  52  | (164.4, 121.3)  | (134.4, 106.7)
  53  | (146.6, 121.3)  | (116.6, 106.7)
  54  | (128.9, 121.3)  | (98.9, 106.7)
  55  | (111.1, 121.3)  | (81.1, 106.7)
  56  | (93.3, 121.3)   | (63.3, 106.7)
  57  | (75.5, 121.3)   | (45.5, 106.7)
  58  | (57.8, 121.3)   | (27.8, 106.7)
  59  | (40.0, 121.3)   | (10.0, 106.7)
  60  | (40.0, 141.0)   | (10.0, 126.4)
  61  | (57.8, 141.0)   | (27.8, 126.4)
  62  | (75.5, 141.0)   | (45.5, 126.4)
  63  | (93.3, 141.0)   | (63.3, 126.4)
  64  | (111.1, 141.0)  | (81.1, 126.4)
  65  | (128.8, 141.0)  | (98.8, 126.4)
  66  | (146.6, 141.0)  | (116.6, 126.4)
  67  | (164.4, 141.0)  | (134.4, 126.4)
  68  | (182.2, 141.0)  | (152.2, 126.4)
  69  | (199.9, 141.0)  | (169.9, 126.4)
  70  | (199.9, 160.6)  | (169.9, 146.1)
  71  | (182.2, 160.6)  | (152.2, 146.1)
  72  | (164.4, 160.6)  | (134.4, 146.1)
  73  | (146.6, 160.6)  | (116.6, 146.1)
  74  | (128.9, 160.6)  | (98.9, 146.1)
  75  | (111.1, 160.6)  | (81.1, 146.1)
  76  | (93.3, 160.6)   | (63.3, 146.1)
  77  | (75.5, 160.6)   | (45.5, 146.1)
  78  | (57.8, 160.6)   | (27.8, 146.1)
  79  | (40.0, 160.6)   | (10.0, 146.1)
  80  | (40.0, 180.3)   | (10.0, 165.7)
  81  | (57.8, 180.3)   | (27.8, 165.7)
  82  | (75.5, 180.3)   | (45.5, 165.7)
  83  | (93.3, 180.3)   | (63.3, 165.7)
  84  | (111.1, 180.3)  | (81.1, 165.7)
  85  | (128.8, 180.3)  | (98.8, 165.7)
  86  | (146.6, 180.3)  | (116.6, 165.7)
  87  | (164.4, 180.3)  | (134.4, 165.7)
  88  | (182.2, 180.3)  | (152.2, 165.7)
  89  | (199.9, 180.3)  | (169.9, 165.7)
  90  | (199.9, 199.9)  | (169.9, 185.4)
  91  | (182.2, 199.9)  | (152.2, 185.4)
  92  | (164.4, 199.9)  | (134.4, 185.4)
  93  | (146.6, 199.9)  | (116.6, 185.4)
  94  | (128.9, 199.9)  | (98.9, 185.4)
  95  | (111.1, 199.9)  | (81.1, 185.4)
  96  | (93.3, 199.9)   | (63.3, 185.4)
  97  | (75.5, 199.9)   | (45.5, 185.4)
  98  | (57.8, 199.9)   | (27.8, 185.4)
  99  | (40.0, 199.9)   | (10.0, 185.4)
Starting heater checks for extruder
autotune_tmc set stepper_x pwm_freq=2
autotune_tmc stepper_x ncycles=219 pfdcycles=73
autotune_tmc set stepper_x tpfd=1
autotune_tmc set stepper_x tbl=1
autotune_tmc set stepper_x toff=1
autotune_tmc seting hysteresis based on 48.0 V
dcoilblank = 0.160000, dcoilsd = 0.015156
hysteresis = 42, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_x hstrt=7
autotune_tmc set stepper_x hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_x pwm_autoscale=True
autotune_tmc set stepper_x pwm_autograd=True
autotune_tmc set stepper_x pwm_grad=4
autotune_tmc set stepper_x pwm_ofs=10
autotune_tmc set stepper_x pwm_reg=15
autotune_tmc set stepper_x pwm_lim=4
autotune_tmc set stepper_x tpwmthrs=1048575
autotune_tmc set stepper_x en_pwm_mode=False
autotune_tmc set stepper_x tcoolthrs=391(24.0)
autotune_tmc set stepper_x sgt=1
autotune_tmc set stepper_x small_hysteresis=False
autotune_tmc set stepper_x semin=2
autotune_tmc set stepper_x semax=2
autotune_tmc set stepper_x seup=3
autotune_tmc set stepper_x sedn=2
autotune_tmc set stepper_x seimin=0
autotune_tmc set stepper_x sfilt=0
autotune_tmc set stepper_x iholddelay=12
autotune_tmc set stepper_x vhighfs=False
autotune_tmc set stepper_x vhighchm=False
autotune_tmc set stepper_x multistep_filt=True
autotune_tmc set stepper_x1 pwm_freq=2
autotune_tmc stepper_x1 ncycles=219 pfdcycles=73
autotune_tmc set stepper_x1 tpfd=1
autotune_tmc set stepper_x1 tbl=1
autotune_tmc set stepper_x1 toff=1
autotune_tmc seting hysteresis based on 48.0 V
dcoilblank = 0.160000, dcoilsd = 0.015156
hysteresis = 42, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_x1 hstrt=7
autotune_tmc set stepper_x1 hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_x1 pwm_autoscale=True
autotune_tmc set stepper_x1 pwm_autograd=True
autotune_tmc set stepper_x1 pwm_grad=4
autotune_tmc set stepper_x1 pwm_ofs=10
autotune_tmc set stepper_x1 pwm_reg=15
autotune_tmc set stepper_x1 pwm_lim=4
autotune_tmc set stepper_x1 tpwmthrs=1048575
autotune_tmc set stepper_x1 en_pwm_mode=False
autotune_tmc set stepper_x1 tcoolthrs=391(24.0)
autotune_tmc set stepper_x1 sgt=1
autotune_tmc set stepper_x1 small_hysteresis=False
autotune_tmc set stepper_x1 semin=2
autotune_tmc set stepper_x1 semax=2
autotune_tmc set stepper_x1 seup=3
autotune_tmc set stepper_x1 sedn=2
autotune_tmc set stepper_x1 seimin=0
autotune_tmc set stepper_x1 sfilt=0
autotune_tmc set stepper_x1 iholddelay=12
autotune_tmc set stepper_x1 vhighfs=False
autotune_tmc set stepper_x1 vhighchm=False
autotune_tmc set stepper_x1 multistep_filt=True
autotune_tmc set stepper_y pwm_freq=2
autotune_tmc stepper_y ncycles=219 pfdcycles=73
autotune_tmc set stepper_y tpfd=1
autotune_tmc set stepper_y tbl=1
autotune_tmc set stepper_y toff=1
autotune_tmc seting hysteresis based on 48.0 V
dcoilblank = 0.160000, dcoilsd = 0.015156
hysteresis = 42, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_y hstrt=7
autotune_tmc set stepper_y hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_y pwm_autoscale=True
autotune_tmc set stepper_y pwm_autograd=True
autotune_tmc set stepper_y pwm_grad=4
autotune_tmc set stepper_y pwm_ofs=10
autotune_tmc set stepper_y pwm_reg=15
autotune_tmc set stepper_y pwm_lim=4
autotune_tmc set stepper_y tpwmthrs=1048575
autotune_tmc set stepper_y en_pwm_mode=False
autotune_tmc set stepper_y tcoolthrs=391(24.0)
autotune_tmc set stepper_y sgt=1
autotune_tmc set stepper_y small_hysteresis=False
autotune_tmc set stepper_y semin=2
autotune_tmc set stepper_y semax=2
autotune_tmc set stepper_y seup=3
autotune_tmc set stepper_y sedn=2
autotune_tmc set stepper_y seimin=0
autotune_tmc set stepper_y sfilt=0
autotune_tmc set stepper_y iholddelay=12
autotune_tmc set stepper_y vhighfs=False
autotune_tmc set stepper_y vhighchm=False
autotune_tmc set stepper_y multistep_filt=True
autotune_tmc set stepper_y1 pwm_freq=2
autotune_tmc stepper_y1 ncycles=219 pfdcycles=73
autotune_tmc set stepper_y1 tpfd=1
autotune_tmc set stepper_y1 tbl=1
autotune_tmc set stepper_y1 toff=1
autotune_tmc seting hysteresis based on 48.0 V
dcoilblank = 0.160000, dcoilsd = 0.015156
hysteresis = 42, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_y1 hstrt=7
autotune_tmc set stepper_y1 hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_y1 pwm_autoscale=True
autotune_tmc set stepper_y1 pwm_autograd=True
autotune_tmc set stepper_y1 pwm_grad=4
autotune_tmc set stepper_y1 pwm_ofs=10
autotune_tmc set stepper_y1 pwm_reg=15
autotune_tmc set stepper_y1 pwm_lim=4
autotune_tmc set stepper_y1 tpwmthrs=1048575
autotune_tmc set stepper_y1 en_pwm_mode=False
autotune_tmc set stepper_y1 tcoolthrs=391(24.0)
autotune_tmc set stepper_y1 sgt=1
autotune_tmc set stepper_y1 small_hysteresis=False
autotune_tmc set stepper_y1 semin=2
autotune_tmc set stepper_y1 semax=2
autotune_tmc set stepper_y1 seup=3
autotune_tmc set stepper_y1 sedn=2
autotune_tmc set stepper_y1 seimin=0
autotune_tmc set stepper_y1 sfilt=0
autotune_tmc set stepper_y1 iholddelay=12
autotune_tmc set stepper_y1 vhighfs=False
autotune_tmc set stepper_y1 vhighchm=False
autotune_tmc set stepper_y1 multistep_filt=True
autotune_tmc set stepper_z pwm_freq=2
autotune_tmc stepper_z ncycles=219 pfdcycles=73
autotune_tmc set stepper_z tbl=1
autotune_tmc set stepper_z toff=1
autotune_tmc seting hysteresis based on 24.0 V
dcoilblank = 0.080000, dcoilsd = 0.013495
hysteresis = 22, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_z hstrt=7
autotune_tmc set stepper_z hend=9
autotune_tmc set stepper_z sgthrs=40
autotune_tmc using max PWM speed 43.108253
autotune_tmc set stepper_z pwm_autoscale=True
autotune_tmc set stepper_z pwm_autograd=True
autotune_tmc set stepper_z pwm_grad=7
autotune_tmc set stepper_z pwm_ofs=18
autotune_tmc set stepper_z pwm_reg=15
autotune_tmc set stepper_z pwm_lim=4
autotune_tmc set stepper_z tpwmthrs=1048575
autotune_tmc set stepper_z en_spreadcycle=True
autotune_tmc set stepper_z tcoolthrs=391(2.4)
autotune_tmc set stepper_z semin=2
autotune_tmc set stepper_z semax=2
autotune_tmc set stepper_z seup=3
autotune_tmc set stepper_z sedn=2
autotune_tmc set stepper_z seimin=0
autotune_tmc set stepper_z iholddelay=12
autotune_tmc set stepper_z multistep_filt=True
autotune_tmc set stepper_z1 pwm_freq=2
autotune_tmc stepper_z1 ncycles=219 pfdcycles=73
autotune_tmc set stepper_z1 tbl=1
autotune_tmc set stepper_z1 toff=1
autotune_tmc seting hysteresis based on 24.0 V
dcoilblank = 0.080000, dcoilsd = 0.013495
hysteresis = 22, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_z1 hstrt=7
autotune_tmc set stepper_z1 hend=9
autotune_tmc set stepper_z1 sgthrs=40
autotune_tmc using max PWM speed 43.108253
autotune_tmc set stepper_z1 pwm_autoscale=True
autotune_tmc set stepper_z1 pwm_autograd=True
autotune_tmc set stepper_z1 pwm_grad=7
autotune_tmc set stepper_z1 pwm_ofs=18
autotune_tmc set stepper_z1 pwm_reg=15
autotune_tmc set stepper_z1 pwm_lim=4
autotune_tmc set stepper_z1 tpwmthrs=1048575
autotune_tmc set stepper_z1 en_spreadcycle=True
autotune_tmc set stepper_z1 tcoolthrs=391(2.4)
autotune_tmc set stepper_z1 semin=2
autotune_tmc set stepper_z1 semax=2
autotune_tmc set stepper_z1 seup=3
autotune_tmc set stepper_z1 sedn=2
autotune_tmc set stepper_z1 seimin=0
autotune_tmc set stepper_z1 iholddelay=12
autotune_tmc set stepper_z1 multistep_filt=True
autotune_tmc set stepper_z2 pwm_freq=2
autotune_tmc stepper_z2 ncycles=219 pfdcycles=73
autotune_tmc set stepper_z2 tbl=1
autotune_tmc set stepper_z2 toff=1
autotune_tmc seting hysteresis based on 24.0 V
dcoilblank = 0.080000, dcoilsd = 0.013495
hysteresis = 22, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_z2 hstrt=7
autotune_tmc set stepper_z2 hend=9
autotune_tmc set stepper_z2 sgthrs=40
autotune_tmc using max PWM speed 43.108253
autotune_tmc set stepper_z2 pwm_autoscale=True
autotune_tmc set stepper_z2 pwm_autograd=True
autotune_tmc set stepper_z2 pwm_grad=7
autotune_tmc set stepper_z2 pwm_ofs=18
autotune_tmc set stepper_z2 pwm_reg=15
autotune_tmc set stepper_z2 pwm_lim=4
autotune_tmc set stepper_z2 tpwmthrs=1048575
autotune_tmc set stepper_z2 en_spreadcycle=True
autotune_tmc set stepper_z2 tcoolthrs=391(2.4)
autotune_tmc set stepper_z2 semin=2
autotune_tmc set stepper_z2 semax=2
autotune_tmc set stepper_z2 seup=3
autotune_tmc set stepper_z2 sedn=2
autotune_tmc set stepper_z2 seimin=0
autotune_tmc set stepper_z2 iholddelay=12
autotune_tmc set stepper_z2 multistep_filt=True
Stats 109.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=9420 bytes_read=12461 bytes_retransmit=9 bytes_invalid=0 send_seq=657 receive_seq=657 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400031775 rpi: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=831 bytes_read=4645 bytes_retransmit=0 bytes_invalid=0 send_seq=113 receive_seq=113 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49997772 adj=49990289 Octopus_Max: temp=34.7 Pi: temp=39.4  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-119.3 sysload=0.53 cputime=5.393 memavail=7505248 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
webhooks: registering remote method 'shutdown_machine' for connection id: 4127198560
webhooks: registering remote method 'reboot_machine' for connection id: 4127198560
webhooks: registering remote method 'pause_job_queue' for connection id: 4127198560
webhooks: registering remote method 'start_job_queue' for connection id: 4127198560
webhooks: registering remote method 'set_device_power' for connection id: 4127198560
Stats 110.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=9426 bytes_read=12772 bytes_retransmit=9 bytes_invalid=0 send_seq=658 receive_seq=658 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400032198 rpi: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=837 bytes_read=4661 bytes_retransmit=0 bytes_invalid=0 send_seq=114 receive_seq=114 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000977 adj=49995554 Octopus_Max: temp=34.7 Pi: temp=38.9  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=26.9 barrow: temp=-119.3 sysload=0.49 cputime=5.481 memavail=7504772 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 111.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=9432 bytes_read=13055 bytes_retransmit=9 bytes_invalid=0 send_seq=659 receive_seq=659 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400032595 rpi: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=843 bytes_read=4677 bytes_retransmit=0 bytes_invalid=0 send_seq=115 receive_seq=115 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50001729 adj=50000779 Octopus_Max: temp=34.7 Pi: temp=38.5  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=26.9 barrow: temp=-119.3 sysload=0.49 cputime=5.509 memavail=7504772 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 112.8: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000009 mcu_task_stddev=0.000063 bytes_write=9438 bytes_read=13350 bytes_retransmit=9 bytes_invalid=0 send_seq=660 receive_seq=660 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400032481 rpi: mcu_awake=0.003 mcu_task_avg=0.000022 mcu_task_stddev=0.000012 bytes_write=849 bytes_read=4707 bytes_retransmit=0 bytes_invalid=0 send_seq=116 receive_seq=116 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50001288 adj=50001250 Octopus_Max: temp=34.8 Pi: temp=38.9  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.2 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.49 cputime=5.537 memavail=7504772 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Error evaluating 'gcode_macro STATE_NOTIFY_EXAMPLE:gcode': jinja2.exceptions.UndefinedError: 'extras.gcode_macro.GetStatusWrapper object' has no attribute 'state_notify'
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/extras/gcode_macro.py", line 61, in render
    return str(self.template.render(context))
  File "/home/pi/klippy-env/lib/python3.9/site-packages/jinja2/environment.py", line 1090, in render
    self.environment.handle_exception()
  File "/home/pi/klippy-env/lib/python3.9/site-packages/jinja2/environment.py", line 832, in handle_exception
    reraise(*rewrite_traceback_stack(source=source))
  File "/home/pi/klippy-env/lib/python3.9/site-packages/jinja2/_compat.py", line 28, in reraise
    raise value.with_traceback(tb)
  File "<template>", line 3, in top-level template code
  File "/home/pi/klippy-env/lib/python3.9/site-packages/jinja2/environment.py", line 471, in getattr
    return getattr(obj, attribute)
jinja2.exceptions.UndefinedError: 'extras.gcode_macro.GetStatusWrapper object' has no attribute 'state_notify'
Error evaluating 'gcode_macro STATE_NOTIFY_EXAMPLE:gcode': jinja2.exceptions.UndefinedError: 'extras.gcode_macro.GetStatusWrapper object' has no attribute 'state_notify'

Stats 113.8: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000009 mcu_task_stddev=0.000063 bytes_write=9444 bytes_read=13649 bytes_retransmit=9 bytes_invalid=0 send_seq=661 receive_seq=661 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400031682 rpi: mcu_awake=0.003 mcu_task_avg=0.000022 mcu_task_stddev=0.000012 bytes_write=855 bytes_read=4723 bytes_retransmit=0 bytes_invalid=0 send_seq=117 receive_seq=117 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000664 adj=49999377 Octopus_Max: temp=34.8 Pi: temp=38.0  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-103.8 sysload=0.49 cputime=5.579 memavail=7504812 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 114.8: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000009 mcu_task_stddev=0.000063 bytes_write=9450 bytes_read=13932 bytes_retransmit=9 bytes_invalid=0 send_seq=662 receive_seq=662 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400031201 rpi: mcu_awake=0.003 mcu_task_avg=0.000022 mcu_task_stddev=0.000012 bytes_write=861 bytes_read=4739 bytes_retransmit=0 bytes_invalid=0 send_seq=118 receive_seq=118 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000468 adj=49997531 Octopus_Max: temp=35.0 Pi: temp=38.9  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-119.3 sysload=0.49 cputime=5.606 memavail=7504812 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 115.8: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000009 mcu_task_stddev=0.000063 bytes_write=9456 bytes_read=14214 bytes_retransmit=9 bytes_invalid=0 send_seq=663 receive_seq=663 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400030722 rpi: mcu_awake=0.003 mcu_task_avg=0.000022 mcu_task_stddev=0.000012 bytes_write=867 bytes_read=4755 bytes_retransmit=0 bytes_invalid=0 send_seq=119 receive_seq=119 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000331 adj=49996957 Octopus_Max: temp=35.0 Pi: temp=38.0  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-119.3 sysload=0.45 cputime=5.634 memavail=7504812 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 116.8: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000009 mcu_task_stddev=0.000063 bytes_write=9462 bytes_read=14525 bytes_retransmit=9 bytes_invalid=0 send_seq=664 receive_seq=664 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400030349 rpi: mcu_awake=0.003 mcu_task_avg=0.000022 mcu_task_stddev=0.000012 bytes_write=879 bytes_read=4787 bytes_retransmit=0 bytes_invalid=0 send_seq=121 receive_seq=121 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000252 adj=49996635 Octopus_Max: temp=35.0 Pi: temp=38.0  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-110.0 sysload=0.45 cputime=5.664 memavail=7504812 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 117.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9468 bytes_read=14822 bytes_retransmit=9 bytes_invalid=0 send_seq=665 receive_seq=665 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400030157 rpi: mcu_awake=0.001 mcu_task_avg=0.000018 mcu_task_stddev=0.000018 bytes_write=885 bytes_read=4816 bytes_retransmit=0 bytes_invalid=0 send_seq=122 receive_seq=122 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000127 adj=49996500 Octopus_Max: temp=35.0 Pi: temp=38.5  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.2 bed_core: temp=26.9 barrow: temp=-119.3 sysload=0.45 cputime=5.694 memavail=7500724 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 118.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9474 bytes_read=15104 bytes_retransmit=9 bytes_invalid=0 send_seq=666 receive_seq=666 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029672 rpi: mcu_awake=0.001 mcu_task_avg=0.000018 mcu_task_stddev=0.000018 bytes_write=891 bytes_read=4832 bytes_retransmit=0 bytes_invalid=0 send_seq=123 receive_seq=123 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000003 adj=49996148 Octopus_Max: temp=35.1 Pi: temp=38.9  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.45 cputime=5.707 memavail=7505516 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 119.9: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9480 bytes_read=15415 bytes_retransmit=9 bytes_invalid=0 send_seq=667 receive_seq=667 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029336 rpi: mcu_awake=0.001 mcu_task_avg=0.000018 mcu_task_stddev=0.000018 bytes_write=897 bytes_read=4848 bytes_retransmit=0 bytes_invalid=0 send_seq=124 receive_seq=124 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999940 adj=49995977 Octopus_Max: temp=35.1 Pi: temp=38.5  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-110.0 sysload=0.45 cputime=5.719 memavail=7505612 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 120.9: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9486 bytes_read=15698 bytes_retransmit=9 bytes_invalid=0 send_seq=668 receive_seq=668 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029068 rpi: mcu_awake=0.001 mcu_task_avg=0.000018 mcu_task_stddev=0.000018 bytes_write=903 bytes_read=4864 bytes_retransmit=0 bytes_invalid=0 send_seq=125 receive_seq=125 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999899 adj=49995981 Octopus_Max: temp=35.1 Pi: temp=38.0  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.41 cputime=5.731 memavail=7505612 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 121.9: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9492 bytes_read=15980 bytes_retransmit=9 bytes_invalid=0 send_seq=669 receive_seq=669 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028865 rpi: mcu_awake=0.001 mcu_task_avg=0.000018 mcu_task_stddev=0.000018 bytes_write=909 bytes_read=4880 bytes_retransmit=0 bytes_invalid=0 send_seq=126 receive_seq=126 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999871 adj=49996029 Octopus_Max: temp=35.2 Pi: temp=38.0  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=26.9 barrow: temp=-110.0 sysload=0.41 cputime=5.743 memavail=7505612 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 122.9: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9498 bytes_read=16305 bytes_retransmit=9 bytes_invalid=0 send_seq=670 receive_seq=670 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028703 rpi: mcu_awake=0.001 mcu_task_avg=0.000009 mcu_task_stddev=0.000010 bytes_write=915 bytes_read=4909 bytes_retransmit=0 bytes_invalid=0 send_seq=127 receive_seq=127 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999963 adj=49996080 Octopus_Max: temp=35.2 Pi: temp=38.9  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.41 cputime=5.759 memavail=7505152 print_time=31.540 buffer_time=0.712 print_stall=0 extruder: target=0 temp=26.8 pwm=0.000
Attempting MCU 'mcu' reset command
Attempting MCU 'rpi' config_reset command
b'Got EOF when reading from device'
webhooks client 4127198560: Disconnected
Restarting printer
Start printer at Sat Apr 20 23:19:11 2024 (1713651551.3 124.7)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
webhooks client 4120736048: New connection
webhooks client 4120736048: Client info {'program': 'Moonraker', 'version': 'v0.8.0-327-g9447494'}
Loaded MCU 'mcu' 112 commands (v0.12.0-169-g28faf814 / gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.34-4+rpi1+14) 2.34)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1_PB6_PB7=PB6,PB7 BUS_PINS_i2c1_PB8_PB9=PB8,PB9 BUS_PINS_i2c2_PB10_PB11=PB10,PB11 BUS_PINS_i2c3_PA8_PC9=PA8,PC9 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi2a=PC2,PC3,PB10 BUS_PINS_spi3a=PC11,PC12,PC10 BUS_PINS_spi4=PE13,PE14,PE12 BUS_PINS_spi5=PF8,PF9,PF7 BUS_PINS_spi5a=PH7,PF11,PH6 BUS_PINS_spi6=PG12,PG14,PG13 CLOCK_FREQ=400000000 MCU=stm32h723xx PWM_MAX=255 RESERVE_PINS_USB=PA11,PA12 RESERVE_PINS_crystal=PH0,PH1 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
mcu 'rpi': Starting connect
Loaded MCU 'rpi' 118 commands (v0.12.0-169-g28faf814 / gcc: (Raspbian 10.2.1-6+rpi1) 10.2.1 20210110 binutils: (GNU Binutils for Raspbian) 2.35.2)
MCU 'rpi' config: ADC_MAX=4095 CLOCK_FREQ=50000000 MCU=linux PCA9685_MAX=4096 PWM_MAX=32768 STATS_SUMSQ_BASE=256
mcu_temperature 'mcu' nominal base=-273.952569 slope=1618.577075
Sending MCU 'mcu' printer configuration...
Configured MCU 'mcu' (1024 moves)
Sending MCU 'rpi' printer configuration...
Configured MCU 'rpi' (1024 moves)
Starting heater checks for heater_bed
bed_mesh: generated points
Index |  Tool Adjusted  |   Probe
  0   | (40.0, 23.0)    | (10.0, 8.4)
  1   | (57.8, 23.0)    | (27.8, 8.4)
  2   | (75.5, 23.0)    | (45.5, 8.4)
  3   | (93.3, 23.0)    | (63.3, 8.4)
  4   | (111.1, 23.0)   | (81.1, 8.4)
  5   | (128.8, 23.0)   | (98.8, 8.4)
  6   | (146.6, 23.0)   | (116.6, 8.4)
  7   | (164.4, 23.0)   | (134.4, 8.4)
  8   | (182.2, 23.0)   | (152.2, 8.4)
  9   | (199.9, 23.0)   | (169.9, 8.4)
  10  | (199.9, 42.7)   | (169.9, 28.1)
  11  | (182.2, 42.7)   | (152.2, 28.1)
  12  | (164.4, 42.7)   | (134.4, 28.1)
  13  | (146.6, 42.7)   | (116.6, 28.1)
  14  | (128.9, 42.7)   | (98.9, 28.1)
  15  | (111.1, 42.7)   | (81.1, 28.1)
  16  | (93.3, 42.7)    | (63.3, 28.1)
  17  | (75.5, 42.7)    | (45.5, 28.1)
  18  | (57.8, 42.7)    | (27.8, 28.1)
  19  | (40.0, 42.7)    | (10.0, 28.1)
  20  | (40.0, 62.3)    | (10.0, 47.8)
  21  | (57.8, 62.3)    | (27.8, 47.8)
  22  | (75.5, 62.3)    | (45.5, 47.8)
  23  | (93.3, 62.3)    | (63.3, 47.8)
  24  | (111.1, 62.3)   | (81.1, 47.8)
  25  | (128.8, 62.3)   | (98.8, 47.8)
  26  | (146.6, 62.3)   | (116.6, 47.8)
  27  | (164.4, 62.3)   | (134.4, 47.8)
  28  | (182.2, 62.3)   | (152.2, 47.8)
  29  | (199.9, 62.3)   | (169.9, 47.8)
  30  | (199.9, 82.0)   | (169.9, 67.4)
  31  | (182.2, 82.0)   | (152.2, 67.4)
  32  | (164.4, 82.0)   | (134.4, 67.4)
  33  | (146.6, 82.0)   | (116.6, 67.4)
  34  | (128.9, 82.0)   | (98.9, 67.4)
  35  | (111.1, 82.0)   | (81.1, 67.4)
  36  | (93.3, 82.0)    | (63.3, 67.4)
  37  | (75.5, 82.0)    | (45.5, 67.4)
  38  | (57.8, 82.0)    | (27.8, 67.4)
  39  | (40.0, 82.0)    | (10.0, 67.4)
  40  | (40.0, 101.6)   | (10.0, 87.1)
  41  | (57.8, 101.6)   | (27.8, 87.1)
  42  | (75.5, 101.6)   | (45.5, 87.1)
  43  | (93.3, 101.6)   | (63.3, 87.1)
  44  | (111.1, 101.6)  | (81.1, 87.1)
  45  | (128.8, 101.6)  | (98.8, 87.1)
  46  | (146.6, 101.6)  | (116.6, 87.1)
  47  | (164.4, 101.6)  | (134.4, 87.1)
  48  | (182.2, 101.6)  | (152.2, 87.1)
  49  | (199.9, 101.6)  | (169.9, 87.1)
  50  | (199.9, 121.3)  | (169.9, 106.7)
  51  | (182.2, 121.3)  | (152.2, 106.7)
  52  | (164.4, 121.3)  | (134.4, 106.7)
  53  | (146.6, 121.3)  | (116.6, 106.7)
  54  | (128.9, 121.3)  | (98.9, 106.7)
  55  | (111.1, 121.3)  | (81.1, 106.7)
  56  | (93.3, 121.3)   | (63.3, 106.7)
  57  | (75.5, 121.3)   | (45.5, 106.7)
  58  | (57.8, 121.3)   | (27.8, 106.7)
  59  | (40.0, 121.3)   | (10.0, 106.7)
  60  | (40.0, 141.0)   | (10.0, 126.4)
  61  | (57.8, 141.0)   | (27.8, 126.4)
  62  | (75.5, 141.0)   | (45.5, 126.4)
  63  | (93.3, 141.0)   | (63.3, 126.4)
  64  | (111.1, 141.0)  | (81.1, 126.4)
  65  | (128.8, 141.0)  | (98.8, 126.4)
  66  | (146.6, 141.0)  | (116.6, 126.4)
  67  | (164.4, 141.0)  | (134.4, 126.4)
  68  | (182.2, 141.0)  | (152.2, 126.4)
  69  | (199.9, 141.0)  | (169.9, 126.4)
  70  | (199.9, 160.6)  | (169.9, 146.1)
  71  | (182.2, 160.6)  | (152.2, 146.1)
  72  | (164.4, 160.6)  | (134.4, 146.1)
  73  | (146.6, 160.6)  | (116.6, 146.1)
  74  | (128.9, 160.6)  | (98.9, 146.1)
  75  | (111.1, 160.6)  | (81.1, 146.1)
  76  | (93.3, 160.6)   | (63.3, 146.1)
  77  | (75.5, 160.6)   | (45.5, 146.1)
  78  | (57.8, 160.6)   | (27.8, 146.1)
  79  | (40.0, 160.6)   | (10.0, 146.1)
  80  | (40.0, 180.3)   | (10.0, 165.7)
  81  | (57.8, 180.3)   | (27.8, 165.7)
  82  | (75.5, 180.3)   | (45.5, 165.7)
  83  | (93.3, 180.3)   | (63.3, 165.7)
  84  | (111.1, 180.3)  | (81.1, 165.7)
  85  | (128.8, 180.3)  | (98.8, 165.7)
  86  | (146.6, 180.3)  | (116.6, 165.7)
  87  | (164.4, 180.3)  | (134.4, 165.7)
  88  | (182.2, 180.3)  | (152.2, 165.7)
  89  | (199.9, 180.3)  | (169.9, 165.7)
  90  | (199.9, 199.9)  | (169.9, 185.4)
  91  | (182.2, 199.9)  | (152.2, 185.4)
  92  | (164.4, 199.9)  | (134.4, 185.4)
  93  | (146.6, 199.9)  | (116.6, 185.4)
  94  | (128.9, 199.9)  | (98.9, 185.4)
  95  | (111.1, 199.9)  | (81.1, 185.4)
  96  | (93.3, 199.9)   | (63.3, 185.4)
  97  | (75.5, 199.9)   | (45.5, 185.4)
  98  | (57.8, 199.9)   | (27.8, 185.4)
  99  | (40.0, 199.9)   | (10.0, 185.4)

Printer is not ready
The klippy host software is attempting to connect.  Please
retry in a few moments.

Script running error
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/extras/gcode_button.py", line 41, in button_callback
    self.gcode.run_script(template.render())
  File "/home/pi/klipper/klippy/gcode.py", line 229, in run_script
    self._process_commands(script.split('\n'), need_ack=False)
  File "/home/pi/klipper/klippy/gcode.py", line 211, in _process_commands
    handler(gcmd)
  File "/home/pi/klipper/klippy/gcode.py", line 285, in cmd_default
    raise gcmd.error(self.printer.get_state_message()[0])
gcode.CommandError: 
Printer is not ready
The klippy host software is attempting to connect.  Please
retry in a few moments.


Printer is not ready
The klippy host software is attempting to connect.  Please
retry in a few moments.

Script running error
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/extras/gcode_button.py", line 41, in button_callback
    self.gcode.run_script(template.render())
  File "/home/pi/klipper/klippy/gcode.py", line 229, in run_script
    self._process_commands(script.split('\n'), need_ack=False)
  File "/home/pi/klipper/klippy/gcode.py", line 211, in _process_commands
    handler(gcmd)
  File "/home/pi/klipper/klippy/gcode.py", line 285, in cmd_default
    raise gcmd.error(self.printer.get_state_message()[0])
gcode.CommandError: 
Printer is not ready
The klippy host software is attempting to connect.  Please
retry in a few moments.

Starting heater checks for extruder
autotune_tmc set stepper_x pwm_freq=2
autotune_tmc stepper_x ncycles=219 pfdcycles=73
autotune_tmc set stepper_x tpfd=1
autotune_tmc set stepper_x tbl=1
autotune_tmc set stepper_x toff=1
autotune_tmc seting hysteresis based on 48.0 V
dcoilblank = 0.160000, dcoilsd = 0.015156
hysteresis = 42, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_x hstrt=7
autotune_tmc set stepper_x hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_x pwm_autoscale=True
autotune_tmc set stepper_x pwm_autograd=True
autotune_tmc set stepper_x pwm_grad=4
autotune_tmc set stepper_x pwm_ofs=10
autotune_tmc set stepper_x pwm_reg=15
autotune_tmc set stepper_x pwm_lim=4
autotune_tmc set stepper_x tpwmthrs=1048575
autotune_tmc set stepper_x en_pwm_mode=False
autotune_tmc set stepper_x tcoolthrs=391(24.0)
autotune_tmc set stepper_x sgt=1
autotune_tmc set stepper_x small_hysteresis=False
autotune_tmc set stepper_x semin=2
autotune_tmc set stepper_x semax=2
autotune_tmc set stepper_x seup=3
autotune_tmc set stepper_x sedn=2
autotune_tmc set stepper_x seimin=0
autotune_tmc set stepper_x sfilt=0
autotune_tmc set stepper_x iholddelay=12
autotune_tmc set stepper_x vhighfs=False
autotune_tmc set stepper_x vhighchm=False
autotune_tmc set stepper_x multistep_filt=True
autotune_tmc set stepper_x1 pwm_freq=2
autotune_tmc stepper_x1 ncycles=219 pfdcycles=73
autotune_tmc set stepper_x1 tpfd=1
autotune_tmc set stepper_x1 tbl=1
autotune_tmc set stepper_x1 toff=1
autotune_tmc seting hysteresis based on 48.0 V
dcoilblank = 0.160000, dcoilsd = 0.015156
hysteresis = 42, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_x1 hstrt=7
autotune_tmc set stepper_x1 hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_x1 pwm_autoscale=True
autotune_tmc set stepper_x1 pwm_autograd=True
autotune_tmc set stepper_x1 pwm_grad=4
autotune_tmc set stepper_x1 pwm_ofs=10
autotune_tmc set stepper_x1 pwm_reg=15
autotune_tmc set stepper_x1 pwm_lim=4
autotune_tmc set stepper_x1 tpwmthrs=1048575
autotune_tmc set stepper_x1 en_pwm_mode=False
autotune_tmc set stepper_x1 tcoolthrs=391(24.0)
autotune_tmc set stepper_x1 sgt=1
autotune_tmc set stepper_x1 small_hysteresis=False
autotune_tmc set stepper_x1 semin=2
autotune_tmc set stepper_x1 semax=2
autotune_tmc set stepper_x1 seup=3
autotune_tmc set stepper_x1 sedn=2
autotune_tmc set stepper_x1 seimin=0
autotune_tmc set stepper_x1 sfilt=0
autotune_tmc set stepper_x1 iholddelay=12
autotune_tmc set stepper_x1 vhighfs=False
autotune_tmc set stepper_x1 vhighchm=False
autotune_tmc set stepper_x1 multistep_filt=True
autotune_tmc set stepper_y pwm_freq=2
autotune_tmc stepper_y ncycles=219 pfdcycles=73
autotune_tmc set stepper_y tpfd=1
autotune_tmc set stepper_y tbl=1
autotune_tmc set stepper_y toff=1
autotune_tmc seting hysteresis based on 48.0 V
dcoilblank = 0.160000, dcoilsd = 0.015156
hysteresis = 42, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_y hstrt=7
autotune_tmc set stepper_y hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_y pwm_autoscale=True
autotune_tmc set stepper_y pwm_autograd=True
autotune_tmc set stepper_y pwm_grad=4
autotune_tmc set stepper_y pwm_ofs=10
autotune_tmc set stepper_y pwm_reg=15
autotune_tmc set stepper_y pwm_lim=4
autotune_tmc set stepper_y tpwmthrs=1048575
autotune_tmc set stepper_y en_pwm_mode=False
autotune_tmc set stepper_y tcoolthrs=391(24.0)
autotune_tmc set stepper_y sgt=1
autotune_tmc set stepper_y small_hysteresis=False
autotune_tmc set stepper_y semin=2
autotune_tmc set stepper_y semax=2
autotune_tmc set stepper_y seup=3
autotune_tmc set stepper_y sedn=2
autotune_tmc set stepper_y seimin=0
autotune_tmc set stepper_y sfilt=0
autotune_tmc set stepper_y iholddelay=12
autotune_tmc set stepper_y vhighfs=False
autotune_tmc set stepper_y vhighchm=False
autotune_tmc set stepper_y multistep_filt=True
autotune_tmc set stepper_y1 pwm_freq=2
autotune_tmc stepper_y1 ncycles=219 pfdcycles=73
autotune_tmc set stepper_y1 tpfd=1
autotune_tmc set stepper_y1 tbl=1
autotune_tmc set stepper_y1 toff=1
autotune_tmc seting hysteresis based on 48.0 V
dcoilblank = 0.160000, dcoilsd = 0.015156
hysteresis = 42, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_y1 hstrt=7
autotune_tmc set stepper_y1 hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_y1 pwm_autoscale=True
autotune_tmc set stepper_y1 pwm_autograd=True
autotune_tmc set stepper_y1 pwm_grad=4
autotune_tmc set stepper_y1 pwm_ofs=10
autotune_tmc set stepper_y1 pwm_reg=15
autotune_tmc set stepper_y1 pwm_lim=4
autotune_tmc set stepper_y1 tpwmthrs=1048575
autotune_tmc set stepper_y1 en_pwm_mode=False
autotune_tmc set stepper_y1 tcoolthrs=391(24.0)
autotune_tmc set stepper_y1 sgt=1
autotune_tmc set stepper_y1 small_hysteresis=False
autotune_tmc set stepper_y1 semin=2
autotune_tmc set stepper_y1 semax=2
autotune_tmc set stepper_y1 seup=3
autotune_tmc set stepper_y1 sedn=2
autotune_tmc set stepper_y1 seimin=0
autotune_tmc set stepper_y1 sfilt=0
autotune_tmc set stepper_y1 iholddelay=12
autotune_tmc set stepper_y1 vhighfs=False
autotune_tmc set stepper_y1 vhighchm=False
autotune_tmc set stepper_y1 multistep_filt=True
autotune_tmc set stepper_z pwm_freq=2
autotune_tmc stepper_z ncycles=219 pfdcycles=73
autotune_tmc set stepper_z tbl=1
autotune_tmc set stepper_z toff=1
autotune_tmc seting hysteresis based on 24.0 V
dcoilblank = 0.080000, dcoilsd = 0.013495
hysteresis = 22, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_z hstrt=7
autotune_tmc set stepper_z hend=9
autotune_tmc set stepper_z sgthrs=40
autotune_tmc using max PWM speed 43.108253
autotune_tmc set stepper_z pwm_autoscale=True
autotune_tmc set stepper_z pwm_autograd=True
autotune_tmc set stepper_z pwm_grad=7
autotune_tmc set stepper_z pwm_ofs=18
autotune_tmc set stepper_z pwm_reg=15
autotune_tmc set stepper_z pwm_lim=4
autotune_tmc set stepper_z tpwmthrs=1048575
autotune_tmc set stepper_z en_spreadcycle=True
autotune_tmc set stepper_z tcoolthrs=391(2.4)
autotune_tmc set stepper_z semin=2
autotune_tmc set stepper_z semax=2
autotune_tmc set stepper_z seup=3
autotune_tmc set stepper_z sedn=2
autotune_tmc set stepper_z seimin=0
autotune_tmc set stepper_z iholddelay=12
autotune_tmc set stepper_z multistep_filt=True
autotune_tmc set stepper_z1 pwm_freq=2
autotune_tmc stepper_z1 ncycles=219 pfdcycles=73
autotune_tmc set stepper_z1 tbl=1
autotune_tmc set stepper_z1 toff=1
autotune_tmc seting hysteresis based on 24.0 V
dcoilblank = 0.080000, dcoilsd = 0.013495
hysteresis = 22, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_z1 hstrt=7
autotune_tmc set stepper_z1 hend=9
autotune_tmc set stepper_z1 sgthrs=40
autotune_tmc using max PWM speed 43.108253
autotune_tmc set stepper_z1 pwm_autoscale=True
autotune_tmc set stepper_z1 pwm_autograd=True
autotune_tmc set stepper_z1 pwm_grad=7
autotune_tmc set stepper_z1 pwm_ofs=18
autotune_tmc set stepper_z1 pwm_reg=15
autotune_tmc set stepper_z1 pwm_lim=4
autotune_tmc set stepper_z1 tpwmthrs=1048575
autotune_tmc set stepper_z1 en_spreadcycle=True
autotune_tmc set stepper_z1 tcoolthrs=391(2.4)
autotune_tmc set stepper_z1 semin=2
autotune_tmc set stepper_z1 semax=2
autotune_tmc set stepper_z1 seup=3
autotune_tmc set stepper_z1 sedn=2
autotune_tmc set stepper_z1 seimin=0
autotune_tmc set stepper_z1 iholddelay=12
autotune_tmc set stepper_z1 multistep_filt=True
autotune_tmc set stepper_z2 pwm_freq=2
autotune_tmc stepper_z2 ncycles=219 pfdcycles=73
autotune_tmc set stepper_z2 tbl=1
autotune_tmc set stepper_z2 toff=1
autotune_tmc seting hysteresis based on 24.0 V
dcoilblank = 0.080000, dcoilsd = 0.013495
hysteresis = 22, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_z2 hstrt=7
autotune_tmc set stepper_z2 hend=9
autotune_tmc set stepper_z2 sgthrs=40
autotune_tmc using max PWM speed 43.108253
autotune_tmc set stepper_z2 pwm_autoscale=True
autotune_tmc set stepper_z2 pwm_autograd=True
autotune_tmc set stepper_z2 pwm_grad=7
autotune_tmc set stepper_z2 pwm_ofs=18
autotune_tmc set stepper_z2 pwm_reg=15
autotune_tmc set stepper_z2 pwm_lim=4
autotune_tmc set stepper_z2 tpwmthrs=1048575
autotune_tmc set stepper_z2 en_spreadcycle=True
autotune_tmc set stepper_z2 tcoolthrs=391(2.4)
autotune_tmc set stepper_z2 semin=2
autotune_tmc set stepper_z2 semax=2
autotune_tmc set stepper_z2 seup=3
autotune_tmc set stepper_z2 sedn=2
autotune_tmc set stepper_z2 seimin=0
autotune_tmc set stepper_z2 iholddelay=12
autotune_tmc set stepper_z2 multistep_filt=True
Stats 128.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=9140 bytes_read=12196 bytes_retransmit=9 bytes_invalid=0 send_seq=601 receive_seq=601 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400026953 rpi: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=831 bytes_read=4595 bytes_retransmit=0 bytes_invalid=0 send_seq=113 receive_seq=113 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49997291 adj=49989988 Octopus_Max: temp=36.1 Pi: temp=38.5  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.46 cputime=7.310 memavail=7504208 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
webhooks: registering remote method 'shutdown_machine' for connection id: 4120736048
webhooks: registering remote method 'reboot_machine' for connection id: 4120736048
webhooks: registering remote method 'pause_job_queue' for connection id: 4120736048
webhooks: registering remote method 'start_job_queue' for connection id: 4120736048
webhooks: registering remote method 'set_device_power' for connection id: 4120736048
Stats 129.7: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000009 mcu_task_stddev=0.000062 bytes_write=9146 bytes_read=12506 bytes_retransmit=9 bytes_invalid=0 send_seq=602 receive_seq=602 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029599 rpi: mcu_awake=0.003 mcu_task_avg=0.000019 mcu_task_stddev=0.000010 bytes_write=837 bytes_read=4625 bytes_retransmit=0 bytes_invalid=0 send_seq=114 receive_seq=114 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49998897 adj=49995932 Octopus_Max: temp=36.2 Pi: temp=39.9  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-119.3 sysload=0.46 cputime=7.368 memavail=7503048 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 130.7: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000009 mcu_task_stddev=0.000062 bytes_write=9152 bytes_read=12788 bytes_retransmit=9 bytes_invalid=0 send_seq=603 receive_seq=603 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400034369 rpi: mcu_awake=0.003 mcu_task_avg=0.000019 mcu_task_stddev=0.000010 bytes_write=843 bytes_read=4641 bytes_retransmit=0 bytes_invalid=0 send_seq=115 receive_seq=115 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999878 adj=49997676 Octopus_Max: temp=36.3 Pi: temp=38.9  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-110.0 sysload=0.42 cputime=7.394 memavail=7503056 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 131.7: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000009 mcu_task_stddev=0.000062 bytes_write=9158 bytes_read=13085 bytes_retransmit=9 bytes_invalid=0 send_seq=604 receive_seq=604 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400033271 rpi: mcu_awake=0.003 mcu_task_avg=0.000019 mcu_task_stddev=0.000010 bytes_write=849 bytes_read=4657 bytes_retransmit=0 bytes_invalid=0 send_seq=116 receive_seq=116 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000259 adj=49997777 Octopus_Max: temp=36.2 Pi: temp=38.5  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=26.9 barrow: temp=-119.3 sysload=0.42 cputime=7.422 memavail=7503056 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 132.7: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000009 mcu_task_stddev=0.000062 bytes_write=9164 bytes_read=13382 bytes_retransmit=9 bytes_invalid=0 send_seq=605 receive_seq=605 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400031906 rpi: mcu_awake=0.003 mcu_task_avg=0.000019 mcu_task_stddev=0.000010 bytes_write=855 bytes_read=4673 bytes_retransmit=0 bytes_invalid=0 send_seq=117 receive_seq=117 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000428 adj=49998419 Octopus_Max: temp=36.3 Pi: temp=38.9  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-110.0 sysload=0.42 cputime=7.452 memavail=7503056 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 133.7: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000009 mcu_task_stddev=0.000062 bytes_write=9170 bytes_read=13664 bytes_retransmit=9 bytes_invalid=0 send_seq=606 receive_seq=606 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400031121 rpi: mcu_awake=0.003 mcu_task_avg=0.000019 mcu_task_stddev=0.000010 bytes_write=861 bytes_read=4689 bytes_retransmit=0 bytes_invalid=0 send_seq=118 receive_seq=118 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000441 adj=49998707 Octopus_Max: temp=36.2 Pi: temp=38.9  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.42 cputime=7.480 memavail=7503100 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 134.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9176 bytes_read=13978 bytes_retransmit=9 bytes_invalid=0 send_seq=607 receive_seq=607 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400030099 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000020 bytes_write=867 bytes_read=4718 bytes_retransmit=0 bytes_invalid=0 send_seq=119 receive_seq=119 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000505 adj=49998455 Octopus_Max: temp=36.3 Pi: temp=38.5  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-119.3 sysload=0.42 cputime=7.501 memavail=7503456 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 135.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9182 bytes_read=14258 bytes_retransmit=9 bytes_invalid=0 send_seq=608 receive_seq=608 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029472 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000020 bytes_write=873 bytes_read=4734 bytes_retransmit=0 bytes_invalid=0 send_seq=120 receive_seq=120 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000250 adj=49998560 Octopus_Max: temp=36.2 Pi: temp=38.5  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.39 cputime=7.513 memavail=7503464 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 136.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9188 bytes_read=14540 bytes_retransmit=9 bytes_invalid=0 send_seq=609 receive_seq=609 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029057 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000020 bytes_write=879 bytes_read=4750 bytes_retransmit=0 bytes_invalid=0 send_seq=121 receive_seq=121 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000070 adj=49997546 Octopus_Max: temp=36.4 Pi: temp=38.9  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-110.0 sysload=0.39 cputime=7.524 memavail=7503464 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 137.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9194 bytes_read=14851 bytes_retransmit=9 bytes_invalid=0 send_seq=610 receive_seq=610 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028780 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000020 bytes_write=891 bytes_read=4782 bytes_retransmit=0 bytes_invalid=0 send_seq=123 receive_seq=123 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999783 adj=49996868 Octopus_Max: temp=36.4 Pi: temp=38.0  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.39 cputime=7.537 memavail=7503464 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 138.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9200 bytes_read=15134 bytes_retransmit=9 bytes_invalid=0 send_seq=611 receive_seq=611 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028607 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000020 bytes_write=897 bytes_read=4798 bytes_retransmit=0 bytes_invalid=0 send_seq=124 receive_seq=124 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999677 adj=49995847 Octopus_Max: temp=36.4 Pi: temp=38.9  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.2 bed_core: temp=27.1 barrow: temp=-119.3 sysload=0.39 cputime=7.549 memavail=7503464 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 139.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9206 bytes_read=15430 bytes_retransmit=9 bytes_invalid=0 send_seq=612 receive_seq=612 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028686 rpi: mcu_awake=0.000 mcu_task_avg=0.000008 mcu_task_stddev=0.000009 bytes_write=903 bytes_read=4827 bytes_retransmit=0 bytes_invalid=0 send_seq=125 receive_seq=125 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999691 adj=49995609 Octopus_Max: temp=36.5 Pi: temp=38.9  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=26.9 barrow: temp=-110.0 sysload=0.39 cputime=7.573 memavail=7503464 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 140.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9212 bytes_read=15741 bytes_retransmit=9 bytes_invalid=0 send_seq=613 receive_seq=613 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029081 rpi: mcu_awake=0.000 mcu_task_avg=0.000008 mcu_task_stddev=0.000009 bytes_write=909 bytes_read=4843 bytes_retransmit=0 bytes_invalid=0 send_seq=126 receive_seq=126 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999692 adj=49995749 Octopus_Max: temp=36.6 Pi: temp=38.5  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.36 cputime=7.602 memavail=7503464 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 141.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9218 bytes_read=16024 bytes_retransmit=9 bytes_invalid=0 send_seq=614 receive_seq=614 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029054 rpi: mcu_awake=0.000 mcu_task_avg=0.000008 mcu_task_stddev=0.000009 bytes_write=915 bytes_read=4859 bytes_retransmit=0 bytes_invalid=0 send_seq=127 receive_seq=127 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999679 adj=49995626 Octopus_Max: temp=36.5 Pi: temp=38.0  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.36 cputime=7.630 memavail=7503464 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.8 pwm=0.000
Stats 142.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9224 bytes_read=16306 bytes_retransmit=9 bytes_invalid=0 send_seq=615 receive_seq=615 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029117 rpi: mcu_awake=0.000 mcu_task_avg=0.000008 mcu_task_stddev=0.000009 bytes_write=921 bytes_read=4875 bytes_retransmit=0 bytes_invalid=0 send_seq=128 receive_seq=128 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999660 adj=49995693 Octopus_Max: temp=36.6 Pi: temp=38.9  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.0 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.36 cputime=7.658 memavail=7503464 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 143.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9230 bytes_read=16617 bytes_retransmit=9 bytes_invalid=0 send_seq=616 receive_seq=616 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029155 rpi: mcu_awake=0.000 mcu_task_avg=0.000008 mcu_task_stddev=0.000009 bytes_write=927 bytes_read=4891 bytes_retransmit=0 bytes_invalid=0 send_seq=129 receive_seq=129 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999610 adj=49995652 Octopus_Max: temp=36.5 Pi: temp=38.5  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-103.8 sysload=0.36 cputime=7.687 memavail=7503472 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 144.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9236 bytes_read=16914 bytes_retransmit=9 bytes_invalid=0 send_seq=617 receive_seq=617 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029205 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000024 bytes_write=933 bytes_read=4920 bytes_retransmit=0 bytes_invalid=0 send_seq=130 receive_seq=130 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999566 adj=49995480 Octopus_Max: temp=36.6 Pi: temp=38.5  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-110.0 sysload=0.36 cputime=7.715 memavail=7503472 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 145.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9242 bytes_read=17183 bytes_retransmit=9 bytes_invalid=0 send_seq=618 receive_seq=618 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029208 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000024 bytes_write=939 bytes_read=4936 bytes_retransmit=0 bytes_invalid=0 send_seq=131 receive_seq=131 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999527 adj=49995344 Octopus_Max: temp=36.7 Pi: temp=38.9  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-110.0 sysload=0.33 cputime=7.743 memavail=7503472 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 146.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9248 bytes_read=17494 bytes_retransmit=9 bytes_invalid=0 send_seq=619 receive_seq=619 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029135 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000024 bytes_write=945 bytes_read=4952 bytes_retransmit=0 bytes_invalid=0 send_seq=132 receive_seq=132 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999489 adj=49995281 Octopus_Max: temp=36.5 Pi: temp=38.5  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.33 cputime=7.771 memavail=7503472 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 147.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9254 bytes_read=17777 bytes_retransmit=9 bytes_invalid=0 send_seq=620 receive_seq=620 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029066 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000024 bytes_write=951 bytes_read=4968 bytes_retransmit=0 bytes_invalid=0 send_seq=133 receive_seq=133 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999455 adj=49995270 Octopus_Max: temp=36.6 Pi: temp=38.0  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.33 cputime=7.800 memavail=7503472 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 148.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9260 bytes_read=18059 bytes_retransmit=9 bytes_invalid=0 send_seq=621 receive_seq=621 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028994 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000024 bytes_write=957 bytes_read=4984 bytes_retransmit=0 bytes_invalid=0 send_seq=134 receive_seq=134 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999423 adj=49995275 Octopus_Max: temp=36.5 Pi: temp=37.5  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=26.9 barrow: temp=-119.3 sysload=0.33 cputime=7.828 memavail=7503472 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 149.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9266 bytes_read=18384 bytes_retransmit=9 bytes_invalid=0 send_seq=622 receive_seq=622 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029154 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000020 bytes_write=963 bytes_read=5013 bytes_retransmit=0 bytes_invalid=0 send_seq=135 receive_seq=135 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999385 adj=49995276 Octopus_Max: temp=36.8 Pi: temp=37.5  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-110.0 sysload=0.33 cputime=7.856 memavail=7503484 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.8 pwm=0.000
Stats 150.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9272 bytes_read=18667 bytes_retransmit=9 bytes_invalid=0 send_seq=623 receive_seq=623 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029076 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000020 bytes_write=969 bytes_read=5029 bytes_retransmit=0 bytes_invalid=0 send_seq=136 receive_seq=136 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999336 adj=49995051 Octopus_Max: temp=36.7 Pi: temp=38.0  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.30 cputime=7.879 memavail=7498328 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.8 pwm=0.000
Stats 151.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9278 bytes_read=18949 bytes_retransmit=9 bytes_invalid=0 send_seq=624 receive_seq=624 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028935 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000020 bytes_write=975 bytes_read=5045 bytes_retransmit=0 bytes_invalid=0 send_seq=137 receive_seq=137 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999285 adj=49994984 Octopus_Max: temp=36.8 Pi: temp=39.4  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.30 cputime=7.892 memavail=7504240 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 152.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9284 bytes_read=19260 bytes_retransmit=9 bytes_invalid=0 send_seq=625 receive_seq=625 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028806 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000020 bytes_write=981 bytes_read=5061 bytes_retransmit=0 bytes_invalid=0 send_seq=138 receive_seq=138 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999244 adj=49994952 Octopus_Max: temp=36.7 Pi: temp=39.4  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.30 cputime=7.904 memavail=7504240 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 153.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9290 bytes_read=19543 bytes_retransmit=9 bytes_invalid=0 send_seq=626 receive_seq=626 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028700 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000020 bytes_write=987 bytes_read=5077 bytes_retransmit=0 bytes_invalid=0 send_seq=139 receive_seq=139 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999211 adj=49994966 Octopus_Max: temp=36.7 Pi: temp=38.5  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.2 bed_core: temp=27.0 barrow: temp=-110.0 sysload=0.30 cputime=7.915 memavail=7504016 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 154.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9296 bytes_read=19839 bytes_retransmit=9 bytes_invalid=0 send_seq=627 receive_seq=627 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028607 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000012 bytes_write=993 bytes_read=5106 bytes_retransmit=0 bytes_invalid=0 send_seq=140 receive_seq=140 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999182 adj=49995004 Octopus_Max: temp=36.9 Pi: temp=38.5  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-103.8 sysload=0.30 cputime=7.928 memavail=7504016 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 155.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9302 bytes_read=20147 bytes_retransmit=9 bytes_invalid=0 send_seq=628 receive_seq=628 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028530 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000012 bytes_write=999 bytes_read=5122 bytes_retransmit=0 bytes_invalid=0 send_seq=141 receive_seq=141 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999183 adj=49995037 Octopus_Max: temp=36.8 Pi: temp=38.9  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=26.9 barrow: temp=-119.3 sysload=0.28 cputime=7.947 memavail=7503764 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 156.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9308 bytes_read=20422 bytes_retransmit=9 bytes_invalid=0 send_seq=629 receive_seq=629 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028542 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000012 bytes_write=1005 bytes_read=5138 bytes_retransmit=0 bytes_invalid=0 send_seq=142 receive_seq=142 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999195 adj=49995256 Octopus_Max: temp=36.8 Pi: temp=38.0  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=26.9 barrow: temp=-119.3 sysload=0.28 cputime=7.975 memavail=7503764 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 157.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9314 bytes_read=20704 bytes_retransmit=9 bytes_invalid=0 send_seq=630 receive_seq=630 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028574 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000012 bytes_write=1011 bytes_read=5154 bytes_retransmit=0 bytes_invalid=0 send_seq=143 receive_seq=143 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999198 adj=49995426 Octopus_Max: temp=36.8 Pi: temp=39.4  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.0 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.28 cputime=8.003 memavail=7503764 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 158.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9320 bytes_read=21015 bytes_retransmit=9 bytes_invalid=0 send_seq=631 receive_seq=631 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028591 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000012 bytes_write=1017 bytes_read=5170 bytes_retransmit=0 bytes_invalid=0 send_seq=144 receive_seq=144 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999201 adj=49995472 Octopus_Max: temp=36.8 Pi: temp=38.5  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=26.9 barrow: temp=-119.3 sysload=0.28 cputime=8.032 memavail=7503764 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 159.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9326 bytes_read=21312 bytes_retransmit=9 bytes_invalid=0 send_seq=632 receive_seq=632 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028562 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000022 bytes_write=1023 bytes_read=5199 bytes_retransmit=0 bytes_invalid=0 send_seq=145 receive_seq=145 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999201 adj=49995512 Octopus_Max: temp=36.8 Pi: temp=38.5  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.28 cputime=8.060 memavail=7503764 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 160.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9332 bytes_read=21594 bytes_retransmit=9 bytes_invalid=0 send_seq=633 receive_seq=633 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028544 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000022 bytes_write=1029 bytes_read=5215 bytes_retransmit=0 bytes_invalid=0 send_seq=146 receive_seq=146 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999200 adj=49995570 Octopus_Max: temp=37.0 Pi: temp=38.9  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-110.0 sysload=0.25 cputime=8.087 memavail=7503764 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.5 pwm=0.000
Stats 161.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9338 bytes_read=21905 bytes_retransmit=9 bytes_invalid=0 send_seq=634 receive_seq=634 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028578 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000022 bytes_write=1035 bytes_read=5231 bytes_retransmit=0 bytes_invalid=0 send_seq=147 receive_seq=147 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999201 adj=49995599 Octopus_Max: temp=37.0 Pi: temp=37.5  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.25 cputime=8.116 memavail=7503764 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 162.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9344 bytes_read=22188 bytes_retransmit=9 bytes_invalid=0 send_seq=635 receive_seq=635 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028553 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000022 bytes_write=1041 bytes_read=5247 bytes_retransmit=0 bytes_invalid=0 send_seq=148 receive_seq=148 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999202 adj=49995577 Octopus_Max: temp=37.0 Pi: temp=38.5  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.2 bed_core: temp=27.1 barrow: temp=-119.3 sysload=0.25 cputime=8.143 memavail=7503764 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 163.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9350 bytes_read=22470 bytes_retransmit=9 bytes_invalid=0 send_seq=636 receive_seq=636 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028529 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000022 bytes_write=1047 bytes_read=5263 bytes_retransmit=0 bytes_invalid=0 send_seq=149 receive_seq=149 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999203 adj=49995628 Octopus_Max: temp=37.0 Pi: temp=38.5  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-110.0 sysload=0.25 cputime=8.170 memavail=7503524 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 164.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9356 bytes_read=22795 bytes_retransmit=9 bytes_invalid=0 send_seq=637 receive_seq=637 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028539 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=1053 bytes_read=5292 bytes_retransmit=0 bytes_invalid=0 send_seq=150 receive_seq=150 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999206 adj=49995663 Octopus_Max: temp=37.1 Pi: temp=37.5  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=26.9 barrow: temp=-119.3 sysload=0.25 cputime=8.199 memavail=7503524 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 165.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9362 bytes_read=23078 bytes_retransmit=9 bytes_invalid=0 send_seq=638 receive_seq=638 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028543 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=1059 bytes_read=5308 bytes_retransmit=0 bytes_invalid=0 send_seq=151 receive_seq=151 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999214 adj=49995674 Octopus_Max: temp=37.1 Pi: temp=38.9  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-119.3 sysload=0.23 cputime=8.227 memavail=7503524 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 166.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9368 bytes_read=23354 bytes_retransmit=9 bytes_invalid=0 send_seq=639 receive_seq=639 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028556 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=1065 bytes_read=5324 bytes_retransmit=0 bytes_invalid=0 send_seq=152 receive_seq=152 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999210 adj=49995731 Octopus_Max: temp=37.0 Pi: temp=38.9  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.23 cputime=8.253 memavail=7497984 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 167.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9374 bytes_read=23657 bytes_retransmit=9 bytes_invalid=0 send_seq=640 receive_seq=640 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028504 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=1071 bytes_read=5340 bytes_retransmit=0 bytes_invalid=0 send_seq=153 receive_seq=153 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999194 adj=49995654 Octopus_Max: temp=37.1 Pi: temp=38.5  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-110.0 sysload=0.23 cputime=8.266 memavail=7504404 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 168.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9380 bytes_read=23940 bytes_retransmit=9 bytes_invalid=0 send_seq=641 receive_seq=641 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028459 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=1077 bytes_read=5356 bytes_retransmit=0 bytes_invalid=0 send_seq=154 receive_seq=154 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999180 adj=49995566 Octopus_Max: temp=37.0 Pi: temp=38.5  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=26.9 barrow: temp=-119.3 sysload=0.23 cputime=8.277 memavail=7504404 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 169.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9386 bytes_read=24236 bytes_retransmit=9 bytes_invalid=0 send_seq=642 receive_seq=642 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028425 rpi: mcu_awake=0.001 mcu_task_avg=0.000013 mcu_task_stddev=0.000016 bytes_write=1083 bytes_read=5385 bytes_retransmit=0 bytes_invalid=0 send_seq=155 receive_seq=155 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999170 adj=49995512 Octopus_Max: temp=37.3 Pi: temp=39.4  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.0 bed_core: temp=27.1 barrow: temp=-119.3 sysload=0.23 cputime=8.289 memavail=7504404 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 170.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9398 bytes_read=24563 bytes_retransmit=9 bytes_invalid=0 send_seq=644 receive_seq=644 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028355 rpi: mcu_awake=0.001 mcu_task_avg=0.000013 mcu_task_stddev=0.000016 bytes_write=1089 bytes_read=5401 bytes_retransmit=0 bytes_invalid=0 send_seq=156 receive_seq=156 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999159 adj=49995482 Octopus_Max: temp=37.1 Pi: temp=38.9  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-119.3 sysload=0.21 cputime=8.301 memavail=7504404 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 171.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9404 bytes_read=24846 bytes_retransmit=9 bytes_invalid=0 send_seq=645 receive_seq=645 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028377 rpi: mcu_awake=0.001 mcu_task_avg=0.000013 mcu_task_stddev=0.000016 bytes_write=1095 bytes_read=5417 bytes_retransmit=0 bytes_invalid=0 send_seq=157 receive_seq=157 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999152 adj=49995500 Octopus_Max: temp=37.1 Pi: temp=38.9  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-103.8 sysload=0.21 cputime=8.317 memavail=7504404 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 172.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9410 bytes_read=25128 bytes_retransmit=9 bytes_invalid=0 send_seq=646 receive_seq=646 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028372 rpi: mcu_awake=0.001 mcu_task_avg=0.000013 mcu_task_stddev=0.000016 bytes_write=1101 bytes_read=5433 bytes_retransmit=0 bytes_invalid=0 send_seq=158 receive_seq=158 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999160 adj=49995431 Octopus_Max: temp=37.2 Pi: temp=37.0  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=26.9 barrow: temp=-119.3 sysload=0.21 cputime=8.344 memavail=7504404 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 173.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9416 bytes_read=25439 bytes_retransmit=9 bytes_invalid=0 send_seq=647 receive_seq=647 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028366 rpi: mcu_awake=0.001 mcu_task_avg=0.000013 mcu_task_stddev=0.000016 bytes_write=1107 bytes_read=5449 bytes_retransmit=0 bytes_invalid=0 send_seq=159 receive_seq=159 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999167 adj=49995564 Octopus_Max: temp=37.2 Pi: temp=37.5  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-103.8 sysload=0.21 cputime=8.373 memavail=7507060 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 174.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9422 bytes_read=25736 bytes_retransmit=9 bytes_invalid=0 send_seq=648 receive_seq=648 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028357 rpi: mcu_awake=0.001 mcu_task_avg=0.000015 mcu_task_stddev=0.000018 bytes_write=1113 bytes_read=5478 bytes_retransmit=0 bytes_invalid=0 send_seq=160 receive_seq=160 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999173 adj=49995649 Octopus_Max: temp=37.2 Pi: temp=38.5  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.21 cputime=8.402 memavail=7507060 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 175.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9428 bytes_read=26018 bytes_retransmit=9 bytes_invalid=0 send_seq=649 receive_seq=649 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028348 rpi: mcu_awake=0.001 mcu_task_avg=0.000015 mcu_task_stddev=0.000018 bytes_write=1119 bytes_read=5494 bytes_retransmit=0 bytes_invalid=0 send_seq=161 receive_seq=161 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999179 adj=49995716 Octopus_Max: temp=37.3 Pi: temp=39.4  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-110.0 sysload=0.20 cputime=8.430 memavail=7507060 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 176.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9434 bytes_read=26329 bytes_retransmit=9 bytes_invalid=0 send_seq=650 receive_seq=650 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028342 rpi: mcu_awake=0.001 mcu_task_avg=0.000015 mcu_task_stddev=0.000018 bytes_write=1125 bytes_read=5510 bytes_retransmit=0 bytes_invalid=0 send_seq=162 receive_seq=162 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999189 adj=49995766 Octopus_Max: temp=37.3 Pi: temp=38.0  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=26.9 barrow: temp=-119.3 sysload=0.20 cputime=8.459 memavail=7506556 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 177.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9440 bytes_read=26600 bytes_retransmit=9 bytes_invalid=0 send_seq=651 receive_seq=651 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028335 rpi: mcu_awake=0.001 mcu_task_avg=0.000015 mcu_task_stddev=0.000018 bytes_write=1131 bytes_read=5526 bytes_retransmit=0 bytes_invalid=0 send_seq=163 receive_seq=163 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999194 adj=49995841 Octopus_Max: temp=37.2 Pi: temp=38.5  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-119.3 sysload=0.20 cputime=8.487 memavail=7506568 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 178.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9446 bytes_read=26880 bytes_retransmit=9 bytes_invalid=0 send_seq=652 receive_seq=652 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028329 rpi: mcu_awake=0.001 mcu_task_avg=0.000015 mcu_task_stddev=0.000018 bytes_write=1137 bytes_read=5542 bytes_retransmit=0 bytes_invalid=0 send_seq=164 receive_seq=164 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999204 adj=49995858 Octopus_Max: temp=37.4 Pi: temp=38.5  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-119.3 sysload=0.20 cputime=8.516 memavail=7506568 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 179.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9452 bytes_read=27205 bytes_retransmit=9 bytes_invalid=0 send_seq=653 receive_seq=653 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028325 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=1143 bytes_read=5571 bytes_retransmit=0 bytes_invalid=0 send_seq=165 receive_seq=165 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999212 adj=49995910 Octopus_Max: temp=37.4 Pi: temp=38.5  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-119.3 sysload=0.20 cputime=8.546 memavail=7506568 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.8 pwm=0.000
Stats 180.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9458 bytes_read=27488 bytes_retransmit=9 bytes_invalid=0 send_seq=654 receive_seq=654 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028356 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=1149 bytes_read=5587 bytes_retransmit=0 bytes_invalid=0 send_seq=166 receive_seq=166 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999216 adj=49995945 Octopus_Max: temp=37.3 Pi: temp=38.0  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-119.3 sysload=0.18 cputime=8.574 memavail=7506568 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 181.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9464 bytes_read=27770 bytes_retransmit=9 bytes_invalid=0 send_seq=655 receive_seq=655 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028333 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=1155 bytes_read=5603 bytes_retransmit=0 bytes_invalid=0 send_seq=167 receive_seq=167 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999224 adj=49995871 Octopus_Max: temp=37.2 Pi: temp=38.5  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=26.9 barrow: temp=-119.3 sysload=0.18 cputime=8.603 memavail=7506568 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 182.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9470 bytes_read=28081 bytes_retransmit=9 bytes_invalid=0 send_seq=656 receive_seq=656 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028339 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=1161 bytes_read=5619 bytes_retransmit=0 bytes_invalid=0 send_seq=168 receive_seq=168 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999232 adj=49995947 Octopus_Max: temp=37.3 Pi: temp=37.5  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-119.3 sysload=0.18 cputime=8.630 memavail=7504308 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 183.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9476 bytes_read=28364 bytes_retransmit=9 bytes_invalid=0 send_seq=657 receive_seq=657 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028318 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=1167 bytes_read=5635 bytes_retransmit=0 bytes_invalid=0 send_seq=169 receive_seq=169 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999231 adj=49995957 Octopus_Max: temp=37.3 Pi: temp=38.9  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=26.9 barrow: temp=-119.3 sysload=0.18 cputime=8.644 memavail=7505672 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.8 pwm=0.000
Stats 239.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9818 bytes_read=44857 bytes_retransmit=9 bytes_invalid=0 send_seq=714 receive_seq=714 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028174 rpi: mcu_awake=0.001 mcu_task_avg=0.000012 mcu_task_stddev=0.000015 bytes_write=1509 bytes_read=6684 bytes_retransmit=0 bytes_invalid=0 send_seq=226 receive_seq=226 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999548 adj=49996276 Octopus_Max: temp=38.2 Pi: temp=38.5  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.18 cputime=9.877 memavail=7505024 print_time=116.315 buffer_time=0.342 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Attempting MCU 'mcu' reset command
Attempting MCU 'rpi' config_reset command
b'Got EOF when reading from device'
webhooks client 4120736048: Disconnected
Restarting printer
Start printer at Sat Apr 20 23:21:07 2024 (1713651667.9 241.3)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
webhooks client 4120832776: New connection
webhooks client 4120832776: Client info {'program': 'Moonraker', 'version': 'v0.8.0-327-g9447494'}
Loaded MCU 'mcu' 112 commands (v0.12.0-169-g28faf814 / gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.34-4+rpi1+14) 2.34)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1_PB6_PB7=PB6,PB7 BUS_PINS_i2c1_PB8_PB9=PB8,PB9 BUS_PINS_i2c2_PB10_PB11=PB10,PB11 BUS_PINS_i2c3_PA8_PC9=PA8,PC9 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi2a=PC2,PC3,PB10 BUS_PINS_spi3a=PC11,PC12,PC10 BUS_PINS_spi4=PE13,PE14,PE12 BUS_PINS_spi5=PF8,PF9,PF7 BUS_PINS_spi5a=PH7,PF11,PH6 BUS_PINS_spi6=PG12,PG14,PG13 CLOCK_FREQ=400000000 MCU=stm32h723xx PWM_MAX=255 RESERVE_PINS_USB=PA11,PA12 RESERVE_PINS_crystal=PH0,PH1 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
mcu 'rpi': Starting connect
Loaded MCU 'rpi' 118 commands (v0.12.0-169-g28faf814 / gcc: (Raspbian 10.2.1-6+rpi1) 10.2.1 20210110 binutils: (GNU Binutils for Raspbian) 2.35.2)
MCU 'rpi' config: ADC_MAX=4095 CLOCK_FREQ=50000000 MCU=linux PCA9685_MAX=4096 PWM_MAX=32768 STATS_SUMSQ_BASE=256
mcu_temperature 'mcu' nominal base=-273.952569 slope=1618.577075
Sending MCU 'mcu' printer configuration...
Configured MCU 'mcu' (1024 moves)
Sending MCU 'rpi' printer configuration...
Configured MCU 'rpi' (1024 moves)
Starting heater checks for heater_bed
bed_mesh: generated points
Index |  Tool Adjusted  |   Probe
  0   | (40.0, 23.0)    | (10.0, 8.4)
  1   | (57.8, 23.0)    | (27.8, 8.4)
  2   | (75.5, 23.0)    | (45.5, 8.4)
  3   | (93.3, 23.0)    | (63.3, 8.4)
  4   | (111.1, 23.0)   | (81.1, 8.4)
  5   | (128.8, 23.0)   | (98.8, 8.4)
  6   | (146.6, 23.0)   | (116.6, 8.4)
  7   | (164.4, 23.0)   | (134.4, 8.4)
  8   | (182.2, 23.0)   | (152.2, 8.4)
  9   | (199.9, 23.0)   | (169.9, 8.4)
  10  | (199.9, 42.7)   | (169.9, 28.1)
  11  | (182.2, 42.7)   | (152.2, 28.1)
  12  | (164.4, 42.7)   | (134.4, 28.1)
  13  | (146.6, 42.7)   | (116.6, 28.1)
  14  | (128.9, 42.7)   | (98.9, 28.1)
  15  | (111.1, 42.7)   | (81.1, 28.1)
  16  | (93.3, 42.7)    | (63.3, 28.1)
  17  | (75.5, 42.7)    | (45.5, 28.1)
  18  | (57.8, 42.7)    | (27.8, 28.1)
  19  | (40.0, 42.7)    | (10.0, 28.1)
  20  | (40.0, 62.3)    | (10.0, 47.8)
  21  | (57.8, 62.3)    | (27.8, 47.8)
  22  | (75.5, 62.3)    | (45.5, 47.8)
  23  | (93.3, 62.3)    | (63.3, 47.8)
  24  | (111.1, 62.3)   | (81.1, 47.8)
  25  | (128.8, 62.3)   | (98.8, 47.8)
  26  | (146.6, 62.3)   | (116.6, 47.8)
  27  | (164.4, 62.3)   | (134.4, 47.8)
  28  | (182.2, 62.3)   | (152.2, 47.8)
  29  | (199.9, 62.3)   | (169.9, 47.8)
  30  | (199.9, 82.0)   | (169.9, 67.4)
  31  | (182.2, 82.0)   | (152.2, 67.4)
  32  | (164.4, 82.0)   | (134.4, 67.4)
  33  | (146.6, 82.0)   | (116.6, 67.4)
  34  | (128.9, 82.0)   | (98.9, 67.4)
  35  | (111.1, 82.0)   | (81.1, 67.4)
  36  | (93.3, 82.0)    | (63.3, 67.4)
  37  | (75.5, 82.0)    | (45.5, 67.4)
  38  | (57.8, 82.0)    | (27.8, 67.4)
  39  | (40.0, 82.0)    | (10.0, 67.4)
  40  | (40.0, 101.6)   | (10.0, 87.1)
  41  | (57.8, 101.6)   | (27.8, 87.1)
  42  | (75.5, 101.6)   | (45.5, 87.1)
  43  | (93.3, 101.6)   | (63.3, 87.1)
  44  | (111.1, 101.6)  | (81.1, 87.1)
  45  | (128.8, 101.6)  | (98.8, 87.1)
  46  | (146.6, 101.6)  | (116.6, 87.1)
  47  | (164.4, 101.6)  | (134.4, 87.1)
  48  | (182.2, 101.6)  | (152.2, 87.1)
  49  | (199.9, 101.6)  | (169.9, 87.1)
  50  | (199.9, 121.3)  | (169.9, 106.7)
  51  | (182.2, 121.3)  | (152.2, 106.7)
  52  | (164.4, 121.3)  | (134.4, 106.7)
  53  | (146.6, 121.3)  | (116.6, 106.7)
  54  | (128.9, 121.3)  | (98.9, 106.7)
  55  | (111.1, 121.3)  | (81.1, 106.7)
  56  | (93.3, 121.3)   | (63.3, 106.7)
  57  | (75.5, 121.3)   | (45.5, 106.7)
  58  | (57.8, 121.3)   | (27.8, 106.7)
  59  | (40.0, 121.3)   | (10.0, 106.7)
  60  | (40.0, 141.0)   | (10.0, 126.4)
  61  | (57.8, 141.0)   | (27.8, 126.4)
  62  | (75.5, 141.0)   | (45.5, 126.4)
  63  | (93.3, 141.0)   | (63.3, 126.4)
  64  | (111.1, 141.0)  | (81.1, 126.4)
  65  | (128.8, 141.0)  | (98.8, 126.4)
  66  | (146.6, 141.0)  | (116.6, 126.4)
  67  | (164.4, 141.0)  | (134.4, 126.4)
  68  | (182.2, 141.0)  | (152.2, 126.4)
  69  | (199.9, 141.0)  | (169.9, 126.4)
  70  | (199.9, 160.6)  | (169.9, 146.1)
  71  | (182.2, 160.6)  | (152.2, 146.1)
  72  | (164.4, 160.6)  | (134.4, 146.1)
  73  | (146.6, 160.6)  | (116.6, 146.1)
  74  | (128.9, 160.6)  | (98.9, 146.1)
  75  | (111.1, 160.6)  | (81.1, 146.1)
  76  | (93.3, 160.6)   | (63.3, 146.1)
  77  | (75.5, 160.6)   | (45.5, 146.1)
  78  | (57.8, 160.6)   | (27.8, 146.1)
  79  | (40.0, 160.6)   | (10.0, 146.1)
  80  | (40.0, 180.3)   | (10.0, 165.7)
  81  | (57.8, 180.3)   | (27.8, 165.7)
  82  | (75.5, 180.3)   | (45.5, 165.7)
  83  | (93.3, 180.3)   | (63.3, 165.7)
  84  | (111.1, 180.3)  | (81.1, 165.7)
  85  | (128.8, 180.3)  | (98.8, 165.7)
  86  | (146.6, 180.3)  | (116.6, 165.7)
  87  | (164.4, 180.3)  | (134.4, 165.7)
  88  | (182.2, 180.3)  | (152.2, 165.7)
  89  | (199.9, 180.3)  | (169.9, 165.7)
  90  | (199.9, 199.9)  | (169.9, 185.4)
  91  | (182.2, 199.9)  | (152.2, 185.4)
  92  | (164.4, 199.9)  | (134.4, 185.4)
  93  | (146.6, 199.9)  | (116.6, 185.4)
  94  | (128.9, 199.9)  | (98.9, 185.4)
  95  | (111.1, 199.9)  | (81.1, 185.4)
  96  | (93.3, 199.9)   | (63.3, 185.4)
  97  | (75.5, 199.9)   | (45.5, 185.4)
  98  | (57.8, 199.9)   | (27.8, 185.4)
  99  | (40.0, 199.9)   | (10.0, 185.4)

Printer is not ready
The klippy host software is attempting to connect.  Please
retry in a few moments.

Script running error
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/extras/gcode_button.py", line 41, in button_callback
    self.gcode.run_script(template.render())
  File "/home/pi/klipper/klippy/gcode.py", line 229, in run_script
    self._process_commands(script.split('\n'), need_ack=False)
  File "/home/pi/klipper/klippy/gcode.py", line 211, in _process_commands
    handler(gcmd)
  File "/home/pi/klipper/klippy/gcode.py", line 285, in cmd_default
    raise gcmd.error(self.printer.get_state_message()[0])
gcode.CommandError: 
Printer is not ready
The klippy host software is attempting to connect.  Please
retry in a few moments.


Printer is not ready
The klippy host software is attempting to connect.  Please
retry in a few moments.

Script running error
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/extras/gcode_button.py", line 41, in button_callback
    self.gcode.run_script(template.render())
  File "/home/pi/klipper/klippy/gcode.py", line 229, in run_script
    self._process_commands(script.split('\n'), need_ack=False)
  File "/home/pi/klipper/klippy/gcode.py", line 211, in _process_commands
    handler(gcmd)
  File "/home/pi/klipper/klippy/gcode.py", line 285, in cmd_default
    raise gcmd.error(self.printer.get_state_message()[0])
gcode.CommandError: 
Printer is not ready
The klippy host software is attempting to connect.  Please
retry in a few moments.

Starting heater checks for extruder
autotune_tmc set stepper_x pwm_freq=2
autotune_tmc stepper_x ncycles=219 pfdcycles=73
autotune_tmc set stepper_x tpfd=1
autotune_tmc set stepper_x tbl=1
autotune_tmc set stepper_x toff=1
autotune_tmc seting hysteresis based on 48.0 V
dcoilblank = 0.160000, dcoilsd = 0.015156
hysteresis = 42, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_x hstrt=7
autotune_tmc set stepper_x hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_x pwm_autoscale=True
autotune_tmc set stepper_x pwm_autograd=True
autotune_tmc set stepper_x pwm_grad=4
autotune_tmc set stepper_x pwm_ofs=10
autotune_tmc set stepper_x pwm_reg=15
autotune_tmc set stepper_x pwm_lim=4
autotune_tmc set stepper_x tpwmthrs=1048575
autotune_tmc set stepper_x en_pwm_mode=False
autotune_tmc set stepper_x tcoolthrs=391(24.0)
autotune_tmc set stepper_x sgt=1
autotune_tmc set stepper_x small_hysteresis=False
autotune_tmc set stepper_x semin=2
autotune_tmc set stepper_x semax=2
autotune_tmc set stepper_x seup=3
autotune_tmc set stepper_x sedn=2
autotune_tmc set stepper_x seimin=0
autotune_tmc set stepper_x sfilt=0
autotune_tmc set stepper_x iholddelay=12
autotune_tmc set stepper_x vhighfs=False
autotune_tmc set stepper_x vhighchm=False
autotune_tmc set stepper_x multistep_filt=True
autotune_tmc set stepper_x1 pwm_freq=2
autotune_tmc stepper_x1 ncycles=219 pfdcycles=73
autotune_tmc set stepper_x1 tpfd=1
autotune_tmc set stepper_x1 tbl=1
autotune_tmc set stepper_x1 toff=1
autotune_tmc seting hysteresis based on 48.0 V
dcoilblank = 0.160000, dcoilsd = 0.015156
hysteresis = 42, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_x1 hstrt=7
autotune_tmc set stepper_x1 hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_x1 pwm_autoscale=True
autotune_tmc set stepper_x1 pwm_autograd=True
autotune_tmc set stepper_x1 pwm_grad=4
autotune_tmc set stepper_x1 pwm_ofs=10
autotune_tmc set stepper_x1 pwm_reg=15
autotune_tmc set stepper_x1 pwm_lim=4
autotune_tmc set stepper_x1 tpwmthrs=1048575
autotune_tmc set stepper_x1 en_pwm_mode=False
autotune_tmc set stepper_x1 tcoolthrs=391(24.0)
autotune_tmc set stepper_x1 sgt=1
autotune_tmc set stepper_x1 small_hysteresis=False
autotune_tmc set stepper_x1 semin=2
autotune_tmc set stepper_x1 semax=2
autotune_tmc set stepper_x1 seup=3
autotune_tmc set stepper_x1 sedn=2
autotune_tmc set stepper_x1 seimin=0
autotune_tmc set stepper_x1 sfilt=0
autotune_tmc set stepper_x1 iholddelay=12
autotune_tmc set stepper_x1 vhighfs=False
autotune_tmc set stepper_x1 vhighchm=False
autotune_tmc set stepper_x1 multistep_filt=True
autotune_tmc set stepper_y pwm_freq=2
autotune_tmc stepper_y ncycles=219 pfdcycles=73
autotune_tmc set stepper_y tpfd=1
autotune_tmc set stepper_y tbl=1
autotune_tmc set stepper_y toff=1
autotune_tmc seting hysteresis based on 48.0 V
dcoilblank = 0.160000, dcoilsd = 0.015156
hysteresis = 42, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_y hstrt=7
autotune_tmc set stepper_y hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_y pwm_autoscale=True
autotune_tmc set stepper_y pwm_autograd=True
autotune_tmc set stepper_y pwm_grad=4
autotune_tmc set stepper_y pwm_ofs=10
autotune_tmc set stepper_y pwm_reg=15
autotune_tmc set stepper_y pwm_lim=4
autotune_tmc set stepper_y tpwmthrs=1048575
autotune_tmc set stepper_y en_pwm_mode=False
autotune_tmc set stepper_y tcoolthrs=391(24.0)
autotune_tmc set stepper_y sgt=1
autotune_tmc set stepper_y small_hysteresis=False
autotune_tmc set stepper_y semin=2
autotune_tmc set stepper_y semax=2
autotune_tmc set stepper_y seup=3
autotune_tmc set stepper_y sedn=2
autotune_tmc set stepper_y seimin=0
autotune_tmc set stepper_y sfilt=0
autotune_tmc set stepper_y iholddelay=12
autotune_tmc set stepper_y vhighfs=False
autotune_tmc set stepper_y vhighchm=False
autotune_tmc set stepper_y multistep_filt=True
autotune_tmc set stepper_y1 pwm_freq=2
autotune_tmc stepper_y1 ncycles=219 pfdcycles=73
autotune_tmc set stepper_y1 tpfd=1
autotune_tmc set stepper_y1 tbl=1
autotune_tmc set stepper_y1 toff=1
autotune_tmc seting hysteresis based on 48.0 V
dcoilblank = 0.160000, dcoilsd = 0.015156
hysteresis = 42, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_y1 hstrt=7
autotune_tmc set stepper_y1 hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_y1 pwm_autoscale=True
autotune_tmc set stepper_y1 pwm_autograd=True
autotune_tmc set stepper_y1 pwm_grad=4
autotune_tmc set stepper_y1 pwm_ofs=10
autotune_tmc set stepper_y1 pwm_reg=15
autotune_tmc set stepper_y1 pwm_lim=4
autotune_tmc set stepper_y1 tpwmthrs=1048575
autotune_tmc set stepper_y1 en_pwm_mode=False
autotune_tmc set stepper_y1 tcoolthrs=391(24.0)
autotune_tmc set stepper_y1 sgt=1
autotune_tmc set stepper_y1 small_hysteresis=False
autotune_tmc set stepper_y1 semin=2
autotune_tmc set stepper_y1 semax=2
autotune_tmc set stepper_y1 seup=3
autotune_tmc set stepper_y1 sedn=2
autotune_tmc set stepper_y1 seimin=0
autotune_tmc set stepper_y1 sfilt=0
autotune_tmc set stepper_y1 iholddelay=12
autotune_tmc set stepper_y1 vhighfs=False
autotune_tmc set stepper_y1 vhighchm=False
autotune_tmc set stepper_y1 multistep_filt=True
autotune_tmc set stepper_z pwm_freq=2
autotune_tmc stepper_z ncycles=219 pfdcycles=73
autotune_tmc set stepper_z tbl=1
autotune_tmc set stepper_z toff=1
autotune_tmc seting hysteresis based on 24.0 V
dcoilblank = 0.080000, dcoilsd = 0.013495
hysteresis = 22, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_z hstrt=7
autotune_tmc set stepper_z hend=9
autotune_tmc set stepper_z sgthrs=40
autotune_tmc using max PWM speed 43.108253
autotune_tmc set stepper_z pwm_autoscale=True
autotune_tmc set stepper_z pwm_autograd=True
autotune_tmc set stepper_z pwm_grad=7
autotune_tmc set stepper_z pwm_ofs=18
autotune_tmc set stepper_z pwm_reg=15
autotune_tmc set stepper_z pwm_lim=4
autotune_tmc set stepper_z tpwmthrs=1048575
autotune_tmc set stepper_z en_spreadcycle=True
autotune_tmc set stepper_z tcoolthrs=391(2.4)
autotune_tmc set stepper_z semin=2
autotune_tmc set stepper_z semax=2
autotune_tmc set stepper_z seup=3
autotune_tmc set stepper_z sedn=2
autotune_tmc set stepper_z seimin=0
autotune_tmc set stepper_z iholddelay=12
autotune_tmc set stepper_z multistep_filt=True
autotune_tmc set stepper_z1 pwm_freq=2
autotune_tmc stepper_z1 ncycles=219 pfdcycles=73
autotune_tmc set stepper_z1 tbl=1
autotune_tmc set stepper_z1 toff=1
autotune_tmc seting hysteresis based on 24.0 V
dcoilblank = 0.080000, dcoilsd = 0.013495
hysteresis = 22, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_z1 hstrt=7
autotune_tmc set stepper_z1 hend=9
autotune_tmc set stepper_z1 sgthrs=40
autotune_tmc using max PWM speed 43.108253
autotune_tmc set stepper_z1 pwm_autoscale=True
autotune_tmc set stepper_z1 pwm_autograd=True
autotune_tmc set stepper_z1 pwm_grad=7
autotune_tmc set stepper_z1 pwm_ofs=18
autotune_tmc set stepper_z1 pwm_reg=15
autotune_tmc set stepper_z1 pwm_lim=4
autotune_tmc set stepper_z1 tpwmthrs=1048575
autotune_tmc set stepper_z1 en_spreadcycle=True
autotune_tmc set stepper_z1 tcoolthrs=391(2.4)
autotune_tmc set stepper_z1 semin=2
autotune_tmc set stepper_z1 semax=2
autotune_tmc set stepper_z1 seup=3
autotune_tmc set stepper_z1 sedn=2
autotune_tmc set stepper_z1 seimin=0
autotune_tmc set stepper_z1 iholddelay=12
autotune_tmc set stepper_z1 multistep_filt=True
autotune_tmc set stepper_z2 pwm_freq=2
autotune_tmc stepper_z2 ncycles=219 pfdcycles=73
autotune_tmc set stepper_z2 tbl=1
autotune_tmc set stepper_z2 toff=1
autotune_tmc seting hysteresis based on 24.0 V
dcoilblank = 0.080000, dcoilsd = 0.013495
hysteresis = 22, htotal = 14, hstrt = 8, hend = 6
autotune_tmc set stepper_z2 hstrt=7
autotune_tmc set stepper_z2 hend=9
autotune_tmc set stepper_z2 sgthrs=40
autotune_tmc using max PWM speed 43.108253
autotune_tmc set stepper_z2 pwm_autoscale=True
autotune_tmc set stepper_z2 pwm_autograd=True
autotune_tmc set stepper_z2 pwm_grad=7
autotune_tmc set stepper_z2 pwm_ofs=18
autotune_tmc set stepper_z2 pwm_reg=15
autotune_tmc set stepper_z2 pwm_lim=4
autotune_tmc set stepper_z2 tpwmthrs=1048575
autotune_tmc set stepper_z2 en_spreadcycle=True
autotune_tmc set stepper_z2 tcoolthrs=391(2.4)
autotune_tmc set stepper_z2 semin=2
autotune_tmc set stepper_z2 semax=2
autotune_tmc set stepper_z2 seup=3
autotune_tmc set stepper_z2 sedn=2
autotune_tmc set stepper_z2 seimin=0
autotune_tmc set stepper_z2 iholddelay=12
autotune_tmc set stepper_z2 multistep_filt=True
Stats 245.4: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000008 mcu_task_stddev=0.000060 bytes_write=9340 bytes_read=12456 bytes_retransmit=9 bytes_invalid=0 send_seq=641 receive_seq=641 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400025253 rpi: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=831 bytes_read=4595 bytes_retransmit=0 bytes_invalid=0 send_seq=113 receive_seq=113 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999129 adj=49992144 Octopus_Max: temp=38.3 Pi: temp=38.9  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-103.8 sysload=0.16 cputime=11.567 memavail=7496120 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
webhooks: registering remote method 'shutdown_machine' for connection id: 4120832776
webhooks: registering remote method 'reboot_machine' for connection id: 4120832776
webhooks: registering remote method 'pause_job_queue' for connection id: 4120832776
webhooks: registering remote method 'start_job_queue' for connection id: 4120832776
webhooks: registering remote method 'set_device_power' for connection id: 4120832776
Stats 246.4: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000008 mcu_task_stddev=0.000060 bytes_write=9346 bytes_read=12738 bytes_retransmit=9 bytes_invalid=0 send_seq=642 receive_seq=642 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400032654 rpi: mcu_awake=0.003 mcu_task_avg=0.000019 mcu_task_stddev=0.000010 bytes_write=837 bytes_read=4625 bytes_retransmit=0 bytes_invalid=0 send_seq=114 receive_seq=114 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999979 adj=49997949 Octopus_Max: temp=38.3 Pi: temp=38.9  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.2 bed_core: temp=27.1 barrow: temp=-119.3 sysload=0.16 cputime=11.607 memavail=7495676 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 247.4: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000008 mcu_task_stddev=0.000060 bytes_write=9352 bytes_read=13049 bytes_retransmit=9 bytes_invalid=0 send_seq=643 receive_seq=643 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400032728 rpi: mcu_awake=0.003 mcu_task_avg=0.000019 mcu_task_stddev=0.000010 bytes_write=843 bytes_read=4641 bytes_retransmit=0 bytes_invalid=0 send_seq=115 receive_seq=115 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000276 adj=49997223 Octopus_Max: temp=38.3 Pi: temp=39.9  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-119.3 sysload=0.16 cputime=11.635 memavail=7495552 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 248.4: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000008 mcu_task_stddev=0.000060 bytes_write=9358 bytes_read=13332 bytes_retransmit=9 bytes_invalid=0 send_seq=644 receive_seq=644 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400031085 rpi: mcu_awake=0.003 mcu_task_avg=0.000019 mcu_task_stddev=0.000010 bytes_write=849 bytes_read=4657 bytes_retransmit=0 bytes_invalid=0 send_seq=116 receive_seq=116 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000441 adj=49997474 Octopus_Max: temp=38.3 Pi: temp=39.4  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.2 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.16 cputime=11.655 memavail=7495940 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 249.4: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000008 mcu_task_stddev=0.000060 bytes_write=9364 bytes_read=13614 bytes_retransmit=9 bytes_invalid=0 send_seq=645 receive_seq=645 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029796 rpi: mcu_awake=0.003 mcu_task_avg=0.000019 mcu_task_stddev=0.000010 bytes_write=855 bytes_read=4673 bytes_retransmit=0 bytes_invalid=0 send_seq=117 receive_seq=117 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000131 adj=49998013 Octopus_Max: temp=38.3 Pi: temp=38.0  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.16 cputime=11.667 memavail=7495944 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 250.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9370 bytes_read=13939 bytes_retransmit=9 bytes_invalid=0 send_seq=646 receive_seq=646 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029121 rpi: mcu_awake=0.003 mcu_task_avg=0.000019 mcu_task_stddev=0.000010 bytes_write=861 bytes_read=4689 bytes_retransmit=0 bytes_invalid=0 send_seq=118 receive_seq=118 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999977 adj=49997293 Octopus_Max: temp=38.2 Pi: temp=38.9  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=26.9 barrow: temp=-119.3 sysload=0.14 cputime=11.679 memavail=7495944 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 251.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9376 bytes_read=14208 bytes_retransmit=9 bytes_invalid=0 send_seq=647 receive_seq=647 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028672 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000014 bytes_write=867 bytes_read=4718 bytes_retransmit=0 bytes_invalid=0 send_seq=119 receive_seq=119 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999907 adj=49996888 Octopus_Max: temp=38.5 Pi: temp=38.0  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-110.0 sysload=0.14 cputime=11.692 memavail=7495944 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.8 pwm=0.000
Stats 252.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9382 bytes_read=14489 bytes_retransmit=9 bytes_invalid=0 send_seq=648 receive_seq=648 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029478 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000014 bytes_write=873 bytes_read=4734 bytes_retransmit=0 bytes_invalid=0 send_seq=120 receive_seq=120 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999858 adj=49996715 Octopus_Max: temp=38.3 Pi: temp=38.5  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.14 cputime=11.704 memavail=7495944 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 253.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9388 bytes_read=14800 bytes_retransmit=9 bytes_invalid=0 send_seq=649 receive_seq=649 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029316 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000014 bytes_write=879 bytes_read=4750 bytes_retransmit=0 bytes_invalid=0 send_seq=121 receive_seq=121 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999825 adj=49996129 Octopus_Max: temp=38.3 Pi: temp=38.9  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=26.9 barrow: temp=-119.3 sysload=0.14 cputime=11.725 memavail=7495960 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 254.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9394 bytes_read=15083 bytes_retransmit=9 bytes_invalid=0 send_seq=650 receive_seq=650 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029130 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000014 bytes_write=885 bytes_read=4766 bytes_retransmit=0 bytes_invalid=0 send_seq=122 receive_seq=122 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999921 adj=49996098 Octopus_Max: temp=38.6 Pi: temp=38.9  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.2 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.14 cputime=11.753 memavail=7495960 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 255.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9400 bytes_read=15379 bytes_retransmit=9 bytes_invalid=0 send_seq=651 receive_seq=651 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029497 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000014 bytes_write=897 bytes_read=4798 bytes_retransmit=0 bytes_invalid=0 send_seq=124 receive_seq=124 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000073 adj=49996552 Octopus_Max: temp=38.5 Pi: temp=38.5  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=26.9 barrow: temp=-119.3 sysload=0.13 cputime=11.783 memavail=7495960 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 256.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9406 bytes_read=15690 bytes_retransmit=9 bytes_invalid=0 send_seq=652 receive_seq=652 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029352 rpi: mcu_awake=0.001 mcu_task_avg=0.000015 mcu_task_stddev=0.000018 bytes_write=903 bytes_read=4827 bytes_retransmit=0 bytes_invalid=0 send_seq=125 receive_seq=125 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000117 adj=49996887 Octopus_Max: temp=38.3 Pi: temp=37.5  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-110.0 sysload=0.13 cputime=11.813 memavail=7495960 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.8 pwm=0.000
Stats 257.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9412 bytes_read=15973 bytes_retransmit=9 bytes_invalid=0 send_seq=653 receive_seq=653 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029314 rpi: mcu_awake=0.001 mcu_task_avg=0.000015 mcu_task_stddev=0.000018 bytes_write=909 bytes_read=4843 bytes_retransmit=0 bytes_invalid=0 send_seq=126 receive_seq=126 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000141 adj=49997014 Octopus_Max: temp=38.4 Pi: temp=38.0  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.13 cputime=11.841 memavail=7495972 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 258.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9418 bytes_read=16255 bytes_retransmit=9 bytes_invalid=0 send_seq=654 receive_seq=654 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029250 rpi: mcu_awake=0.001 mcu_task_avg=0.000015 mcu_task_stddev=0.000018 bytes_write=915 bytes_read=4859 bytes_retransmit=0 bytes_invalid=0 send_seq=127 receive_seq=127 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000160 adj=49996997 Octopus_Max: temp=38.4 Pi: temp=37.5  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-119.3 sysload=0.13 cputime=11.870 memavail=7495972 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 259.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9424 bytes_read=16566 bytes_retransmit=9 bytes_invalid=0 send_seq=655 receive_seq=655 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029194 rpi: mcu_awake=0.001 mcu_task_avg=0.000015 mcu_task_stddev=0.000018 bytes_write=921 bytes_read=4875 bytes_retransmit=0 bytes_invalid=0 send_seq=128 receive_seq=128 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000173 adj=49996989 Octopus_Max: temp=38.3 Pi: temp=38.0  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=26.9 barrow: temp=-119.3 sysload=0.13 cputime=11.900 memavail=7495972 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 260.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9430 bytes_read=16863 bytes_retransmit=9 bytes_invalid=0 send_seq=656 receive_seq=656 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029240 rpi: mcu_awake=0.001 mcu_task_avg=0.000015 mcu_task_stddev=0.000018 bytes_write=927 bytes_read=4891 bytes_retransmit=0 bytes_invalid=0 send_seq=129 receive_seq=129 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000156 adj=49996960 Octopus_Max: temp=38.4 Pi: temp=38.0  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-110.0 sysload=0.12 cputime=11.929 memavail=7495972 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 261.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9436 bytes_read=17145 bytes_retransmit=9 bytes_invalid=0 send_seq=657 receive_seq=657 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029152 rpi: mcu_awake=0.001 mcu_task_avg=0.000021 mcu_task_stddev=0.000025 bytes_write=933 bytes_read=4920 bytes_retransmit=0 bytes_invalid=0 send_seq=130 receive_seq=130 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000145 adj=49996739 Octopus_Max: temp=38.4 Pi: temp=38.0  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.12 cputime=11.958 memavail=7495972 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 262.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9442 bytes_read=17442 bytes_retransmit=9 bytes_invalid=0 send_seq=658 receive_seq=658 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029130 rpi: mcu_awake=0.001 mcu_task_avg=0.000021 mcu_task_stddev=0.000025 bytes_write=939 bytes_read=4936 bytes_retransmit=0 bytes_invalid=0 send_seq=131 receive_seq=131 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000135 adj=49996684 Octopus_Max: temp=38.4 Pi: temp=37.5  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.2 bed_core: temp=27.0 barrow: temp=-110.0 sysload=0.12 cputime=11.987 memavail=7495972 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 263.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9448 bytes_read=17725 bytes_retransmit=9 bytes_invalid=0 send_seq=659 receive_seq=659 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029029 rpi: mcu_awake=0.001 mcu_task_avg=0.000021 mcu_task_stddev=0.000025 bytes_write=945 bytes_read=4952 bytes_retransmit=0 bytes_invalid=0 send_seq=132 receive_seq=132 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000124 adj=49996602 Octopus_Max: temp=38.4 Pi: temp=38.0  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.12 cputime=12.015 memavail=7495756 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 264.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9454 bytes_read=18025 bytes_retransmit=9 bytes_invalid=0 send_seq=660 receive_seq=660 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028966 rpi: mcu_awake=0.001 mcu_task_avg=0.000021 mcu_task_stddev=0.000025 bytes_write=951 bytes_read=4968 bytes_retransmit=0 bytes_invalid=0 send_seq=133 receive_seq=133 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000064 adj=49996584 Octopus_Max: temp=38.6 Pi: temp=37.5  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.0 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.12 cputime=12.037 memavail=7489204 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 265.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9460 bytes_read=18350 bytes_retransmit=9 bytes_invalid=0 send_seq=661 receive_seq=661 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028798 rpi: mcu_awake=0.001 mcu_task_avg=0.000021 mcu_task_stddev=0.000025 bytes_write=957 bytes_read=4984 bytes_retransmit=0 bytes_invalid=0 send_seq=134 receive_seq=134 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000011 adj=49996269 Octopus_Max: temp=38.5 Pi: temp=38.9  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.11 cputime=12.050 memavail=7494632 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 266.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9466 bytes_read=18633 bytes_retransmit=9 bytes_invalid=0 send_seq=662 receive_seq=662 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028737 rpi: mcu_awake=0.001 mcu_task_avg=0.000015 mcu_task_stddev=0.000019 bytes_write=963 bytes_read=5013 bytes_retransmit=0 bytes_invalid=0 send_seq=135 receive_seq=135 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999970 adj=49996127 Octopus_Max: temp=38.4 Pi: temp=38.5  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-110.0 sysload=0.11 cputime=12.062 memavail=7494272 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 267.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9472 bytes_read=18915 bytes_retransmit=9 bytes_invalid=0 send_seq=663 receive_seq=663 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028610 rpi: mcu_awake=0.001 mcu_task_avg=0.000015 mcu_task_stddev=0.000019 bytes_write=969 bytes_read=5029 bytes_retransmit=0 bytes_invalid=0 send_seq=136 receive_seq=136 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999935 adj=49995996 Octopus_Max: temp=38.5 Pi: temp=38.0  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.2 bed_core: temp=27.0 barrow: temp=-110.0 sysload=0.11 cputime=12.074 memavail=7494272 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 268.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9478 bytes_read=19208 bytes_retransmit=9 bytes_invalid=0 send_seq=664 receive_seq=664 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028503 rpi: mcu_awake=0.001 mcu_task_avg=0.000015 mcu_task_stddev=0.000019 bytes_write=975 bytes_read=5045 bytes_retransmit=0 bytes_invalid=0 send_seq=137 receive_seq=137 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999909 adj=49995972 Octopus_Max: temp=38.4 Pi: temp=38.9  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-119.3 sysload=0.11 cputime=12.087 memavail=7498520 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 269.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9484 bytes_read=19509 bytes_retransmit=9 bytes_invalid=0 send_seq=665 receive_seq=665 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028411 rpi: mcu_awake=0.001 mcu_task_avg=0.000015 mcu_task_stddev=0.000019 bytes_write=981 bytes_read=5061 bytes_retransmit=0 bytes_invalid=0 send_seq=138 receive_seq=138 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999923 adj=49995990 Octopus_Max: temp=38.6 Pi: temp=38.0  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=26.9 barrow: temp=-119.3 sysload=0.11 cputime=12.106 memavail=7499412 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 270.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9490 bytes_read=19805 bytes_retransmit=9 bytes_invalid=0 send_seq=666 receive_seq=666 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028408 rpi: mcu_awake=0.001 mcu_task_avg=0.000015 mcu_task_stddev=0.000019 bytes_write=987 bytes_read=5077 bytes_retransmit=0 bytes_invalid=0 send_seq=139 receive_seq=139 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999938 adj=49996251 Octopus_Max: temp=38.5 Pi: temp=37.5  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-110.0 sysload=0.10 cputime=12.134 memavail=7499412 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 271.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9496 bytes_read=20116 bytes_retransmit=9 bytes_invalid=0 send_seq=667 receive_seq=667 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028423 rpi: mcu_awake=0.001 mcu_task_avg=0.000014 mcu_task_stddev=0.000018 bytes_write=993 bytes_read=5106 bytes_retransmit=0 bytes_invalid=0 send_seq=140 receive_seq=140 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999945 adj=49996387 Octopus_Max: temp=38.5 Pi: temp=38.0  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.10 cputime=12.164 memavail=7499412 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 272.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9502 bytes_read=20395 bytes_retransmit=9 bytes_invalid=0 send_seq=668 receive_seq=668 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028419 rpi: mcu_awake=0.001 mcu_task_avg=0.000014 mcu_task_stddev=0.000018 bytes_write=999 bytes_read=5122 bytes_retransmit=0 bytes_invalid=0 send_seq=141 receive_seq=141 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999959 adj=49996420 Octopus_Max: temp=38.5 Pi: temp=37.5  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=26.9 barrow: temp=-110.0 sysload=0.10 cputime=12.191 memavail=7499412 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 273.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9508 bytes_read=20670 bytes_retransmit=9 bytes_invalid=0 send_seq=669 receive_seq=669 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028412 rpi: mcu_awake=0.001 mcu_task_avg=0.000014 mcu_task_stddev=0.000018 bytes_write=1005 bytes_read=5138 bytes_retransmit=0 bytes_invalid=0 send_seq=142 receive_seq=142 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999972 adj=49996515 Octopus_Max: temp=38.6 Pi: temp=38.0  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.2 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.10 cputime=12.220 memavail=7498968 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 274.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9514 bytes_read=20981 bytes_retransmit=9 bytes_invalid=0 send_seq=670 receive_seq=670 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028415 rpi: mcu_awake=0.001 mcu_task_avg=0.000014 mcu_task_stddev=0.000018 bytes_write=1011 bytes_read=5154 bytes_retransmit=0 bytes_invalid=0 send_seq=143 receive_seq=143 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999966 adj=49996589 Octopus_Max: temp=38.6 Pi: temp=39.4  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-110.0 sysload=0.10 cputime=12.248 memavail=7498976 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.8 pwm=0.000
Stats 275.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9520 bytes_read=21292 bytes_retransmit=9 bytes_invalid=0 send_seq=671 receive_seq=671 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028439 rpi: mcu_awake=0.001 mcu_task_avg=0.000014 mcu_task_stddev=0.000018 bytes_write=1017 bytes_read=5170 bytes_retransmit=0 bytes_invalid=0 send_seq=144 receive_seq=144 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999963 adj=49996497 Octopus_Max: temp=38.6 Pi: temp=38.0  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-119.3 sysload=0.09 cputime=12.277 memavail=7498976 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 276.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9526 bytes_read=21560 bytes_retransmit=9 bytes_invalid=0 send_seq=672 receive_seq=672 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028452 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000021 bytes_write=1023 bytes_read=5199 bytes_retransmit=0 bytes_invalid=0 send_seq=145 receive_seq=145 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999962 adj=49996437 Octopus_Max: temp=38.5 Pi: temp=37.5  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.09 cputime=12.305 memavail=7498976 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.8 pwm=0.000
Stats 277.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9532 bytes_read=21871 bytes_retransmit=9 bytes_invalid=0 send_seq=673 receive_seq=673 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028430 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000021 bytes_write=1029 bytes_read=5215 bytes_retransmit=0 bytes_invalid=0 send_seq=146 receive_seq=146 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999955 adj=49996410 Octopus_Max: temp=38.6 Pi: temp=38.0  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-110.0 sysload=0.09 cputime=12.333 memavail=7498976 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.6 pwm=0.000
Stats 278.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9538 bytes_read=22168 bytes_retransmit=9 bytes_invalid=0 send_seq=674 receive_seq=674 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028421 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000021 bytes_write=1035 bytes_read=5231 bytes_retransmit=0 bytes_invalid=0 send_seq=147 receive_seq=147 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999950 adj=49996375 Octopus_Max: temp=38.6 Pi: temp=38.0  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=26.9 barrow: temp=-119.3 sysload=0.09 cputime=12.361 memavail=7498976 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 279.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9544 bytes_read=22436 bytes_retransmit=9 bytes_invalid=0 send_seq=675 receive_seq=675 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028403 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000021 bytes_write=1041 bytes_read=5247 bytes_retransmit=0 bytes_invalid=0 send_seq=148 receive_seq=148 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999944 adj=49996346 Octopus_Max: temp=38.7 Pi: temp=38.0  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.09 cputime=12.388 memavail=7501512 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 280.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9550 bytes_read=22761 bytes_retransmit=9 bytes_invalid=0 send_seq=676 receive_seq=676 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028390 rpi: mcu_awake=0.001 mcu_task_avg=0.000019 mcu_task_stddev=0.000021 bytes_write=1047 bytes_read=5263 bytes_retransmit=0 bytes_invalid=0 send_seq=149 receive_seq=149 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999943 adj=49996329 Octopus_Max: temp=38.8 Pi: temp=38.0  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.17 cputime=12.414 memavail=7496220 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 281.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9556 bytes_read=23058 bytes_retransmit=9 bytes_invalid=0 send_seq=677 receive_seq=677 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028338 rpi: mcu_awake=0.001 mcu_task_avg=0.000016 mcu_task_stddev=0.000017 bytes_write=1053 bytes_read=5292 bytes_retransmit=0 bytes_invalid=0 send_seq=150 receive_seq=150 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999926 adj=49996356 Octopus_Max: temp=38.7 Pi: temp=38.9  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=26.9 barrow: temp=-100.0 sysload=0.17 cputime=12.427 memavail=7502760 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 282.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9562 bytes_read=23326 bytes_retransmit=9 bytes_invalid=0 send_seq=678 receive_seq=678 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028303 rpi: mcu_awake=0.001 mcu_task_avg=0.000016 mcu_task_stddev=0.000017 bytes_write=1059 bytes_read=5308 bytes_retransmit=0 bytes_invalid=0 send_seq=151 receive_seq=151 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999910 adj=49996276 Octopus_Max: temp=38.8 Pi: temp=38.0  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-119.3 sysload=0.17 cputime=12.438 memavail=7502760 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 283.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9568 bytes_read=23626 bytes_retransmit=9 bytes_invalid=0 send_seq=679 receive_seq=679 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028260 rpi: mcu_awake=0.001 mcu_task_avg=0.000016 mcu_task_stddev=0.000017 bytes_write=1065 bytes_read=5324 bytes_retransmit=0 bytes_invalid=0 send_seq=152 receive_seq=152 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999897 adj=49996198 Octopus_Max: temp=38.7 Pi: temp=38.5  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-119.3 sysload=0.17 cputime=12.450 memavail=7503016 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 284.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9574 bytes_read=23920 bytes_retransmit=9 bytes_invalid=0 send_seq=680 receive_seq=680 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028221 rpi: mcu_awake=0.001 mcu_task_avg=0.000016 mcu_task_stddev=0.000017 bytes_write=1071 bytes_read=5340 bytes_retransmit=0 bytes_invalid=0 send_seq=153 receive_seq=153 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999884 adj=49996173 Octopus_Max: temp=38.5 Pi: temp=38.9  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-119.3 sysload=0.17 cputime=12.462 memavail=7503016 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 285.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9580 bytes_read=24202 bytes_retransmit=9 bytes_invalid=0 send_seq=681 receive_seq=681 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028192 rpi: mcu_awake=0.001 mcu_task_avg=0.000016 mcu_task_stddev=0.000017 bytes_write=1077 bytes_read=5356 bytes_retransmit=0 bytes_invalid=0 send_seq=154 receive_seq=154 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999874 adj=49996151 Octopus_Max: temp=38.6 Pi: temp=38.9  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-119.3 sysload=0.15 cputime=12.478 memavail=7503016 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 286.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9586 bytes_read=24513 bytes_retransmit=9 bytes_invalid=0 send_seq=682 receive_seq=682 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028200 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000013 bytes_write=1083 bytes_read=5385 bytes_retransmit=0 bytes_invalid=0 send_seq=155 receive_seq=155 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999883 adj=49996148 Octopus_Max: temp=38.7 Pi: temp=39.4  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.15 cputime=12.507 memavail=7503016 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.8 pwm=0.000
Stats 287.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9592 bytes_read=24810 bytes_retransmit=9 bytes_invalid=0 send_seq=683 receive_seq=683 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028207 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000013 bytes_write=1089 bytes_read=5401 bytes_retransmit=0 bytes_invalid=0 send_seq=156 receive_seq=156 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999880 adj=49996272 Octopus_Max: temp=38.8 Pi: temp=38.5  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-119.3 sysload=0.15 cputime=12.525 memavail=7500804 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 288.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9604 bytes_read=25094 bytes_retransmit=9 bytes_invalid=0 send_seq=685 receive_seq=685 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028180 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000013 bytes_write=1095 bytes_read=5417 bytes_retransmit=0 bytes_invalid=0 send_seq=157 receive_seq=157 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999878 adj=49996255 Octopus_Max: temp=38.7 Pi: temp=38.9  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-119.3 sysload=0.15 cputime=12.542 memavail=7493068 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 289.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9610 bytes_read=25405 bytes_retransmit=9 bytes_invalid=0 send_seq=686 receive_seq=686 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028169 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000013 bytes_write=1101 bytes_read=5433 bytes_retransmit=0 bytes_invalid=0 send_seq=158 receive_seq=158 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999878 adj=49996291 Octopus_Max: temp=38.7 Pi: temp=38.9  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.2 bed_core: temp=27.1 barrow: temp=-119.3 sysload=0.15 cputime=12.560 memavail=7494664 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.8 pwm=0.000
Stats 290.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9616 bytes_read=25716 bytes_retransmit=9 bytes_invalid=0 send_seq=687 receive_seq=687 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028159 rpi: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000013 bytes_write=1107 bytes_read=5449 bytes_retransmit=0 bytes_invalid=0 send_seq=159 receive_seq=159 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999885 adj=49996327 Octopus_Max: temp=38.5 Pi: temp=39.4  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.22 cputime=12.577 memavail=7481008 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 291.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9622 bytes_read=25984 bytes_retransmit=9 bytes_invalid=0 send_seq=688 receive_seq=688 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028151 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000013 bytes_write=1113 bytes_read=5478 bytes_retransmit=0 bytes_invalid=0 send_seq=160 receive_seq=160 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999883 adj=49996417 Octopus_Max: temp=38.6 Pi: temp=39.4  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.22 cputime=12.593 memavail=7469544 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.8 pwm=0.000
Stats 292.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9628 bytes_read=26295 bytes_retransmit=9 bytes_invalid=0 send_seq=689 receive_seq=689 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028139 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000013 bytes_write=1119 bytes_read=5494 bytes_retransmit=0 bytes_invalid=0 send_seq=161 receive_seq=161 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999878 adj=49996388 Octopus_Max: temp=38.6 Pi: temp=40.4  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-110.0 sysload=0.22 cputime=12.611 memavail=7464264 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 293.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9634 bytes_read=26592 bytes_retransmit=9 bytes_invalid=0 send_seq=690 receive_seq=690 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028129 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000013 bytes_write=1125 bytes_read=5510 bytes_retransmit=0 bytes_invalid=0 send_seq=162 receive_seq=162 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999874 adj=49996348 Octopus_Max: temp=38.9 Pi: temp=40.4  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.22 cputime=12.629 memavail=7495056 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.8 pwm=0.000
Stats 294.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9640 bytes_read=26846 bytes_retransmit=9 bytes_invalid=0 send_seq=691 receive_seq=691 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028107 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000013 bytes_write=1131 bytes_read=5526 bytes_retransmit=0 bytes_invalid=0 send_seq=163 receive_seq=163 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999875 adj=49996324 Octopus_Max: temp=38.7 Pi: temp=40.9  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.22 cputime=12.643 memavail=7501248 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.9 pwm=0.000
Stats 295.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9646 bytes_read=27171 bytes_retransmit=9 bytes_invalid=0 send_seq=692 receive_seq=692 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028101 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000013 bytes_write=1137 bytes_read=5542 bytes_retransmit=0 bytes_invalid=0 send_seq=164 receive_seq=164 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999872 adj=49996371 Octopus_Max: temp=38.7 Pi: temp=40.4  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.1 barrow: temp=-110.0 sysload=0.36 cputime=12.659 memavail=7500292 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 296.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9652 bytes_read=27468 bytes_retransmit=9 bytes_invalid=0 send_seq=693 receive_seq=693 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028096 rpi: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000013 bytes_write=1143 bytes_read=5558 bytes_retransmit=0 bytes_invalid=0 send_seq=165 receive_seq=165 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999866 adj=49996345 Octopus_Max: temp=38.9 Pi: temp=40.4  heater_bed: target=0 temp=26.6 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.36 cputime=12.676 memavail=7496052 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 297.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9658 bytes_read=27736 bytes_retransmit=9 bytes_invalid=0 send_seq=694 receive_seq=694 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028094 rpi: mcu_awake=0.001 mcu_task_avg=0.000009 mcu_task_stddev=0.000009 bytes_write=1149 bytes_read=5587 bytes_retransmit=0 bytes_invalid=0 send_seq=166 receive_seq=166 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999868 adj=49996297 Octopus_Max: temp=38.7 Pi: temp=40.9  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.36 cputime=12.694 memavail=7496736 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.8 pwm=0.000
Stats 298.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9664 bytes_read=28047 bytes_retransmit=9 bytes_invalid=0 send_seq=695 receive_seq=695 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028086 rpi: mcu_awake=0.001 mcu_task_avg=0.000009 mcu_task_stddev=0.000009 bytes_write=1155 bytes_read=5603 bytes_retransmit=0 bytes_invalid=0 send_seq=167 receive_seq=167 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999865 adj=49996331 Octopus_Max: temp=38.8 Pi: temp=40.4  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.36 cputime=12.710 memavail=7495820 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
Stats 299.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9670 bytes_read=28344 bytes_retransmit=9 bytes_invalid=0 send_seq=696 receive_seq=696 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028084 rpi: mcu_awake=0.001 mcu_task_avg=0.000009 mcu_task_stddev=0.000009 bytes_write=1161 bytes_read=5619 bytes_retransmit=0 bytes_invalid=0 send_seq=168 receive_seq=168 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999865 adj=49996312 Octopus_Max: temp=38.8 Pi: temp=40.4  heater_bed: target=0 temp=26.5 pwm=0.000 bed_mat: temp=26.1 bed_core: temp=27.0 barrow: temp=-119.3 sysload=0.36 cputime=12.725 memavail=7499516 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.7 pwm=0.000
webhooks client 4120832776: Disconnected
Starting Klippy...
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/printer_data/config/printer.cfg', '-l', '/home/pi/printer_data/logs/klippy.log', '-I', '/home/pi/printer_data/comms/klippy.serial', '-a', '/home/pi/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-169-g28faf814-dirty'
Untracked files: klippy/extras/autotune_tmc.py, klippy/extras/beacon.py, klippy/extras/gcode_shell_command.py, klippy/extras/linear_movement_vibrations.py, klippy/extras/motor_constants.py, klippy/extras/ratos_homing.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Mar 12 2021, 04:06:34) \n[GCC 10.2.1 20210110]'
Start printer at Sat Apr 20 23:22:40 2024 (1713651760.4 22.9)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
webhooks client 4127764264: New connection
webhooks client 4127764264: Client info {'program': 'Moonraker', 'version': 'v0.8.0-327-g9447494'}
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
MCU error during connect
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/mcu.py", line 791, in _mcu_identify
    self._serial.connect_uart(self._serialport, self._baud, rts)
  File "/home/pi/klipper/klippy/serialhdl.py", line 182, in connect_uart
    self._error("Unable to connect")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Unable to connect

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 176, in _connect
    self.send_event("klippy:mcu_identify")
  File "/home/pi/klipper/klippy/klippy.py", line 263, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/klippy.py", line 263, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/mcu.py", line 796, in _mcu_identify
    raise error(str(e))
mcu.error: mcu 'mcu': Unable to connect
Build file /home/pi/klipper/klippy/../.config(914): Sat Apr 20 22:38:30 2024
========= Last MCU build config =========
# CONFIG_LOW_LEVEL_OPTIONS is not set
# CONFIG_MACH_AVR is not set
# CONFIG_MACH_ATSAM is not set
# CONFIG_MACH_ATSAMD is not set
# CONFIG_MACH_LPC176X is not set
# CONFIG_MACH_STM32 is not set
# CONFIG_MACH_HC32F460 is not set
# CONFIG_MACH_RP2040 is not set
# CONFIG_MACH_PRU is not set
# CONFIG_MACH_AR100 is not set
CONFIG_MACH_LINUX=y
# CONFIG_MACH_SIMU is not set
CONFIG_BOARD_DIRECTORY="linux"
CONFIG_CLOCK_FREQ=50000000
CONFIG_LINUX_SELECT=y
CONFIG_USB_VENDOR_ID=0x1d50
CONFIG_USB_DEVICE_ID=0x614e
CONFIG_USB_SERIAL_NUMBER="12345"
CONFIG_WANT_GPIO_BITBANGING=y
CONFIG_WANT_DISPLAYS=y
CONFIG_WANT_SENSORS=y
CONFIG_WANT_LIS2DW=y
CONFIG_WANT_LDC1612=y
CONFIG_WANT_SOFTWARE_I2C=y
CONFIG_WANT_SOFTWARE_SPI=y
CONFIG_NEED_SENSOR_BULK=y
CONFIG_CANBUS_FREQUENCY=1000000
CONFIG_HAVE_GPIO=y
CONFIG_HAVE_GPIO_ADC=y
CONFIG_HAVE_GPIO_SPI=y
CONFIG_HAVE_GPIO_I2C=y
CONFIG_HAVE_GPIO_HARD_PWM=y
CONFIG_INLINE_STEPPER_HACK=y
=======================
Build file /home/pi/klipper/klippy/../out/klipper.dict(9535): Sat Apr 20 22:38:48 2024
Last MCU build version: v0.12.0-169-g28faf814
Last MCU build tools: gcc: (Raspbian 10.2.1-6+rpi1) 10.2.1 20210110 binutils: (GNU Binutils for Raspbian) 2.35.2
Last MCU build config: ADC_MAX=4095 CLOCK_FREQ=50000000 MCU=linux PCA9685_MAX=4096 PWM_MAX=32768 STATS_SUMSQ_BASE=256
Build file /home/pi/klipper/klippy/../out/klipper.elf(712672): Sat Apr 20 22:38:52 2024
webhooks client 4127764264: Disconnected
Starting Klippy...
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/printer_data/config/printer.cfg', '-l', '/home/pi/printer_data/logs/klippy.log', '-I', '/home/pi/printer_data/comms/klippy.serial', '-a', '/home/pi/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-169-g28faf814-dirty'
Untracked files: klippy/extras/autotune_tmc.py, klippy/extras/beacon.py, klippy/extras/gcode_shell_command.py, klippy/extras/linear_movement_vibrations.py, klippy/extras/motor_constants.py, klippy/extras/ratos_homing.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Mar 12 2021, 04:06:34) \n[GCC 10.2.1 20210110]'
Start printer at Sat Apr 20 23:25:34 2024 (1713651934.1 22.7)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
webhooks client 4134837936: New connection
webhooks client 4134837936: Client info {'program': 'Moonraker', 'version': 'v0.8.0-327-g9447494'}
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
webhooks client 4134837936: Disconnected
Starting Klippy...
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/printer_data/config/printer.cfg', '-l', '/home/pi/printer_data/logs/klippy.log', '-I', '/home/pi/printer_data/comms/klippy.serial', '-a', '/home/pi/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-169-g28faf814-dirty'
Untracked files: klippy/extras/autotune_tmc.py, klippy/extras/beacon.py, klippy/extras/gcode_shell_command.py, klippy/extras/linear_movement_vibrations.py, klippy/extras/motor_constants.py, klippy/extras/ratos_homing.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Mar 12 2021, 04:06:34) \n[GCC 10.2.1 20210110]'
Start printer at Sat Apr 20 23:26:08 2024 (1713651968.2 23.8)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
webhooks client 4127116976: New connection
webhooks client 4127116976: Client info {'program': 'Moonraker', 'version': 'v0.8.0-327-g9447494'}
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
