===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999
=======================
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/printer_data/config/printer.cfg', '-l', '/home/pi/printer_data/logs/klippy.log', '-I', '/home/pi/printer_data/comms/klippy.serial', '-a', '/home/pi/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-142-gb029d046-dirty'
Untracked files: klippy/extras/autotune_tmc.py, klippy/extras/beacon.py, klippy/extras/gcode_shell_command.py, klippy/extras/linear_movement_vibrations.py, klippy/extras/motor_constants.py, klippy/extras/ratos_homing.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Mar 12 2021, 04:06:34) \n[GCC 10.2.1 20210110]'
webhooks client 4129128280: {'program': 'Moonraker', 'version': 'v0.8.0-325-g99b97af'}
=============== Log rollover at Sat Apr 20 18:48:33 2024 ===============
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
MCU error during connect
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/mcu.py", line 769, in _mcu_identify
    self._serial.connect_uart(self._serialport, self._baud, rts)
  File "/home/pi/klipper/klippy/serialhdl.py", line 182, in connect_uart
    self._error("Unable to connect")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Unable to connect

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 176, in _connect
    self.send_event("klippy:mcu_identify")
  File "/home/pi/klipper/klippy/klippy.py", line 263, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/klippy.py", line 263, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/mcu.py", line 774, in _mcu_identify
    raise error(str(e))
mcu.error: mcu 'mcu': Unable to connect
Build file /home/pi/klipper/klippy/../.config(1767): Fri Apr 19 01:36:48 2024
========= Last MCU build config =========
CONFIG_LOW_LEVEL_OPTIONS=y
# CONFIG_MACH_AVR is not set
# CONFIG_MACH_ATSAM is not set
# CONFIG_MACH_ATSAMD is not set
# CONFIG_MACH_LPC176X is not set
# CONFIG_MACH_STM32 is not set
# CONFIG_MACH_HC32F460 is not set
CONFIG_MACH_RP2040=y
# CONFIG_MACH_PRU is not set
# CONFIG_MACH_AR100 is not set
# CONFIG_MACH_LINUX is not set
# CONFIG_MACH_SIMU is not set
CONFIG_BOARD_DIRECTORY="rp2040"
CONFIG_MCU="rp2040"
CONFIG_CLOCK_FREQ=12000000
CONFIG_USBSERIAL=y
CONFIG_FLASH_SIZE=0x200000
CONFIG_FLASH_BOOT_ADDRESS=0x10000100
CONFIG_RAM_START=0x20000000
CONFIG_RAM_SIZE=0x42000
CONFIG_STACK_SIZE=512
CONFIG_FLASH_APPLICATION_ADDRESS=0x10000100
CONFIG_RP2040_SELECT=y
CONFIG_RP2040_HAVE_STAGE2=y
CONFIG_RP2040_FLASH_START_0100=y
# CONFIG_RP2040_FLASH_START_4000 is not set
CONFIG_RP2040_FLASH_W25Q080=y
# CONFIG_RP2040_FLASH_GENERIC_03 is not set
CONFIG_RP2040_STAGE2_FILE="boot2_w25q080.S"
CONFIG_RP2040_STAGE2_CLKDIV=2
CONFIG_RP2040_USB=y
# CONFIG_RP2040_SERIAL_UART0 is not set
# CONFIG_RP2040_CANBUS is not set
# CONFIG_RP2040_USBCANBUS is not set
CONFIG_RP2040_CANBUS_GPIO_RX=4
CONFIG_RP2040_CANBUS_GPIO_TX=5
CONFIG_USB=y
CONFIG_USB_VENDOR_ID=0x1d50
CONFIG_USB_DEVICE_ID=0x614e
CONFIG_USB_SERIAL_NUMBER_CHIPID=y
CONFIG_USB_SERIAL_NUMBER="12345"

#
# USB ids
#
# end of USB ids

CONFIG_WANT_GPIO_BITBANGING=y
CONFIG_WANT_DISPLAYS=y
CONFIG_WANT_SENSORS=y
CONFIG_WANT_LIS2DW=y
CONFIG_WANT_SOFTWARE_I2C=y
CONFIG_WANT_SOFTWARE_SPI=y
CONFIG_NEED_SENSOR_BULK=y
CONFIG_CANBUS_FREQUENCY=1000000
CONFIG_INITIAL_PINS=""
CONFIG_HAVE_GPIO=y
CONFIG_HAVE_GPIO_ADC=y
CONFIG_HAVE_GPIO_SPI=y
CONFIG_HAVE_GPIO_I2C=y
CONFIG_HAVE_GPIO_HARD_PWM=y
CONFIG_HAVE_STRICT_TIMING=y
CONFIG_HAVE_CHIPID=y
CONFIG_HAVE_STEPPER_BOTH_EDGE=y
CONFIG_HAVE_BOOTLOADER_REQUEST=y
CONFIG_INLINE_STEPPER_HACK=y
=======================
Build file /home/pi/klipper/klippy/../out/klipper.dict(8110): Fri Apr 19 01:37:04 2024
Last MCU build version: v0.12.0-142-gb029d046
Last MCU build tools: gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.34-4+rpi1+14) 2.34
Last MCU build config: ADC_MAX=4095 BUS_PINS_i2c0a=gpio0,gpio1 BUS_PINS_i2c0b=gpio4,gpio5 BUS_PINS_i2c0c=gpio8,gpio9 BUS_PINS_i2c0d=gpio12,gpio13 BUS_PINS_i2c0e=gpio16,gpio17 BUS_PINS_i2c0f=gpio20,gpio21 BUS_PINS_i2c0g=gpio24,gpio25 BUS_PINS_i2c0h=gpio28,gpio29 BUS_PINS_i2c1a=gpio2,gpio3 BUS_PINS_i2c1b=gpio6,gpio7 BUS_PINS_i2c1c=gpio10,gpio11 BUS_PINS_i2c1d=gpio14,gpio15 BUS_PINS_i2c1e=gpio18,gpio19 BUS_PINS_i2c1f=gpio22,gpio23 BUS_PINS_i2c1g=gpio26,gpio27 BUS_PINS_spi0a=gpio0,gpio3,gpio2 BUS_PINS_spi0b=gpio4,gpio7,gpio6 BUS_PINS_spi0c=gpio16,gpio19,gpio18 BUS_PINS_spi0d=gpio20,gpio23,gpio22 BUS_PINS_spi1a=gpio8,gpio11,gpio10 BUS_PINS_spi1b=gpio12,gpio15,gpio14 BUS_PINS_spi1c=gpio24,gpio27,gpio26 CLOCK_FREQ=12000000 MCU=rp2040 PWM_MAX=255 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
Build file /home/pi/klipper/klippy/../out/klipper.elf(1780784): Fri Apr 19 01:37:10 2024
Attempting MCU 'mcu' reset
Unhandled exception during post run
Traceback (most recent call last):
  File "/home/pi/klippy-env/lib/python3.9/site-packages/serial/serialposix.py", line 265, in open
    self.fd = os.open(self.portstr, os.O_RDWR | os.O_NOCTTY | os.O_NONBLOCK)
FileNotFoundError: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 234, in run
    self.send_event("klippy:firmware_restart")
  File "/home/pi/klipper/klippy/klippy.py", line 263, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/klippy.py", line 263, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/mcu.py", line 931, in _firmware_restart
    self._restart_arduino()
  File "/home/pi/klipper/klippy/mcu.py", line 891, in _restart_arduino
    serialhdl.arduino_reset(self._serialport, self._reactor)
  File "/home/pi/klipper/klippy/serialhdl.py", line 379, in arduino_reset
    ser = serial.Serial(serialport, 2400, timeout=0, exclusive=True)
  File "/home/pi/klippy-env/lib/python3.9/site-packages/serial/serialutil.py", line 240, in __init__
    self.open()
  File "/home/pi/klippy-env/lib/python3.9/site-packages/serial/serialposix.py", line 268, in open
    raise SerialException(msg.errno, "could not open port {}: {}".format(self._port, msg))
serial.serialutil.SerialException: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
Restarting printer
Start printer at Sat Apr 20 20:09:48 2024 (1713640188.8 4916.6)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
webhooks client 4121935368: New connection
webhooks client 4121935368: Client info {'program': 'Moonraker', 'version': 'v0.8.0-325-g99b97af'}
mcu 'mcu': got {'count': 309, 'sum': 251865, 'sumsq': 1241014, '#name': 'stats', '#sent_time': 4923.342526232, '#receive_time': 4923.393163102}
Loaded MCU 'mcu' 106 commands (v0.12.0-142-gb029d046 / gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.34-4+rpi1+14) 2.34)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1_PB6_PB7=PB6,PB7 BUS_PINS_i2c1_PB8_PB9=PB8,PB9 BUS_PINS_i2c2_PB10_PB11=PB10,PB11 BUS_PINS_i2c3_PA8_PC9=PA8,PC9 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi2a=PC2,PC3,PB10 BUS_PINS_spi3a=PC11,PC12,PC10 BUS_PINS_spi4=PE13,PE14,PE12 BUS_PINS_spi5=PF8,PF9,PF7 BUS_PINS_spi5a=PH7,PF11,PH6 BUS_PINS_spi6=PG12,PG14,PG13 CLOCK_FREQ=400000000 MCU=stm32h723xx PWM_MAX=255 RESERVE_PINS_USB=PA11,PA12 RESERVE_PINS_crystal=PH0,PH1 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
mcu 'rpi': Starting connect
Loaded MCU 'rpi' 112 commands (v0.12.0-142-gb029d046 / gcc: (Raspbian 10.2.1-6+rpi1) 10.2.1 20210110 binutils: (GNU Binutils for Raspbian) 2.35.2)
MCU 'rpi' config: ADC_MAX=4095 CLOCK_FREQ=50000000 MCU=linux PCA9685_MAX=4096 PWM_MAX=32768 STATS_SUMSQ_BASE=256
mcu_temperature 'mcu' nominal base=-273.952569 slope=1618.577075
Sending MCU 'mcu' printer configuration...
Configured MCU 'mcu' (1024 moves)
Sending MCU 'rpi' printer configuration...
Configured MCU 'rpi' (1024 moves)
Starting heater checks for heater_bed
bed_mesh: generated points
Index |  Tool Adjusted  |   Probe
  0   | (40.0, 23.0)    | (10.0, 8.4)
  1   | (57.8, 23.0)    | (27.8, 8.4)
  2   | (75.5, 23.0)    | (45.5, 8.4)
  3   | (93.3, 23.0)    | (63.3, 8.4)
  4   | (111.1, 23.0)   | (81.1, 8.4)
  5   | (128.8, 23.0)   | (98.8, 8.4)
  6   | (146.6, 23.0)   | (116.6, 8.4)
  7   | (164.4, 23.0)   | (134.4, 8.4)
  8   | (182.2, 23.0)   | (152.2, 8.4)
  9   | (199.9, 23.0)   | (169.9, 8.4)
  10  | (199.9, 42.7)   | (169.9, 28.1)
  11  | (182.2, 42.7)   | (152.2, 28.1)
  12  | (164.4, 42.7)   | (134.4, 28.1)
  13  | (146.6, 42.7)   | (116.6, 28.1)
  14  | (128.9, 42.7)   | (98.9, 28.1)
  15  | (111.1, 42.7)   | (81.1, 28.1)
  16  | (93.3, 42.7)    | (63.3, 28.1)
  17  | (75.5, 42.7)    | (45.5, 28.1)
  18  | (57.8, 42.7)    | (27.8, 28.1)
  19  | (40.0, 42.7)    | (10.0, 28.1)
  20  | (40.0, 62.3)    | (10.0, 47.8)
  21  | (57.8, 62.3)    | (27.8, 47.8)
  22  | (75.5, 62.3)    | (45.5, 47.8)
  23  | (93.3, 62.3)    | (63.3, 47.8)
  24  | (111.1, 62.3)   | (81.1, 47.8)
  25  | (128.8, 62.3)   | (98.8, 47.8)
  26  | (146.6, 62.3)   | (116.6, 47.8)
  27  | (164.4, 62.3)   | (134.4, 47.8)
  28  | (182.2, 62.3)   | (152.2, 47.8)
  29  | (199.9, 62.3)   | (169.9, 47.8)
  30  | (199.9, 82.0)   | (169.9, 67.4)
  31  | (182.2, 82.0)   | (152.2, 67.4)
  32  | (164.4, 82.0)   | (134.4, 67.4)
  33  | (146.6, 82.0)   | (116.6, 67.4)
  34  | (128.9, 82.0)   | (98.9, 67.4)
  35  | (111.1, 82.0)   | (81.1, 67.4)
  36  | (93.3, 82.0)    | (63.3, 67.4)
  37  | (75.5, 82.0)    | (45.5, 67.4)
  38  | (57.8, 82.0)    | (27.8, 67.4)
  39  | (40.0, 82.0)    | (10.0, 67.4)
  40  | (40.0, 101.6)   | (10.0, 87.1)
  41  | (57.8, 101.6)   | (27.8, 87.1)
  42  | (75.5, 101.6)   | (45.5, 87.1)
  43  | (93.3, 101.6)   | (63.3, 87.1)
  44  | (111.1, 101.6)  | (81.1, 87.1)
  45  | (128.8, 101.6)  | (98.8, 87.1)
  46  | (146.6, 101.6)  | (116.6, 87.1)
  47  | (164.4, 101.6)  | (134.4, 87.1)
  48  | (182.2, 101.6)  | (152.2, 87.1)
  49  | (199.9, 101.6)  | (169.9, 87.1)
  50  | (199.9, 121.3)  | (169.9, 106.7)
  51  | (182.2, 121.3)  | (152.2, 106.7)
  52  | (164.4, 121.3)  | (134.4, 106.7)
  53  | (146.6, 121.3)  | (116.6, 106.7)
  54  | (128.9, 121.3)  | (98.9, 106.7)
  55  | (111.1, 121.3)  | (81.1, 106.7)
  56  | (93.3, 121.3)   | (63.3, 106.7)
  57  | (75.5, 121.3)   | (45.5, 106.7)
  58  | (57.8, 121.3)   | (27.8, 106.7)
  59  | (40.0, 121.3)   | (10.0, 106.7)
  60  | (40.0, 141.0)   | (10.0, 126.4)
  61  | (57.8, 141.0)   | (27.8, 126.4)
  62  | (75.5, 141.0)   | (45.5, 126.4)
  63  | (93.3, 141.0)   | (63.3, 126.4)
  64  | (111.1, 141.0)  | (81.1, 126.4)
  65  | (128.8, 141.0)  | (98.8, 126.4)
  66  | (146.6, 141.0)  | (116.6, 126.4)
  67  | (164.4, 141.0)  | (134.4, 126.4)
  68  | (182.2, 141.0)  | (152.2, 126.4)
  69  | (199.9, 141.0)  | (169.9, 126.4)
  70  | (199.9, 160.6)  | (169.9, 146.1)
  71  | (182.2, 160.6)  | (152.2, 146.1)
  72  | (164.4, 160.6)  | (134.4, 146.1)
  73  | (146.6, 160.6)  | (116.6, 146.1)
  74  | (128.9, 160.6)  | (98.9, 146.1)
  75  | (111.1, 160.6)  | (81.1, 146.1)
  76  | (93.3, 160.6)   | (63.3, 146.1)
  77  | (75.5, 160.6)   | (45.5, 146.1)
  78  | (57.8, 160.6)   | (27.8, 146.1)
  79  | (40.0, 160.6)   | (10.0, 146.1)
  80  | (40.0, 180.3)   | (10.0, 165.7)
  81  | (57.8, 180.3)   | (27.8, 165.7)
  82  | (75.5, 180.3)   | (45.5, 165.7)
  83  | (93.3, 180.3)   | (63.3, 165.7)
  84  | (111.1, 180.3)  | (81.1, 165.7)
  85  | (128.8, 180.3)  | (98.8, 165.7)
  86  | (146.6, 180.3)  | (116.6, 165.7)
  87  | (164.4, 180.3)  | (134.4, 165.7)
  88  | (182.2, 180.3)  | (152.2, 165.7)
  89  | (199.9, 180.3)  | (169.9, 165.7)
  90  | (199.9, 199.9)  | (169.9, 185.4)
  91  | (182.2, 199.9)  | (152.2, 185.4)
  92  | (164.4, 199.9)  | (134.4, 185.4)
  93  | (146.6, 199.9)  | (116.6, 185.4)
  94  | (128.9, 199.9)  | (98.9, 185.4)
  95  | (111.1, 199.9)  | (81.1, 185.4)
  96  | (93.3, 199.9)   | (63.3, 185.4)
  97  | (75.5, 199.9)   | (45.5, 185.4)
  98  | (57.8, 199.9)   | (27.8, 185.4)
  99  | (40.0, 199.9)   | (10.0, 185.4)
Starting heater checks for extruder
autotune_tmc set stepper_x pwm_freq=0
autotune_tmc stepper_x ncycles=480 pfdcycles=206
autotune_tmc set stepper_x tpfd=2
autotune_tmc set stepper_x tbl=1
autotune_tmc set stepper_x toff=3
autotune_tmc set stepper_x hstrt=7
autotune_tmc set stepper_x hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_x pwm_autoscale=True
autotune_tmc set stepper_x pwm_autograd=True
autotune_tmc set stepper_x pwm_grad=4
autotune_tmc set stepper_x pwm_ofs=10
autotune_tmc set stepper_x pwm_reg=15
autotune_tmc set stepper_x pwm_lim=4
autotune_tmc set stepper_x tpwmthrs=1048575
autotune_tmc set stepper_x en_pwm_mode=False
autotune_tmc set stepper_x tcoolthrs=391(24.0)
autotune_tmc set stepper_x sgt=1
autotune_tmc set stepper_x small_hysteresis=False
autotune_tmc set stepper_x semin=2
autotune_tmc set stepper_x semax=2
autotune_tmc set stepper_x seup=3
autotune_tmc set stepper_x sedn=2
autotune_tmc set stepper_x seimin=0
autotune_tmc set stepper_x sfilt=0
autotune_tmc set stepper_x iholddelay=12
autotune_tmc set stepper_x vhighfs=False
autotune_tmc set stepper_x vhighchm=False
autotune_tmc set stepper_x multistep_filt=True
autotune_tmc set stepper_x1 pwm_freq=0
autotune_tmc stepper_x1 ncycles=480 pfdcycles=206
autotune_tmc set stepper_x1 tpfd=2
autotune_tmc set stepper_x1 tbl=1
autotune_tmc set stepper_x1 toff=3
autotune_tmc set stepper_x1 hstrt=7
autotune_tmc set stepper_x1 hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_x1 pwm_autoscale=True
autotune_tmc set stepper_x1 pwm_autograd=True
autotune_tmc set stepper_x1 pwm_grad=4
autotune_tmc set stepper_x1 pwm_ofs=10
autotune_tmc set stepper_x1 pwm_reg=15
autotune_tmc set stepper_x1 pwm_lim=4
autotune_tmc set stepper_x1 tpwmthrs=1048575
autotune_tmc set stepper_x1 en_pwm_mode=False
autotune_tmc set stepper_x1 tcoolthrs=391(24.0)
autotune_tmc set stepper_x1 sgt=1
autotune_tmc set stepper_x1 small_hysteresis=False
autotune_tmc set stepper_x1 semin=2
autotune_tmc set stepper_x1 semax=2
autotune_tmc set stepper_x1 seup=3
autotune_tmc set stepper_x1 sedn=2
autotune_tmc set stepper_x1 seimin=0
autotune_tmc set stepper_x1 sfilt=0
autotune_tmc set stepper_x1 iholddelay=12
autotune_tmc set stepper_x1 vhighfs=False
autotune_tmc set stepper_x1 vhighchm=False
autotune_tmc set stepper_x1 multistep_filt=True
autotune_tmc set stepper_y pwm_freq=0
autotune_tmc stepper_y ncycles=480 pfdcycles=206
autotune_tmc set stepper_y tpfd=2
autotune_tmc set stepper_y tbl=1
autotune_tmc set stepper_y toff=3
autotune_tmc set stepper_y hstrt=7
autotune_tmc set stepper_y hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_y pwm_autoscale=True
autotune_tmc set stepper_y pwm_autograd=True
autotune_tmc set stepper_y pwm_grad=4
autotune_tmc set stepper_y pwm_ofs=10
autotune_tmc set stepper_y pwm_reg=15
autotune_tmc set stepper_y pwm_lim=4
autotune_tmc set stepper_y tpwmthrs=1048575
autotune_tmc set stepper_y en_pwm_mode=False
autotune_tmc set stepper_y tcoolthrs=391(24.0)
autotune_tmc set stepper_y sgt=1
autotune_tmc set stepper_y small_hysteresis=False
autotune_tmc set stepper_y semin=2
autotune_tmc set stepper_y semax=2
autotune_tmc set stepper_y seup=3
autotune_tmc set stepper_y sedn=2
autotune_tmc set stepper_y seimin=0
autotune_tmc set stepper_y sfilt=0
autotune_tmc set stepper_y iholddelay=12
autotune_tmc set stepper_y vhighfs=False
autotune_tmc set stepper_y vhighchm=False
autotune_tmc set stepper_y multistep_filt=True
autotune_tmc set stepper_y1 pwm_freq=0
autotune_tmc stepper_y1 ncycles=480 pfdcycles=206
autotune_tmc set stepper_y1 tpfd=2
autotune_tmc set stepper_y1 tbl=1
autotune_tmc set stepper_y1 toff=3
autotune_tmc set stepper_y1 hstrt=7
autotune_tmc set stepper_y1 hend=9
autotune_tmc using max PWM speed 445.633841
autotune_tmc set stepper_y1 pwm_autoscale=True
autotune_tmc set stepper_y1 pwm_autograd=True
autotune_tmc set stepper_y1 pwm_grad=4
autotune_tmc set stepper_y1 pwm_ofs=10
autotune_tmc set stepper_y1 pwm_reg=15
autotune_tmc set stepper_y1 pwm_lim=4
autotune_tmc set stepper_y1 tpwmthrs=1048575
autotune_tmc set stepper_y1 en_pwm_mode=False
autotune_tmc set stepper_y1 tcoolthrs=391(24.0)
autotune_tmc set stepper_y1 sgt=1
autotune_tmc set stepper_y1 small_hysteresis=False
autotune_tmc set stepper_y1 semin=2
autotune_tmc set stepper_y1 semax=2
autotune_tmc set stepper_y1 seup=3
autotune_tmc set stepper_y1 sedn=2
autotune_tmc set stepper_y1 seimin=0
autotune_tmc set stepper_y1 sfilt=0
autotune_tmc set stepper_y1 iholddelay=12
autotune_tmc set stepper_y1 vhighfs=False
autotune_tmc set stepper_y1 vhighchm=False
autotune_tmc set stepper_y1 multistep_filt=True
autotune_tmc set stepper_z pwm_freq=0
autotune_tmc stepper_z ncycles=480 pfdcycles=206
autotune_tmc set stepper_z tbl=1
autotune_tmc set stepper_z toff=3
autotune_tmc set stepper_z hstrt=7
autotune_tmc set stepper_z hend=9
autotune_tmc set stepper_z sgthrs=40
autotune_tmc using max PWM speed 43.108253
autotune_tmc set stepper_z pwm_autoscale=True
autotune_tmc set stepper_z pwm_autograd=True
autotune_tmc set stepper_z pwm_grad=7
autotune_tmc set stepper_z pwm_ofs=18
autotune_tmc set stepper_z pwm_reg=15
autotune_tmc set stepper_z pwm_lim=4
autotune_tmc set stepper_z tpwmthrs=1048575
autotune_tmc set stepper_z en_spreadcycle=True
autotune_tmc set stepper_z tcoolthrs=391(2.4)
autotune_tmc set stepper_z semin=2
autotune_tmc set stepper_z semax=2
autotune_tmc set stepper_z seup=3
autotune_tmc set stepper_z sedn=2
autotune_tmc set stepper_z seimin=0
autotune_tmc set stepper_z iholddelay=12
autotune_tmc set stepper_z multistep_filt=True
autotune_tmc set stepper_z1 pwm_freq=0
autotune_tmc stepper_z1 ncycles=480 pfdcycles=206
autotune_tmc set stepper_z1 tbl=1
autotune_tmc set stepper_z1 toff=3
autotune_tmc set stepper_z1 hstrt=7
autotune_tmc set stepper_z1 hend=9
autotune_tmc set stepper_z1 sgthrs=40
autotune_tmc using max PWM speed 43.108253
autotune_tmc set stepper_z1 pwm_autoscale=True
autotune_tmc set stepper_z1 pwm_autograd=True
autotune_tmc set stepper_z1 pwm_grad=7
autotune_tmc set stepper_z1 pwm_ofs=18
autotune_tmc set stepper_z1 pwm_reg=15
autotune_tmc set stepper_z1 pwm_lim=4
autotune_tmc set stepper_z1 tpwmthrs=1048575
autotune_tmc set stepper_z1 en_spreadcycle=True
autotune_tmc set stepper_z1 tcoolthrs=391(2.4)
autotune_tmc set stepper_z1 semin=2
autotune_tmc set stepper_z1 semax=2
autotune_tmc set stepper_z1 seup=3
autotune_tmc set stepper_z1 sedn=2
autotune_tmc set stepper_z1 seimin=0
autotune_tmc set stepper_z1 iholddelay=12
autotune_tmc set stepper_z1 multistep_filt=True
autotune_tmc set stepper_z2 pwm_freq=0
autotune_tmc stepper_z2 ncycles=480 pfdcycles=206
autotune_tmc set stepper_z2 tbl=1
autotune_tmc set stepper_z2 toff=3
autotune_tmc set stepper_z2 hstrt=7
autotune_tmc set stepper_z2 hend=9
autotune_tmc set stepper_z2 sgthrs=40
autotune_tmc using max PWM speed 43.108253
autotune_tmc set stepper_z2 pwm_autoscale=True
autotune_tmc set stepper_z2 pwm_autograd=True
autotune_tmc set stepper_z2 pwm_grad=7
autotune_tmc set stepper_z2 pwm_ofs=18
autotune_tmc set stepper_z2 pwm_reg=15
autotune_tmc set stepper_z2 pwm_lim=4
autotune_tmc set stepper_z2 tpwmthrs=1048575
autotune_tmc set stepper_z2 en_spreadcycle=True
autotune_tmc set stepper_z2 tcoolthrs=391(2.4)
autotune_tmc set stepper_z2 semin=2
autotune_tmc set stepper_z2 semax=2
autotune_tmc set stepper_z2 seup=3
autotune_tmc set stepper_z2 sedn=2
autotune_tmc set stepper_z2 seimin=0
autotune_tmc set stepper_z2 iholddelay=12
autotune_tmc set stepper_z2 multistep_filt=True
Stats 4925.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=9327 bytes_read=12205 bytes_retransmit=9 bytes_invalid=0 send_seq=640 receive_seq=640 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400023640 rpi: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=822 bytes_read=17161 bytes_retransmit=0 bytes_invalid=0 send_seq=112 receive_seq=112 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49997422 adj=49987408 Octopus_Max: temp=31.6 Pi: temp=36.5  heater_bed: target=0 temp=0.0 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.02 cputime=8.429 memavail=7496752 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=0.0 pwm=0.000
webhooks: registering remote method 'shutdown_machine' for connection id: 4121935368
webhooks: registering remote method 'reboot_machine' for connection id: 4121935368
webhooks: registering remote method 'pause_job_queue' for connection id: 4121935368
webhooks: registering remote method 'start_job_queue' for connection id: 4121935368
webhooks: registering remote method 'set_device_power' for connection id: 4121935368
Stats 4926.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=9333 bytes_read=12487 bytes_retransmit=9 bytes_invalid=0 send_seq=641 receive_seq=641 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400025193 rpi: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=828 bytes_read=17177 bytes_retransmit=0 bytes_invalid=0 send_seq=113 receive_seq=113 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49998503 adj=49998095 Octopus_Max: temp=31.8 Pi: temp=38.0  heater_bed: target=0 temp=26.1 pwm=0.000 bed_mat: temp=25.6 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.02 cputime=8.471 memavail=7496064 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4927.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=9339 bytes_read=12769 bytes_retransmit=9 bytes_invalid=0 send_seq=642 receive_seq=642 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400026141 rpi: mcu_awake=0.005 mcu_task_avg=0.000036 mcu_task_stddev=0.000029 bytes_write=834 bytes_read=17208 bytes_retransmit=0 bytes_invalid=0 send_seq=114 receive_seq=114 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49998762 adj=49998747 Octopus_Max: temp=31.9 Pi: temp=37.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.02 cputime=8.483 memavail=7496080 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4928.8: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000009 mcu_task_stddev=0.000064 bytes_write=9345 bytes_read=13092 bytes_retransmit=9 bytes_invalid=0 send_seq=643 receive_seq=643 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400027057 rpi: mcu_awake=0.005 mcu_task_avg=0.000036 mcu_task_stddev=0.000029 bytes_write=840 bytes_read=17224 bytes_retransmit=0 bytes_invalid=0 send_seq=115 receive_seq=115 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49998956 adj=49998167 Octopus_Max: temp=31.9 Pi: temp=37.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.5 barrow: temp=-110.0 sysload=0.02 cputime=8.501 memavail=7495656 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.0 pwm=0.000
Stats 4929.8: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000009 mcu_task_stddev=0.000064 bytes_write=9351 bytes_read=13361 bytes_retransmit=9 bytes_invalid=0 send_seq=644 receive_seq=644 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028041 rpi: mcu_awake=0.005 mcu_task_avg=0.000036 mcu_task_stddev=0.000029 bytes_write=846 bytes_read=17240 bytes_retransmit=0 bytes_invalid=0 send_seq=116 receive_seq=116 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999474 adj=49997666 Octopus_Max: temp=32.0 Pi: temp=36.5  heater_bed: target=0 temp=26.1 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.5 barrow: temp=-119.3 sysload=0.02 cputime=8.530 memavail=7495688 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4930.8: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000009 mcu_task_stddev=0.000064 bytes_write=9357 bytes_read=13643 bytes_retransmit=9 bytes_invalid=0 send_seq=645 receive_seq=645 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028549 rpi: mcu_awake=0.005 mcu_task_avg=0.000036 mcu_task_stddev=0.000029 bytes_write=852 bytes_read=17256 bytes_retransmit=0 bytes_invalid=0 send_seq=117 receive_seq=117 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999667 adj=49998117 Octopus_Max: temp=32.1 Pi: temp=38.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.02 cputime=8.556 memavail=7495688 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4931.8: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000009 mcu_task_stddev=0.000064 bytes_write=9363 bytes_read=13955 bytes_retransmit=9 bytes_invalid=0 send_seq=646 receive_seq=646 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028807 rpi: mcu_awake=0.005 mcu_task_avg=0.000036 mcu_task_stddev=0.000029 bytes_write=858 bytes_read=17272 bytes_retransmit=0 bytes_invalid=0 send_seq=118 receive_seq=118 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999836 adj=49997927 Octopus_Max: temp=32.0 Pi: temp=37.0  heater_bed: target=0 temp=26.1 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.6 barrow: temp=-110.0 sysload=0.02 cputime=8.584 memavail=7495688 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.1 pwm=0.000
Stats 4932.8: gcodein=0  mcu: mcu_awake=0.015 mcu_task_avg=0.000009 mcu_task_stddev=0.000064 bytes_write=9369 bytes_read=14237 bytes_retransmit=9 bytes_invalid=0 send_seq=647 receive_seq=647 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028889 rpi: mcu_awake=0.001 mcu_task_avg=0.000017 mcu_task_stddev=0.000017 bytes_write=864 bytes_read=17301 bytes_retransmit=0 bytes_invalid=0 send_seq=119 receive_seq=119 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999920 adj=49997873 Octopus_Max: temp=32.2 Pi: temp=36.0  heater_bed: target=0 temp=26.1 pwm=0.000 bed_mat: temp=25.6 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.02 cputime=8.612 memavail=7495688 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4933.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9375 bytes_read=14548 bytes_retransmit=9 bytes_invalid=0 send_seq=648 receive_seq=648 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029644 rpi: mcu_awake=0.001 mcu_task_avg=0.000017 mcu_task_stddev=0.000017 bytes_write=870 bytes_read=17317 bytes_retransmit=0 bytes_invalid=0 send_seq=120 receive_seq=120 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999887 adj=49997698 Octopus_Max: temp=32.3 Pi: temp=36.0  heater_bed: target=0 temp=26.1 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.02 cputime=8.641 memavail=7495464 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4934.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9381 bytes_read=14845 bytes_retransmit=9 bytes_invalid=0 send_seq=649 receive_seq=649 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029457 rpi: mcu_awake=0.001 mcu_task_avg=0.000017 mcu_task_stddev=0.000017 bytes_write=876 bytes_read=17333 bytes_retransmit=0 bytes_invalid=0 send_seq=121 receive_seq=121 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999886 adj=49996905 Octopus_Max: temp=32.4 Pi: temp=37.5  heater_bed: target=0 temp=26.1 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.02 cputime=8.667 memavail=7495244 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4935.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9387 bytes_read=15127 bytes_retransmit=9 bytes_invalid=0 send_seq=650 receive_seq=650 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029293 rpi: mcu_awake=0.001 mcu_task_avg=0.000017 mcu_task_stddev=0.000017 bytes_write=888 bytes_read=17365 bytes_retransmit=0 bytes_invalid=0 send_seq=123 receive_seq=123 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999806 adj=49996807 Octopus_Max: temp=32.3 Pi: temp=36.5  heater_bed: target=0 temp=26.1 pwm=0.000 bed_mat: temp=25.6 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.02 cputime=8.693 memavail=7495244 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4936.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9393 bytes_read=15424 bytes_retransmit=9 bytes_invalid=0 send_seq=651 receive_seq=651 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029161 rpi: mcu_awake=0.001 mcu_task_avg=0.000017 mcu_task_stddev=0.000017 bytes_write=894 bytes_read=17381 bytes_retransmit=0 bytes_invalid=0 send_seq=124 receive_seq=124 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999815 adj=49996430 Octopus_Max: temp=32.3 Pi: temp=36.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-103.8 sysload=0.02 cputime=8.721 memavail=7495244 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4937.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9399 bytes_read=15721 bytes_retransmit=9 bytes_invalid=0 send_seq=652 receive_seq=652 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400029073 rpi: mcu_awake=0.001 mcu_task_avg=0.000017 mcu_task_stddev=0.000017 bytes_write=900 bytes_read=17397 bytes_retransmit=0 bytes_invalid=0 send_seq=125 receive_seq=125 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999844 adj=49996465 Octopus_Max: temp=32.4 Pi: temp=37.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.5 barrow: temp=-119.3 sysload=0.02 cputime=8.748 memavail=7495244 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4938.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9405 bytes_read=16017 bytes_retransmit=9 bytes_invalid=0 send_seq=653 receive_seq=653 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028974 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000022 bytes_write=906 bytes_read=17426 bytes_retransmit=0 bytes_invalid=0 send_seq=126 receive_seq=126 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999836 adj=49996563 Octopus_Max: temp=32.6 Pi: temp=36.0  heater_bed: target=0 temp=26.1 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-103.8 sysload=0.02 cputime=8.776 memavail=7495244 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.1 pwm=0.000
Stats 4939.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9411 bytes_read=16307 bytes_retransmit=9 bytes_invalid=0 send_seq=654 receive_seq=654 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028872 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000022 bytes_write=912 bytes_read=17442 bytes_retransmit=0 bytes_invalid=0 send_seq=127 receive_seq=127 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999846 adj=49996493 Octopus_Max: temp=32.5 Pi: temp=36.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.02 cputime=8.804 memavail=7495244 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4940.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9417 bytes_read=16597 bytes_retransmit=9 bytes_invalid=0 send_seq=655 receive_seq=655 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028894 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000022 bytes_write=918 bytes_read=17458 bytes_retransmit=0 bytes_invalid=0 send_seq=128 receive_seq=128 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999820 adj=49996533 Octopus_Max: temp=32.7 Pi: temp=37.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.02 cputime=8.832 memavail=7495244 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.3 pwm=0.000
Stats 4941.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9423 bytes_read=16879 bytes_retransmit=9 bytes_invalid=0 send_seq=656 receive_seq=656 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028838 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000022 bytes_write=924 bytes_read=17474 bytes_retransmit=0 bytes_invalid=0 send_seq=129 receive_seq=129 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999810 adj=49996321 Octopus_Max: temp=32.7 Pi: temp=36.0  heater_bed: target=0 temp=26.1 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-110.0 sysload=0.02 cputime=8.859 memavail=7495244 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.3 pwm=0.000
Stats 4942.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9429 bytes_read=17176 bytes_retransmit=9 bytes_invalid=0 send_seq=657 receive_seq=657 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028839 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000022 bytes_write=930 bytes_read=17490 bytes_retransmit=0 bytes_invalid=0 send_seq=130 receive_seq=130 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999796 adj=49996276 Octopus_Max: temp=32.7 Pi: temp=36.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.02 cputime=8.888 memavail=7495244 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4943.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9435 bytes_read=17487 bytes_retransmit=9 bytes_invalid=0 send_seq=658 receive_seq=658 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028934 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=936 bytes_read=17519 bytes_retransmit=0 bytes_invalid=0 send_seq=131 receive_seq=131 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999799 adj=49996182 Octopus_Max: temp=32.7 Pi: temp=36.5  heater_bed: target=0 temp=26.1 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.5 barrow: temp=-119.3 sysload=0.02 cputime=8.915 memavail=7494992 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4944.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9441 bytes_read=17769 bytes_retransmit=9 bytes_invalid=0 send_seq=659 receive_seq=659 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028859 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=942 bytes_read=17535 bytes_retransmit=0 bytes_invalid=0 send_seq=132 receive_seq=132 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999752 adj=49996135 Octopus_Max: temp=32.7 Pi: temp=36.5  heater_bed: target=0 temp=26.1 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.5 barrow: temp=-110.0 sysload=0.02 cputime=8.936 memavail=7489248 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.1 pwm=0.000
Stats 4945.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9447 bytes_read=18080 bytes_retransmit=9 bytes_invalid=0 send_seq=660 receive_seq=660 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028687 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=948 bytes_read=17551 bytes_retransmit=0 bytes_invalid=0 send_seq=133 receive_seq=133 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999704 adj=49995935 Octopus_Max: temp=32.9 Pi: temp=36.0  heater_bed: target=0 temp=26.1 pwm=0.000 bed_mat: temp=25.8 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.02 cputime=8.948 memavail=7495144 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4946.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9453 bytes_read=18363 bytes_retransmit=9 bytes_invalid=0 send_seq=661 receive_seq=661 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028543 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=954 bytes_read=17567 bytes_retransmit=0 bytes_invalid=0 send_seq=134 receive_seq=134 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999662 adj=49995837 Octopus_Max: temp=32.9 Pi: temp=36.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.02 cputime=8.960 memavail=7495144 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.1 pwm=0.000
Stats 4947.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9459 bytes_read=18645 bytes_retransmit=9 bytes_invalid=0 send_seq=662 receive_seq=662 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028540 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=960 bytes_read=17583 bytes_retransmit=0 bytes_invalid=0 send_seq=135 receive_seq=135 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999627 adj=49995765 Octopus_Max: temp=32.9 Pi: temp=36.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.02 cputime=8.972 memavail=7495144 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.1 pwm=0.000
Stats 4948.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9465 bytes_read=18970 bytes_retransmit=9 bytes_invalid=0 send_seq=663 receive_seq=663 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028441 rpi: mcu_awake=0.001 mcu_task_avg=0.000012 mcu_task_stddev=0.000015 bytes_write=966 bytes_read=17612 bytes_retransmit=0 bytes_invalid=0 send_seq=136 receive_seq=136 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999599 adj=49995630 Octopus_Max: temp=33.0 Pi: temp=36.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.02 cputime=8.984 memavail=7495144 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.1 pwm=0.000
Stats 4949.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9471 bytes_read=19253 bytes_retransmit=9 bytes_invalid=0 send_seq=664 receive_seq=664 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028362 rpi: mcu_awake=0.001 mcu_task_avg=0.000012 mcu_task_stddev=0.000015 bytes_write=972 bytes_read=17628 bytes_retransmit=0 bytes_invalid=0 send_seq=137 receive_seq=137 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999600 adj=49995639 Octopus_Max: temp=33.0 Pi: temp=37.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.02 cputime=9.003 memavail=7495144 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.3 pwm=0.000
Stats 4950.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9477 bytes_read=19525 bytes_retransmit=9 bytes_invalid=0 send_seq=665 receive_seq=665 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028351 rpi: mcu_awake=0.001 mcu_task_avg=0.000012 mcu_task_stddev=0.000015 bytes_write=978 bytes_read=17644 bytes_retransmit=0 bytes_invalid=0 send_seq=138 receive_seq=138 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999606 adj=49995815 Octopus_Max: temp=33.0 Pi: temp=37.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.02 cputime=9.030 memavail=7495144 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4951.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9483 bytes_read=19835 bytes_retransmit=9 bytes_invalid=0 send_seq=666 receive_seq=666 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028341 rpi: mcu_awake=0.001 mcu_task_avg=0.000012 mcu_task_stddev=0.000015 bytes_write=984 bytes_read=17660 bytes_retransmit=0 bytes_invalid=0 send_seq=139 receive_seq=139 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999607 adj=49995927 Octopus_Max: temp=33.1 Pi: temp=37.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.6 barrow: temp=-110.0 sysload=0.02 cputime=9.058 memavail=7495144 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4952.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9489 bytes_read=20118 bytes_retransmit=9 bytes_invalid=0 send_seq=667 receive_seq=667 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028462 rpi: mcu_awake=0.001 mcu_task_avg=0.000012 mcu_task_stddev=0.000015 bytes_write=990 bytes_read=17676 bytes_retransmit=0 bytes_invalid=0 send_seq=140 receive_seq=140 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999608 adj=49995978 Octopus_Max: temp=33.1 Pi: temp=36.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.02 cputime=9.087 memavail=7495152 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.0 pwm=0.000
Stats 4953.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9495 bytes_read=20414 bytes_retransmit=9 bytes_invalid=0 send_seq=668 receive_seq=668 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028485 rpi: mcu_awake=0.001 mcu_task_avg=0.000015 mcu_task_stddev=0.000017 bytes_write=996 bytes_read=17705 bytes_retransmit=0 bytes_invalid=0 send_seq=141 receive_seq=141 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999610 adj=49995891 Octopus_Max: temp=33.2 Pi: temp=36.0  heater_bed: target=0 temp=26.1 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-110.0 sysload=0.02 cputime=9.115 memavail=7494928 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.1 pwm=0.000
Stats 4954.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9501 bytes_read=20725 bytes_retransmit=9 bytes_invalid=0 send_seq=669 receive_seq=669 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028491 rpi: mcu_awake=0.001 mcu_task_avg=0.000015 mcu_task_stddev=0.000017 bytes_write=1002 bytes_read=17721 bytes_retransmit=0 bytes_invalid=0 send_seq=142 receive_seq=142 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999618 adj=49995931 Octopus_Max: temp=33.2 Pi: temp=36.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.01 cputime=9.143 memavail=7494936 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4955.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9507 bytes_read=21008 bytes_retransmit=9 bytes_invalid=0 send_seq=670 receive_seq=670 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028508 rpi: mcu_awake=0.001 mcu_task_avg=0.000015 mcu_task_stddev=0.000017 bytes_write=1008 bytes_read=17737 bytes_retransmit=0 bytes_invalid=0 send_seq=143 receive_seq=143 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999637 adj=49996015 Octopus_Max: temp=33.3 Pi: temp=36.5  heater_bed: target=0 temp=26.1 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.01 cputime=9.171 memavail=7494936 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.1 pwm=0.000
Stats 4956.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9513 bytes_read=21290 bytes_retransmit=9 bytes_invalid=0 send_seq=671 receive_seq=671 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028499 rpi: mcu_awake=0.001 mcu_task_avg=0.000015 mcu_task_stddev=0.000017 bytes_write=1014 bytes_read=17753 bytes_retransmit=0 bytes_invalid=0 send_seq=144 receive_seq=144 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999643 adj=49996151 Octopus_Max: temp=33.4 Pi: temp=36.0  heater_bed: target=0 temp=26.1 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.01 cputime=9.199 memavail=7494936 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.1 pwm=0.000
Stats 4957.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9519 bytes_read=21601 bytes_retransmit=9 bytes_invalid=0 send_seq=672 receive_seq=672 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028483 rpi: mcu_awake=0.001 mcu_task_avg=0.000015 mcu_task_stddev=0.000017 bytes_write=1020 bytes_read=17769 bytes_retransmit=0 bytes_invalid=0 send_seq=145 receive_seq=145 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999650 adj=49996190 Octopus_Max: temp=33.3 Pi: temp=35.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.01 cputime=9.227 memavail=7494944 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4958.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9525 bytes_read=21898 bytes_retransmit=9 bytes_invalid=0 send_seq=673 receive_seq=673 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028474 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=1026 bytes_read=17798 bytes_retransmit=0 bytes_invalid=0 send_seq=146 receive_seq=146 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999657 adj=49996228 Octopus_Max: temp=33.4 Pi: temp=36.5  heater_bed: target=0 temp=26.1 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.7 barrow: temp=-119.3 sysload=0.01 cputime=9.256 memavail=7494944 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4959.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9531 bytes_read=22180 bytes_retransmit=9 bytes_invalid=0 send_seq=674 receive_seq=674 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028448 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=1032 bytes_read=17814 bytes_retransmit=0 bytes_invalid=0 send_seq=147 receive_seq=147 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999647 adj=49996260 Octopus_Max: temp=33.3 Pi: temp=36.5  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.6 bed_core: temp=26.7 barrow: temp=-110.0 sysload=0.01 cputime=9.282 memavail=7494944 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4960.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9537 bytes_read=22491 bytes_retransmit=9 bytes_invalid=0 send_seq=675 receive_seq=675 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028438 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=1038 bytes_read=17830 bytes_retransmit=0 bytes_invalid=0 send_seq=148 receive_seq=148 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999648 adj=49996165 Octopus_Max: temp=33.3 Pi: temp=36.0  heater_bed: target=0 temp=26.2 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.01 cputime=9.308 memavail=7489152 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.3 pwm=0.000
b'Got EOF when reading from device'
Stats 4961.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9543 bytes_read=22575 bytes_retransmit=9 bytes_invalid=0 send_seq=676 receive_seq=676 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=400028397 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=1044 bytes_read=17846 bytes_retransmit=0 bytes_invalid=0 send_seq=149 receive_seq=149 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999629 adj=49996167 Octopus_Max: temp=33.3 Pi: temp=37.5  heater_bed: target=0 temp=26.1 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.01 cputime=9.319 memavail=7494804 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
Stats 4962.8: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000002 mcu_task_stddev=0.000001 bytes_write=9543 bytes_read=22575 bytes_retransmit=9 bytes_invalid=0 send_seq=676 receive_seq=676 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=2 freq=400028397 rpi: mcu_awake=0.001 mcu_task_avg=0.000020 mcu_task_stddev=0.000021 bytes_write=1050 bytes_read=17862 bytes_retransmit=0 bytes_invalid=0 send_seq=150 receive_seq=150 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999613 adj=49996034 Octopus_Max: temp=33.3 Pi: temp=37.0  heater_bed: target=0 temp=26.1 pwm=0.000 bed_mat: temp=25.7 bed_core: temp=26.6 barrow: temp=-119.3 sysload=0.01 cputime=9.329 memavail=7586128 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=26.2 pwm=0.000
webhooks client 4121935368: Disconnected
Starting Klippy...
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/printer_data/config/printer.cfg', '-l', '/home/pi/printer_data/logs/klippy.log', '-I', '/home/pi/printer_data/comms/klippy.serial', '-a', '/home/pi/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-142-gb029d046-dirty'
Untracked files: klippy/extras/autotune_tmc.py, klippy/extras/beacon.py, klippy/extras/gcode_shell_command.py, klippy/extras/linear_movement_vibrations.py, klippy/extras/motor_constants.py, klippy/extras/ratos_homing.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Mar 12 2021, 04:06:34) \n[GCC 10.2.1 20210110]'
Start printer at Sat Apr 20 20:10:56 2024 (1713640256.2 23.7)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
webhooks client 4127517808: New connection
webhooks client 4127517808: Client info {'program': 'Moonraker', 'version': 'v0.8.0-325-g99b97af'}
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
MCU error during connect
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/mcu.py", line 769, in _mcu_identify
    self._serial.connect_uart(self._serialport, self._baud, rts)
  File "/home/pi/klipper/klippy/serialhdl.py", line 182, in connect_uart
    self._error("Unable to connect")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Unable to connect

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 176, in _connect
    self.send_event("klippy:mcu_identify")
  File "/home/pi/klipper/klippy/klippy.py", line 263, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/klippy.py", line 263, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/mcu.py", line 774, in _mcu_identify
    raise error(str(e))
mcu.error: mcu 'mcu': Unable to connect
Build file /home/pi/klipper/klippy/../.config(1767): Fri Apr 19 01:36:48 2024
========= Last MCU build config =========
CONFIG_LOW_LEVEL_OPTIONS=y
# CONFIG_MACH_AVR is not set
# CONFIG_MACH_ATSAM is not set
# CONFIG_MACH_ATSAMD is not set
# CONFIG_MACH_LPC176X is not set
# CONFIG_MACH_STM32 is not set
# CONFIG_MACH_HC32F460 is not set
CONFIG_MACH_RP2040=y
# CONFIG_MACH_PRU is not set
# CONFIG_MACH_AR100 is not set
# CONFIG_MACH_LINUX is not set
# CONFIG_MACH_SIMU is not set
CONFIG_BOARD_DIRECTORY="rp2040"
CONFIG_MCU="rp2040"
CONFIG_CLOCK_FREQ=12000000
CONFIG_USBSERIAL=y
CONFIG_FLASH_SIZE=0x200000
CONFIG_FLASH_BOOT_ADDRESS=0x10000100
CONFIG_RAM_START=0x20000000
CONFIG_RAM_SIZE=0x42000
CONFIG_STACK_SIZE=512
CONFIG_FLASH_APPLICATION_ADDRESS=0x10000100
CONFIG_RP2040_SELECT=y
CONFIG_RP2040_HAVE_STAGE2=y
CONFIG_RP2040_FLASH_START_0100=y
# CONFIG_RP2040_FLASH_START_4000 is not set
CONFIG_RP2040_FLASH_W25Q080=y
# CONFIG_RP2040_FLASH_GENERIC_03 is not set
CONFIG_RP2040_STAGE2_FILE="boot2_w25q080.S"
CONFIG_RP2040_STAGE2_CLKDIV=2
CONFIG_RP2040_USB=y
# CONFIG_RP2040_SERIAL_UART0 is not set
# CONFIG_RP2040_CANBUS is not set
# CONFIG_RP2040_USBCANBUS is not set
CONFIG_RP2040_CANBUS_GPIO_RX=4
CONFIG_RP2040_CANBUS_GPIO_TX=5
CONFIG_USB=y
CONFIG_USB_VENDOR_ID=0x1d50
CONFIG_USB_DEVICE_ID=0x614e
CONFIG_USB_SERIAL_NUMBER_CHIPID=y
CONFIG_USB_SERIAL_NUMBER="12345"

#
# USB ids
#
# end of USB ids

CONFIG_WANT_GPIO_BITBANGING=y
CONFIG_WANT_DISPLAYS=y
CONFIG_WANT_SENSORS=y
CONFIG_WANT_LIS2DW=y
CONFIG_WANT_SOFTWARE_I2C=y
CONFIG_WANT_SOFTWARE_SPI=y
CONFIG_NEED_SENSOR_BULK=y
CONFIG_CANBUS_FREQUENCY=1000000
CONFIG_INITIAL_PINS=""
CONFIG_HAVE_GPIO=y
CONFIG_HAVE_GPIO_ADC=y
CONFIG_HAVE_GPIO_SPI=y
CONFIG_HAVE_GPIO_I2C=y
CONFIG_HAVE_GPIO_HARD_PWM=y
CONFIG_HAVE_STRICT_TIMING=y
CONFIG_HAVE_CHIPID=y
CONFIG_HAVE_STEPPER_BOTH_EDGE=y
CONFIG_HAVE_BOOTLOADER_REQUEST=y
CONFIG_INLINE_STEPPER_HACK=y
=======================
Build file /home/pi/klipper/klippy/../out/klipper.dict(8110): Fri Apr 19 01:37:04 2024
Last MCU build version: v0.12.0-142-gb029d046
Last MCU build tools: gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.34-4+rpi1+14) 2.34
Last MCU build config: ADC_MAX=4095 BUS_PINS_i2c0a=gpio0,gpio1 BUS_PINS_i2c0b=gpio4,gpio5 BUS_PINS_i2c0c=gpio8,gpio9 BUS_PINS_i2c0d=gpio12,gpio13 BUS_PINS_i2c0e=gpio16,gpio17 BUS_PINS_i2c0f=gpio20,gpio21 BUS_PINS_i2c0g=gpio24,gpio25 BUS_PINS_i2c0h=gpio28,gpio29 BUS_PINS_i2c1a=gpio2,gpio3 BUS_PINS_i2c1b=gpio6,gpio7 BUS_PINS_i2c1c=gpio10,gpio11 BUS_PINS_i2c1d=gpio14,gpio15 BUS_PINS_i2c1e=gpio18,gpio19 BUS_PINS_i2c1f=gpio22,gpio23 BUS_PINS_i2c1g=gpio26,gpio27 BUS_PINS_spi0a=gpio0,gpio3,gpio2 BUS_PINS_spi0b=gpio4,gpio7,gpio6 BUS_PINS_spi0c=gpio16,gpio19,gpio18 BUS_PINS_spi0d=gpio20,gpio23,gpio22 BUS_PINS_spi1a=gpio8,gpio11,gpio10 BUS_PINS_spi1b=gpio12,gpio15,gpio14 BUS_PINS_spi1c=gpio24,gpio27,gpio26 CLOCK_FREQ=12000000 MCU=rp2040 PWM_MAX=255 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
Build file /home/pi/klipper/klippy/../out/klipper.elf(1780784): Fri Apr 19 01:37:10 2024
Starting Klippy...
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/printer_data/config/printer.cfg', '-l', '/home/pi/printer_data/logs/klippy.log', '-I', '/home/pi/printer_data/comms/klippy.serial', '-a', '/home/pi/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-142-gb029d046-dirty'
Untracked files: klippy/extras/autotune_tmc.py, klippy/extras/beacon.py, klippy/extras/gcode_shell_command.py, klippy/extras/linear_movement_vibrations.py, klippy/extras/motor_constants.py, klippy/extras/ratos_homing.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Mar 12 2021, 04:06:34) \n[GCC 10.2.1 20210110]'
Start printer at Sat Apr 20 20:58:53 2024 (1713643133.8 23.6)
===== Config file =====
[board_pins octopus_max_ez_tmc2209]
aliases = 
	
	
	motor_1_step=PC13, motor_1_dir=PC14, motor_1_enable=PE6, motor_1_uart=PG14,
	motor_2_step=PE4, motor_2_dir=PE5, motor_2_enable=PE3, motor_2_uart=PG13,
	motor_3_step=PE1, motor_3_dir=PE0, motor_3_enable=PE2, motor_3_uart=PG12,
	motor_4_step=PB8, motor_4_dir=PB9, motor_4_enable=PB7, motor_4_uart=PG11,
	motor_5_step=PB5, motor_5_dir=PB4, motor_5_enable=PB6, motor_5_uart=PG10,
	motor_6_step=PG15, motor_6_dir=PB3, motor_6_enable=PD5, motor_6_uart=PG9,
	motor_7_step=PD3, motor_7_dir=PD2, motor_7_enable=PD4, motor_7_uart=PD7,
	motor_8_step=PA10, motor_8_dir=PA9, motor_8_enable=PA15, motor_8_uart=PD6,
	motor_9_step=PA8, motor_9_dir=PC7, motor_9_enable=PC9, motor_9_uart=PG8,
	motor_10_step=PG6, motor_10_dir=PC6, motor_10_enable=PC8, motor_10_uart=PG7,
	
	stepper_spi_mosi=PE14, stepper_spi_miso=PE13, stepper_spi_sclk=PE12,
	
	
	heater_e0=PF6, heater_e1=PA3, heater_e2=PF9, heater_e3=PF7, heater_bed=PF5,
	
	
	thermistor_e0=PB0, thermistor_e1=PC5, thermistor_e2=PC4, thermistor_e3=PA7, thermistor_bed=PB1,
	
	
	endstop_motor_1=PF0, endstop_motor_2=PF2, endstop_motor_3=PF4, det_motor_4=PF3, det_motor_5=PF1, det_motor_6=PC15,
	
	
	fan_0=PA6, fan_1=PA5, fan_2=PA4, fan_3=PA3,
	fan_4_pwm=PA1, fan_4_tach=PC3, fan_5_pwm=PF8, fan_5_tach=PC1, fan_6_pwm=PA2, fan_6_tach=PC2,
	
	
	rgb_led_1=PE10, rgb_led_2=PE9,
	
	
	ps_on=PF13, pwr_det=PF12,
	
	
	bltouch_servo=PB14, bltouch_probe=PB15,
	
	
	proximity_probe=PF11,
	
	
	filament_sensor_adc1=PC0, filament_sensor_adc2=PF10,
	
	
	eeprom_scl=PB10, eeprom_sda=PB11,
	
	
	can_rx=PD0, can_tx=PD1,
	
	
	tft_uart_rx=PD9, tft_uart_tx=PD8,
	
	
	usb_dm=PA11, usb_dp=PA12,
	
	
	lcd_d7=PE15, lcd_d6=PD10, lcd_d5=PD11, lcd_d4=PD12, lcd_rs=PD13, lcd_en=PD14, lcd_buzzer=PG2, lcd_enc=PD15,
	lcd_reset=RESET, sd_detect=PG3,
	
	
	tmc_spi_cs=PF14, tmc_spi_mosi=PE14, tmc_spi_miso=PE13, tmc_spi_sclk=PE12,
	
	
	wifi_reset=PB2, wifi_io0=PG0, wifi_io4=PF15, wifi_rx=PE7, wifi_tx=PE8, wifi_cs=PG15, wifi_mosi=PC12, wifi_miso=PC11, wifi_sclk=PC10,

[mcu]
baud = 250000
serial = /dev/btt-octopus-max-ez

[temperature_sensor Octopus_Max]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[temperature_sensor Pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[skew_correction]

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 101.2
shaper_type_y = mzv
shaper_freq_y = 72.8

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[exclude_object]

[gcode_arcs]
resolution = 0.3

[heater_bed]
heater_pin = heater_bed
sensor_type = temperature_combined
sensor_list = temperature_sensor bed_mat, temperature_sensor bed_core
combination_method = mean
maximum_deviation = 999999
min_temp = 0
max_temp = 140
pwm_cycle_time = 0.02
control = pid
pid_kp = 55.540
pid_ki = 1.448
pid_kd = 532.581

[temperature_sensor bed_mat]
sensor_pin = thermistor_bed
sensor_type = Generic 3950
min_temp = 0
max_temp = 150

[temperature_sensor bed_core]
sensor_pin = thermistor_e0
sensor_type = PT1000
pullup_resistor = 2200
min_temp = 0
max_temp = 150

[fan]
pin = fan_4_pwm
tachometer_pin = ^fan_4_tach
shutdown_speed = 1.0
tachometer_poll_interval = 0.0005
cycle_time = 0.01

[heater_fan toolhead]
pin = fan_0
fan_speed = 1.0
shutdown_speed = 1.0
kick_start_time = 5
heater = extruder
heater_temp = 49

[controller_fan controller_fan]
pin = fan_6_pwm
tachometer_pin = ^fan_6_tach
tachometer_poll_interval = 0.0005
cycle_time = 0.01
idle_timeout = 300
stepper = stepper_x, stepper_x1, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, extruder

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 12000
minimum_cruise_ratio = 0.5
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[ratos_homing]
axes = xyz
z_hop = 15
z_hop_speed = 15
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True
	
	M400
	G90
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	RESPOND MSG="Homing X"
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	M400
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	RESPOND MSG="Homing Y"
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	M400
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{ action_emergency_stop("X and Y must be homed before homing Z") }
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_hop_speed}
	{% endif %}
	{% endif %}
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G4 P300
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
	{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G4 P300
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	G4 P300
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	FILDET_DISABLE
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE
	RESPOND COLOR=error MSG="Print cancelled"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 Y{y_start} F{speed}
	
	G1 F60 E20
	
	M106 S{fan_speed}
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	FILDET_ENABLE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_AFTER_HEATING_BED
	
	_USER_START_PRINT_BED_MESH
	
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_PARK
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _USER_START_PRINT_BEFORE_HOMING]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
	{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
	M117 Pre-heating extruder...
	RESPOND MSG="Pre-heating extruder..."
	
	
	M104 S{min_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}
	M117 Adjusting Z tilt...
	RESPOND MSG="Adjusting Z tilt..."
	
	Z_TILT_ADJUST
	M117 Rehoming Z after Z tilt adjustment...
	RESPOND MSG="Rehoming Z after Z tilt adjustment..."
	
	G28 Z

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].bed_soak|lower == 'true' %}
	G4 P{printer["gcode_macro RatOS"].bed_soak_time}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CLEAR
	{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
	CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% else %}
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% endif %}
	BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
	BED_MESH_CLEAR
	BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_BED_MESH]
gcode = 

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _USER_START_PRINT_PARK]
gcode = 

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% set has_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% if has_offset %}
	ADD_PRIME_PROBE_TO_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'linepurge' %}
	LINE_PURGE
	{% endif %}
	{% if has_offset %}
	SUBTRACT_PRIME_PROBE_FROM_OFFSET
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro _USER_START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	FILDET_DISABLE
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE="ratos"
	M117 Done :)
	RESTORE_GCODE_STATE NAME=end_print_state
	RESPOND COLOR=success MSG="Print done"
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if act_z < (max_z - z_hop) %}
	{% set z_safe = z_hop %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600
	
	G90

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
gcode = 

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _USER_END_PRINT_PARK]
gcode = 

[gcode_macro SAVE_PROBE_RESULT]
gcode = 
	{% set last_z = printer.probe.last_z_result %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z')} VALUE={last_z}

[gcode_macro PROBE_FOR_PRIMING]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
	SAVE_GCODE_STATE NAME=probe_for_priming_state
	RESPOND MSG="Probing the prime location.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% endif %}
	{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% if printer.configfile.settings.bltouch is defined %}
	{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
	{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
	{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
	{% elif printer.configfile.settings.beacon is defined %}
	{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
	{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}
	
	
	{% set x_start = [[x_start, max_x]|min, min_x]|max %}
	{% set y_start = [[y_start, max_y]|min, min_y]|max %}
	
	RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
	
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} Y{y_start} F{speed}
	PROBE_CURRENT_POSITION
	SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
	
	RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode = 
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}

[gcode_macro ADD_PRIME_PROBE_TO_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	{% set adjustment = last_z - z_offset %}
	{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
	{% if adjustment < adjustment_threshold %}
	{ action_raise_error("Abnormal probe offset detected. Needed offset of {adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
	{% endif %}
	RESPOND MSG="ADD_PRIME_PROBE_TO_OFFSET: adjusting z offset by {adjustment}"
	SET_GCODE_OFFSET Z_ADJUST={adjustment} MOVE=1

[gcode_macro SUBTRACT_PRIME_PROBE_FROM_OFFSET]
gcode = 
	{% set last_z = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
	{% if printer.configfile.settings.bltouch is defined %}
	{% set z_offset = printer.configfile.settings.bltouch.z_offset|float %}
	{% elif printer.configfile.settings.probe is defined %}
	{% set z_offset = printer.configfile.settings.probe.z_offset|float %}
	{% else %}
	{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
	{% endif %}
	{% if last_z == 9999.9 %}
	{ action_raise_error("No probe result found for prime area. This is likely a bug.") }
	{% endif %}
	RESPOND MSG="SUBTRACT_PRIME_PROBE_FROM_OFFSET: adjusting z offset by {z_offset - last_z}"
	SET_GCODE_OFFSET Z_ADJUST={z_offset - last_z} MOVE=1

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
gcode = 
	
	{% set default_profile = params.PROFILE %}
	
	
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"
	
	{% if x0 >= x1 or y0 >= y1 %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	
	{% set mesh_config = printer.configfile.config.bed_mesh %}
	
	
	{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
	{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
	{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
	{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}
	
	
	{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
	{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
	{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
	{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}
	
	{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: Print is using the full bed, falling back to full bed mesh."
	BED_MESH_CALIBRATE PROFILE={default_profile}
	{% else %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	
	{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
	{% if mesh_config.probe_count.split(",")|length == 2 %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
	{% else %}
	{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
	{% endif %}
	
	
	{% set probe_x_step = (max_x - min_x) / probe_count_x %}
	{% set probe_y_step = (max_y - min_y) / probe_count_y %}
	
	
	{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
	{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
	{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
	{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}
	
	
	{% set algorithm = mesh_config.algorithm %}
	{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
	{% set algorithm = 'bicubic' %}
	{% endif %}
	{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
	{% if max_mesh_count > 6 %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
	{% set min_mesh_count = 4 %}
	{% else %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
	{% set algorithm = 'lagrange' %}
	{% endif %}
	{% endif %}
	
	{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
	{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
	{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
	{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}
	
	{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeline' or printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
	{% if printer.configfile.settings.beacon is defined %}
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: adaptive priming is currently not supported for Beacon. Disabling priming.."
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=nozzle_priming VALUE=False
	{% set should_prime = False %}
	{% endif %}
	
	{% set prime_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printer.toolhead.axis_maximum.y) < printer.toolhead.axis_maximum.y / 2 %}
	
	{% if should_prime and prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	
	RESPOND MSG="CALIBRATE_ADAPTIVE_MESH: mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
	BED_MESH_CALIBRATE PROFILE={default_profile} algorithm={algorithm} mesh_min={mesh_x0},{mesh_y0} mesh_max={mesh_x1},{mesh_y1} probe_count={mesh_count_x},{mesh_count_y}
	
	{% if should_prime and not prime_first %}
	PROBE_FOR_PRIMING
	{% endif %}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOW_PROBE
	{% endif %}
	
	{% endif %}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	{% set verbose_enable = printer["gcode_macro RatOS"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro RatOS"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro RatOS"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro RatOS"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro RatOS"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro RatOS"].flow_rate | float %}
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	{% if cross_section < 5 %}
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	{% else %}
	{% if verbose_enable == True %}
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	{% if purge_y_origin > 0 %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	{% else %}
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% else %}
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	{% endif %}
	RESTORE_GCODE_STATE NAME=Prepurge_State
	{% endif %}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
	RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = motor_1_step
dir_pin = motor_1_dir
enable_pin = !motor_1_enable
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 200

[tmc2209 stepper_z]
uart_pin = motor_1_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z1]
step_pin = motor_2_step
dir_pin = motor_2_dir
enable_pin = !motor_2_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z1]
uart_pin = motor_2_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_z2]
step_pin = motor_3_step
dir_pin = motor_3_dir
enable_pin = !motor_3_enable
rotation_distance = 4
microsteps = 64

[tmc2209 stepper_z2]
uart_pin = motor_3_uart
run_current = 1.6
stealthchop_threshold = 0
interpolate = False
hold_current = 0.4

[stepper_x]
step_pin = motor_4_step
dir_pin = !motor_4_dir
enable_pin = !motor_4_enable
rotation_distance = 40
microsteps = 64
homing_speed = 30
homing_retract_dist = 5.0
full_steps_per_rotation = 200
position_max = 200
position_endstop = 0
endstop_pin = ^endstop_motor_1

[tmc5160 stepper_x]
cs_pin = motor_4_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_x1]
step_pin = motor_5_step
dir_pin = motor_5_dir
enable_pin = !motor_5_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_x1]
cs_pin = motor_5_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y]
step_pin = motor_6_step
dir_pin = !motor_6_dir
enable_pin = !motor_6_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200
position_max = 200
position_endstop = 200
homing_speed = 30
homing_retract_dist = 5.0
endstop_pin = ^endstop_motor_2
homing_positive_dir = true
position_min = 19

[tmc5160 stepper_y]
cs_pin = motor_6_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[stepper_y1]
step_pin = motor_7_step
dir_pin = motor_7_dir
enable_pin = !motor_7_enable
rotation_distance = 40
microsteps = 64
full_steps_per_rotation = 200

[tmc5160 stepper_y1]
cs_pin = motor_7_uart
spi_software_mosi_pin = stepper_spi_mosi
spi_software_miso_pin = stepper_spi_miso
spi_software_sclk_pin = stepper_spi_sclk
run_current = 1.768
stealthchop_threshold = 0
interpolate = False
hold_current = 0.442

[bed_mesh]
speed = 10
horizontal_move_z = 5
mesh_min = 10, 8.45
mesh_max = 170, 185.45
probe_count = 10,10
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 50
z_positions = 
	0,0
	100,200
	200,0
points = 
	60,22
	135,190
	190,22
horizontal_move_z = 20
retries = 20
retry_tolerance = 0.02

[gcode_macro enable_stepper]
gcode = 
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_steppers]
gcode = 
	m84

[gcode_macro STEPPER_BUZZ_X]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x

[gcode_macro STEPPER_BUZZ_Y]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y

[gcode_macro STEPPER_BUZZ_X1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_x1

[gcode_macro STEPPER_BUZZ_Y1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_y1

[gcode_macro STEPPER_BUZZ_Z]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z

[gcode_macro STEPPER_BUZZ_Z1]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z1

[gcode_macro STEPPER_BUZZ_Z2]
gcode = 
	STEPPER_BUZZ STEPPER=stepper_z2

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	
	
	
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	
	
	G0 X{x_min+10} Y{y_min+10} F{speed*60}
	G0 X{x_min+10} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_max-30} F{speed*60}
	G0 X{x_max-30} Y{y_min+10} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED
	G0 X115 Y115 Z30

[bltouch]
sensor_pin = ^bltouch_probe
control_pin = bltouch_servo
speed = 7
pin_move_time = 0.675
sample_retract_dist = 10
pin_up_reports_not_triggered = True
pin_up_touch_mode_reports_triggered = True
x_offset = -30
y_offset = -14.550
z_offset = 3.825

[gcode_macro RatOS]
variable_z_probe = "static"
variable_homing_x = "endstop"
variable_homing_y = "endstop"
variable_homing = "endstops"
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_bed_soak = False
variable_bed_soak_time = 60000
variable_nozzle_priming = "linepurge"
variable_verbose_enable = True
variable_purge_height = 0.8
variable_tip_distance = 0.4
variable_purge_margin = 20
variable_purge_amount = 30
variable_flow_rate = 10
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 150
variable_macro_z_speed = 15
variable_end_print_park_z_hop = 20
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
variable_stowable_probe_stop_on_error = False
variable_adaptive_mesh = False
gcode = 
	ECHO_RATOS_VARS

[extruder]
rotation_distance = 5.57
full_steps_per_rotation = 200
filament_diameter = 1.750
max_extrude_only_velocity = 120
max_extrude_only_accel = 800
pressure_advance_smooth_time = 0.02
step_pin = motor_8_step
dir_pin = !motor_8_dir
enable_pin = !motor_8_enable
microsteps = 64
max_extrude_only_distance = 200
nozzle_diameter = 0.4
heater_pin = heater_e0
sensor_type = PT1000
pullup_resistor = 2200
sensor_pin = thermistor_e1
min_extrude_temp = 170
min_temp = 0
max_temp = 300
pressure_advance = 0.025
max_extrude_cross_section = 5
control = pid
pid_kp = 30.620
pid_ki = 1.926
pid_kd = 121.714

[tmc2209 extruder]
uart_pin = motor_8_uart
run_current = 0.5
stealthchop_threshold = 0
driver_tbl = 1
driver_toff = 3
driver_hend = 9
driver_hstrt = 7
interpolate = False
hold_current = 0.125

[firmware_retraction]
retract_speed = 120
unretract_extra_length = 0
unretract_speed = 120
retract_length = 0.5

[filament_switch_sensor filament_switch]
switch_pin = ^filament_sensor_adc2
pause_on_runout = false
runout_gcode = 
	PAUSE
	RESPOND COLOR=warning MSG="Filament ran out"
insert_gcode = 

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[gcode_macro FILDET_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="ENABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1

[gcode_macro FILDET_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	RESPOND COLOR=info MSG="DISABLING the Smart Filament Sensor"
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0

[autotune_tmc stepper_x]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_x1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_y1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 48

[autotune_tmc stepper_z]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z1]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[autotune_tmc stepper_z2]
motor = ldo-42sth48-2804ah
tuning_goal = performance
voltage = 24

[output_pin status_led]
pin = heater_e3
value = 0
shutdown_value = 0

[gcode_button top]
pin = ^det_motor_6
press_gcode = 
release_gcode = 
	{% if printer.print_stats.state == "printing" %}
	PAUSE
	RESPOND COLOR=info MSG="Print paused"
	SET_PIN PIN=status_led VALUE=1
	{% elif printer.print_stats.state == "paused" %}
	RESUME
	RESPOND COLOR=info MSG="Print resumed"
	SET_PIN PIN=status_led VALUE=0
	{% else %}
	RESPOND COLOR=error MSG="Cannot pause or resume: no print in progress"
	{% endif %}

[gcode_button bottom]
pin = ^det_motor_5
press_gcode = 
release_gcode = 
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method(
	"set_device_power", device="printer", state="off"
	)}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	RESPOND COLOR=info MSG="Powering printer off"
	G4 P3000
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro RESPOND]
rename_existing = BASE_RESPOND
gcode = 
	{% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}
	
	{% if params.MSG is defined %}
	{% set msg = 'MSG="'+ params.MSG + '"'|string %}
	{% endif %}
	
	{% if params.COLOR is defined %}
	{% set color = params.COLOR|lower %}
	
	{% if color in colors %}
	{% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
	
	{% else %}
	BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
	{% endif %}
	
	{% endif %}
	BASE_RESPOND {msg}

[thermistor 10k]
temperature1 = -39.44
resistance1 = 323839
temperature2 = 25.00
resistance2 = 10000
temperature3 = 86.11
resistance3 = 1034

[temperature_sensor barrow]
sensor_type = 10k
sensor_pin = thermistor_e2
min_temp = -240
max_temp = 99999
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
webhooks client 4131225312: New connection
webhooks client 4131225312: Client info {'program': 'Moonraker', 'version': 'v0.8.0-325-g99b97af'}
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-octopus-max-ez: [Errno 2] No such file or directory: '/dev/btt-octopus-max-ez'
MCU error during connect
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/mcu.py", line 769, in _mcu_identify
    self._serial.connect_uart(self._serialport, self._baud, rts)
  File "/home/pi/klipper/klippy/serialhdl.py", line 182, in connect_uart
    self._error("Unable to connect")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Unable to connect

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 176, in _connect
    self.send_event("klippy:mcu_identify")
  File "/home/pi/klipper/klippy/klippy.py", line 263, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/klippy.py", line 263, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/mcu.py", line 774, in _mcu_identify
    raise error(str(e))
mcu.error: mcu 'mcu': Unable to connect
Build file /home/pi/klipper/klippy/../.config(1767): Fri Apr 19 01:36:48 2024
========= Last MCU build config =========
CONFIG_LOW_LEVEL_OPTIONS=y
# CONFIG_MACH_AVR is not set
# CONFIG_MACH_ATSAM is not set
# CONFIG_MACH_ATSAMD is not set
# CONFIG_MACH_LPC176X is not set
# CONFIG_MACH_STM32 is not set
# CONFIG_MACH_HC32F460 is not set
CONFIG_MACH_RP2040=y
# CONFIG_MACH_PRU is not set
# CONFIG_MACH_AR100 is not set
# CONFIG_MACH_LINUX is not set
# CONFIG_MACH_SIMU is not set
CONFIG_BOARD_DIRECTORY="rp2040"
CONFIG_MCU="rp2040"
CONFIG_CLOCK_FREQ=12000000
CONFIG_USBSERIAL=y
CONFIG_FLASH_SIZE=0x200000
CONFIG_FLASH_BOOT_ADDRESS=0x10000100
CONFIG_RAM_START=0x20000000
CONFIG_RAM_SIZE=0x42000
CONFIG_STACK_SIZE=512
CONFIG_FLASH_APPLICATION_ADDRESS=0x10000100
CONFIG_RP2040_SELECT=y
CONFIG_RP2040_HAVE_STAGE2=y
CONFIG_RP2040_FLASH_START_0100=y
# CONFIG_RP2040_FLASH_START_4000 is not set
CONFIG_RP2040_FLASH_W25Q080=y
# CONFIG_RP2040_FLASH_GENERIC_03 is not set
CONFIG_RP2040_STAGE2_FILE="boot2_w25q080.S"
CONFIG_RP2040_STAGE2_CLKDIV=2
CONFIG_RP2040_USB=y
# CONFIG_RP2040_SERIAL_UART0 is not set
# CONFIG_RP2040_CANBUS is not set
# CONFIG_RP2040_USBCANBUS is not set
CONFIG_RP2040_CANBUS_GPIO_RX=4
CONFIG_RP2040_CANBUS_GPIO_TX=5
CONFIG_USB=y
CONFIG_USB_VENDOR_ID=0x1d50
CONFIG_USB_DEVICE_ID=0x614e
CONFIG_USB_SERIAL_NUMBER_CHIPID=y
CONFIG_USB_SERIAL_NUMBER="12345"

#
# USB ids
#
# end of USB ids

CONFIG_WANT_GPIO_BITBANGING=y
CONFIG_WANT_DISPLAYS=y
CONFIG_WANT_SENSORS=y
CONFIG_WANT_LIS2DW=y
CONFIG_WANT_SOFTWARE_I2C=y
CONFIG_WANT_SOFTWARE_SPI=y
CONFIG_NEED_SENSOR_BULK=y
CONFIG_CANBUS_FREQUENCY=1000000
CONFIG_INITIAL_PINS=""
CONFIG_HAVE_GPIO=y
CONFIG_HAVE_GPIO_ADC=y
CONFIG_HAVE_GPIO_SPI=y
CONFIG_HAVE_GPIO_I2C=y
CONFIG_HAVE_GPIO_HARD_PWM=y
CONFIG_HAVE_STRICT_TIMING=y
CONFIG_HAVE_CHIPID=y
CONFIG_HAVE_STEPPER_BOTH_EDGE=y
CONFIG_HAVE_BOOTLOADER_REQUEST=y
CONFIG_INLINE_STEPPER_HACK=y
=======================
Build file /home/pi/klipper/klippy/../out/klipper.dict(8110): Fri Apr 19 01:37:04 2024
Last MCU build version: v0.12.0-142-gb029d046
Last MCU build tools: gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.34-4+rpi1+14) 2.34
Last MCU build config: ADC_MAX=4095 BUS_PINS_i2c0a=gpio0,gpio1 BUS_PINS_i2c0b=gpio4,gpio5 BUS_PINS_i2c0c=gpio8,gpio9 BUS_PINS_i2c0d=gpio12,gpio13 BUS_PINS_i2c0e=gpio16,gpio17 BUS_PINS_i2c0f=gpio20,gpio21 BUS_PINS_i2c0g=gpio24,gpio25 BUS_PINS_i2c0h=gpio28,gpio29 BUS_PINS_i2c1a=gpio2,gpio3 BUS_PINS_i2c1b=gpio6,gpio7 BUS_PINS_i2c1c=gpio10,gpio11 BUS_PINS_i2c1d=gpio14,gpio15 BUS_PINS_i2c1e=gpio18,gpio19 BUS_PINS_i2c1f=gpio22,gpio23 BUS_PINS_i2c1g=gpio26,gpio27 BUS_PINS_spi0a=gpio0,gpio3,gpio2 BUS_PINS_spi0b=gpio4,gpio7,gpio6 BUS_PINS_spi0c=gpio16,gpio19,gpio18 BUS_PINS_spi0d=gpio20,gpio23,gpio22 BUS_PINS_spi1a=gpio8,gpio11,gpio10 BUS_PINS_spi1b=gpio12,gpio15,gpio14 BUS_PINS_spi1c=gpio24,gpio27,gpio26 CLOCK_FREQ=12000000 MCU=rp2040 PWM_MAX=255 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
Build file /home/pi/klipper/klippy/../out/klipper.elf(1780784): Fri Apr 19 01:37:10 2024
